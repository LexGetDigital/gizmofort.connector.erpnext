/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/13/2022 7:48:39 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Accounts.BankClearanceDetail
{
    public partial class ERP_Accounts_BankClearanceDetail : ERPNextObjectBase
    {
        public ERP_Accounts_BankClearanceDetail() : this(new ERPObject(_DocType.Accounts_BankClearanceDetail)) { }
        public ERP_Accounts_BankClearanceDetail(ERPObject obj) : base(obj) { }

        //public static string? GetColumnName(string propertyName)
        //{
        //    return ERPNextObjectBase.GetColumnName<ERP_Accounts_BankClearanceDetail>(propertyName);
        //}

        //public static string? GetPropertyName(string columnName)
        //{
        //    return ERPNextObjectBase.GetPropertyName<ERP_Accounts_BankClearanceDetail>(columnName);
        //}

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("payment_document", "varchar(140)", isNullable: true)]
        public string? PaymentDocument
        {
            get { return data.payment_document; }
            set { data.payment_document = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("payment_entry", "varchar(140)", isNullable: true)]
        public string? PaymentEntry
        {
            get { return data.payment_entry; }
            set { data.payment_entry = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("against_account", "varchar(140)", isNullable: true)]
        public string? AgainstAccount
        {
            get { return data.against_account; }
            set { data.against_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("amount", "varchar(140)", isNullable: true)]
        public string? Amount
        {
            get { return data.amount; }
            set { data.amount = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("posting_date", "date", isNullable: true)]
        public DateOnly? PostingDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.posting_date); }
            set { data.posting_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("cheque_number", "varchar(140)", isNullable: true)]
        public string? ChequeNumber
        {
            get { return data.cheque_number; }
            set { data.cheque_number = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("cheque_date", "date", isNullable: true)]
        public DateOnly? ChequeDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.cheque_date); }
            set { data.cheque_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("clearance_date", "date", isNullable: true)]
        public DateOnly? ClearanceDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.clearance_date); }
            set { data.clearance_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("parent", "varchar(140)", isNullable: true)]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parentfield", "varchar(140)", isNullable: true)]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parenttype", "varchar(140)", isNullable: true)]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = ERPNextConverter.TruncateString(value, 140); }
        }


    }
}

