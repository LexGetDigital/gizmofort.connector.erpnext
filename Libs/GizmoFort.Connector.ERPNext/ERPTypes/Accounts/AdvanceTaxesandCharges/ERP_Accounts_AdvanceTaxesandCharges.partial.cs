/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Accounts.AdvanceTaxesandCharges
{
    public partial class ERP_Accounts_AdvanceTaxesandCharges : ERPNextObjectBase
    {
        public ERP_Accounts_AdvanceTaxesandCharges() : this(new ERPObject(_DocType.Accounts_AdvanceTaxesandCharges)) { }
        public ERP_Accounts_AdvanceTaxesandCharges(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("add_deduct_tax", "varchar(140)", isNullable: true)]
        public string? AddDeductTax
        {
            get { return data.add_deduct_tax; }
            set { data.add_deduct_tax = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("charge_type", "varchar(140)", isNullable: true)]
        public string? ChargeType
        {
            get { return data.charge_type; }
            set { data.charge_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("row_id", "varchar(140)", isNullable: true)]
        public string? RowId
        {
            get { return data.row_id; }
            set { data.row_id = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("account_head", "varchar(140)", isNullable: true)]
        public string? AccountHead
        {
            get { return data.account_head; }
            set { data.account_head = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("description", "text", isNullable: true)]
        public string? Description
        {
            get { return data.description; }
            set { data.description = value; }
        }

        [ColumnInfo("included_in_paid_amount", "int(1)", isNullable: false)]
        public bool IncludedInPaidAmount
        {
            get { return ERPNextConverter.IntToBool((int)data.included_in_paid_amount); }
            set { data.included_in_paid_amount = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("cost_center", "varchar(140)", isNullable: true)]
        public string? CostCenter
        {
            get { return data.cost_center; }
            set { data.cost_center = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("rate", "decimal(21,9)", isNullable: false)]
        public decimal Rate
        {
            get { return data.rate; }
            set { data.rate = value; }
        }

        [ColumnInfo("currency", "varchar(140)", isNullable: true)]
        public string? Currency
        {
            get { return data.currency; }
            set { data.currency = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("tax_amount", "decimal(21,9)", isNullable: false)]
        public decimal TaxAmount
        {
            get { return data.tax_amount; }
            set { data.tax_amount = value; }
        }

        [ColumnInfo("total", "decimal(21,9)", isNullable: false)]
        public decimal Total
        {
            get { return data.total; }
            set { data.total = value; }
        }

        [ColumnInfo("allocated_amount", "decimal(21,9)", isNullable: false)]
        public decimal AllocatedAmount
        {
            get { return data.allocated_amount; }
            set { data.allocated_amount = value; }
        }

        [ColumnInfo("base_tax_amount", "decimal(21,9)", isNullable: false)]
        public decimal BaseTaxAmount
        {
            get { return data.base_tax_amount; }
            set { data.base_tax_amount = value; }
        }

        [ColumnInfo("base_total", "decimal(21,9)", isNullable: false)]
        public decimal BaseTotal
        {
            get { return data.base_total; }
            set { data.base_total = value; }
        }

        [ColumnInfo("parent", "varchar(140)", isNullable: true)]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parentfield", "varchar(140)", isNullable: true)]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parenttype", "varchar(140)", isNullable: true)]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = ERPNextConverter.TruncateString(value, 140); }
        }


    }
}

