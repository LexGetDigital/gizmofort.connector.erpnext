/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Accounts.PaymentSchedule
{
    public partial class ERP_Accounts_PaymentSchedule : ERPNextObjectBase
    {
        public ERP_Accounts_PaymentSchedule() : this(new ERPObject(_DocType.Accounts_PaymentSchedule)) { }
        public ERP_Accounts_PaymentSchedule(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("payment_term", "varchar(140)", isNullable: true)]
        public string? PaymentTerm
        {
            get { return data.payment_term; }
            set { data.payment_term = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("description", "text", isNullable: true)]
        public string? Description
        {
            get { return data.description; }
            set { data.description = value; }
        }

        [ColumnInfo("due_date", "date", isNullable: true)]
        public DateOnly? DueDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.due_date); }
            set { data.due_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("mode_of_payment", "varchar(140)", isNullable: true)]
        public string? ModeOfPayment
        {
            get { return data.mode_of_payment; }
            set { data.mode_of_payment = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("invoice_portion", "decimal(21,9)", isNullable: false)]
        public decimal InvoicePortion
        {
            get { return data.invoice_portion; }
            set { data.invoice_portion = value; }
        }

        [ColumnInfo("discount_type", "varchar(140)", isNullable: true)]
        public string? DiscountType
        {
            get { return data.discount_type; }
            set { data.discount_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("discount_date", "date", isNullable: true)]
        public DateOnly? DiscountDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.discount_date); }
            set { data.discount_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("discount", "decimal(21,9)", isNullable: false)]
        public decimal Discount
        {
            get { return data.discount; }
            set { data.discount = value; }
        }

        [ColumnInfo("payment_amount", "decimal(21,9)", isNullable: false)]
        public decimal PaymentAmount
        {
            get { return data.payment_amount; }
            set { data.payment_amount = value; }
        }

        [ColumnInfo("outstanding", "decimal(21,9)", isNullable: false)]
        public decimal Outstanding
        {
            get { return data.outstanding; }
            set { data.outstanding = value; }
        }

        [ColumnInfo("paid_amount", "decimal(21,9)", isNullable: false)]
        public decimal PaidAmount
        {
            get { return data.paid_amount; }
            set { data.paid_amount = value; }
        }

        [ColumnInfo("discounted_amount", "decimal(21,9)", isNullable: false)]
        public decimal DiscountedAmount
        {
            get { return data.discounted_amount; }
            set { data.discounted_amount = value; }
        }

        [ColumnInfo("base_payment_amount", "decimal(21,9)", isNullable: false)]
        public decimal BasePaymentAmount
        {
            get { return data.base_payment_amount; }
            set { data.base_payment_amount = value; }
        }

        [ColumnInfo("parent", "varchar(140)", isNullable: true)]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parentfield", "varchar(140)", isNullable: true)]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parenttype", "varchar(140)", isNullable: true)]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = ERPNextConverter.TruncateString(value, 140); }
        }


    }
}

