/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/13/2022 7:48:39 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Accounts.Subscription
{
    public partial class ERP_Accounts_Subscription : ERPNextObjectBase
    {
        public ERP_Accounts_Subscription() : this(new ERPObject(_DocType.Accounts_Subscription)) { }
        public ERP_Accounts_Subscription(ERPObject obj) : base(obj) { }

        //public static string? GetColumnName(string propertyName)
        //{
        //    return ERPNextObjectBase.GetColumnName<ERP_Accounts_Subscription>(propertyName);
        //}

        //public static string? GetPropertyName(string columnName)
        //{
        //    return ERPNextObjectBase.GetPropertyName<ERP_Accounts_Subscription>(columnName);
        //}

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("party_type", "varchar(140)", isNullable: true)]
        public string? PartyType
        {
            get { return data.party_type; }
            set { data.party_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("party", "varchar(140)", isNullable: true)]
        public string? Party
        {
            get { return data.party; }
            set { data.party = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("status", "varchar(140)", isNullable: true)]
        public string? Status
        {
            get { return data.status; }
            set { data.status = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("start_date", "date", isNullable: true)]
        public DateOnly? StartDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.start_date); }
            set { data.start_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("end_date", "date", isNullable: true)]
        public DateOnly? EndDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.end_date); }
            set { data.end_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("cancelation_date", "date", isNullable: true)]
        public DateOnly? CancelationDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.cancelation_date); }
            set { data.cancelation_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("trial_period_start", "date", isNullable: true)]
        public DateOnly? TrialPeriodStart
        {
            get { return ERPNextConverter.StringToDateOnly(data.trial_period_start); }
            set { data.trial_period_start = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("trial_period_end", "date", isNullable: true)]
        public DateOnly? TrialPeriodEnd
        {
            get { return ERPNextConverter.StringToDateOnly(data.trial_period_end); }
            set { data.trial_period_end = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("follow_calendar_months", "int(1)", isNullable: false)]
        public bool FollowCalendarMonths
        {
            get { return ERPNextConverter.IntToBool((int)data.follow_calendar_months); }
            set { data.follow_calendar_months = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("generate_new_invoices_past_due_date", "int(1)", isNullable: false)]
        public bool GenerateNewInvoicesPastDueDate
        {
            get { return ERPNextConverter.IntToBool((int)data.generate_new_invoices_past_due_date); }
            set { data.generate_new_invoices_past_due_date = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("current_invoice_start", "date", isNullable: true)]
        public DateOnly? CurrentInvoiceStart
        {
            get { return ERPNextConverter.StringToDateOnly(data.current_invoice_start); }
            set { data.current_invoice_start = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("current_invoice_end", "date", isNullable: true)]
        public DateOnly? CurrentInvoiceEnd
        {
            get { return ERPNextConverter.StringToDateOnly(data.current_invoice_end); }
            set { data.current_invoice_end = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("days_until_due", "int(11)", isNullable: false)]
        public int DaysUntilDue
        {
            get { return data.days_until_due; }
            set { data.days_until_due = value; }
        }

        [ColumnInfo("cancel_at_period_end", "int(1)", isNullable: false)]
        public bool CancelAtPeriodEnd
        {
            get { return ERPNextConverter.IntToBool((int)data.cancel_at_period_end); }
            set { data.cancel_at_period_end = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("generate_invoice_at_period_start", "int(1)", isNullable: false)]
        public bool GenerateInvoiceAtPeriodStart
        {
            get { return ERPNextConverter.IntToBool((int)data.generate_invoice_at_period_start); }
            set { data.generate_invoice_at_period_start = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("sales_tax_template", "varchar(140)", isNullable: true)]
        public string? SalesTaxTemplate
        {
            get { return data.sales_tax_template; }
            set { data.sales_tax_template = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("purchase_tax_template", "varchar(140)", isNullable: true)]
        public string? PurchaseTaxTemplate
        {
            get { return data.purchase_tax_template; }
            set { data.purchase_tax_template = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("apply_additional_discount", "varchar(140)", isNullable: true)]
        public string? ApplyAdditionalDiscount
        {
            get { return data.apply_additional_discount; }
            set { data.apply_additional_discount = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("additional_discount_percentage", "decimal(21,9)", isNullable: false)]
        public decimal AdditionalDiscountPercentage
        {
            get { return data.additional_discount_percentage; }
            set { data.additional_discount_percentage = value; }
        }

        [ColumnInfo("additional_discount_amount", "decimal(21,9)", isNullable: false)]
        public decimal AdditionalDiscountAmount
        {
            get { return data.additional_discount_amount; }
            set { data.additional_discount_amount = value; }
        }

        [ColumnInfo("submit_invoice", "int(1)", isNullable: false)]
        public bool SubmitInvoice
        {
            get { return ERPNextConverter.IntToBool((int)data.submit_invoice); }
            set { data.submit_invoice = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("cost_center", "varchar(140)", isNullable: true)]
        public string? CostCenter
        {
            get { return data.cost_center; }
            set { data.cost_center = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

