/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Accounts.TaxRule
{
    public partial class ERP_Accounts_TaxRule : ERPNextObjectBase
    {
        public ERP_Accounts_TaxRule() : this(new ERPObject(_DocType.Accounts_TaxRule)) { }
        public ERP_Accounts_TaxRule(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("tax_type", "varchar(140)", isNullable: true)]
        public string? TaxType
        {
            get { return data.tax_type; }
            set { data.tax_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("use_for_shopping_cart", "int(1)", isNullable: false)]
        public bool UseForShoppingCart
        {
            get { return ERPNextConverter.IntToBool((int)data.use_for_shopping_cart); }
            set { data.use_for_shopping_cart = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("sales_tax_template", "varchar(140)", isNullable: true)]
        public string? SalesTaxTemplate
        {
            get { return data.sales_tax_template; }
            set { data.sales_tax_template = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("purchase_tax_template", "varchar(140)", isNullable: true)]
        public string? PurchaseTaxTemplate
        {
            get { return data.purchase_tax_template; }
            set { data.purchase_tax_template = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("customer", "varchar(140)", isNullable: true)]
        public string? Customer
        {
            get { return data.customer; }
            set { data.customer = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("supplier", "varchar(140)", isNullable: true)]
        public string? Supplier
        {
            get { return data.supplier; }
            set { data.supplier = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("item", "varchar(140)", isNullable: true)]
        public string? Item
        {
            get { return data.item; }
            set { data.item = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("billing_city", "varchar(140)", isNullable: true)]
        public string? BillingCity
        {
            get { return data.billing_city; }
            set { data.billing_city = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("billing_county", "varchar(140)", isNullable: true)]
        public string? BillingCounty
        {
            get { return data.billing_county; }
            set { data.billing_county = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("billing_state", "varchar(140)", isNullable: true)]
        public string? BillingState
        {
            get { return data.billing_state; }
            set { data.billing_state = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("billing_zipcode", "varchar(140)", isNullable: true)]
        public string? BillingZipcode
        {
            get { return data.billing_zipcode; }
            set { data.billing_zipcode = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("billing_country", "varchar(140)", isNullable: true)]
        public string? BillingCountry
        {
            get { return data.billing_country; }
            set { data.billing_country = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("tax_category", "varchar(140)", isNullable: true)]
        public string? TaxCategory
        {
            get { return data.tax_category; }
            set { data.tax_category = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("customer_group", "varchar(140)", isNullable: true)]
        public string? CustomerGroup
        {
            get { return data.customer_group; }
            set { data.customer_group = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("supplier_group", "varchar(140)", isNullable: true)]
        public string? SupplierGroup
        {
            get { return data.supplier_group; }
            set { data.supplier_group = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("item_group", "varchar(140)", isNullable: true)]
        public string? ItemGroup
        {
            get { return data.item_group; }
            set { data.item_group = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("shipping_city", "varchar(140)", isNullable: true)]
        public string? ShippingCity
        {
            get { return data.shipping_city; }
            set { data.shipping_city = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("shipping_county", "varchar(140)", isNullable: true)]
        public string? ShippingCounty
        {
            get { return data.shipping_county; }
            set { data.shipping_county = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("shipping_state", "varchar(140)", isNullable: true)]
        public string? ShippingState
        {
            get { return data.shipping_state; }
            set { data.shipping_state = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("shipping_zipcode", "varchar(140)", isNullable: true)]
        public string? ShippingZipcode
        {
            get { return data.shipping_zipcode; }
            set { data.shipping_zipcode = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("shipping_country", "varchar(140)", isNullable: true)]
        public string? ShippingCountry
        {
            get { return data.shipping_country; }
            set { data.shipping_country = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("from_date", "date", isNullable: true)]
        public DateOnly? FromDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.from_date); }
            set { data.from_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("to_date", "date", isNullable: true)]
        public DateOnly? ToDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.to_date); }
            set { data.to_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("priority", "int(11)", isNullable: false)]
        public int Priority
        {
            get { return data.priority; }
            set { data.priority = value; }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

