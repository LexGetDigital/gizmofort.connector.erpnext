/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Accounts.InvoiceDiscounting
{
    public partial class ERP_Accounts_InvoiceDiscounting : ERPNextObjectBase
    {
        public ERP_Accounts_InvoiceDiscounting() : this(new ERPObject(_DocType.Accounts_InvoiceDiscounting)) { }
        public ERP_Accounts_InvoiceDiscounting(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("posting_date", "date", isNullable: true)]
        public DateOnly? PostingDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.posting_date); }
            set { data.posting_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("loan_start_date", "date", isNullable: true)]
        public DateOnly? LoanStartDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.loan_start_date); }
            set { data.loan_start_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("loan_period", "int(11)", isNullable: false)]
        public int LoanPeriod
        {
            get { return data.loan_period; }
            set { data.loan_period = value; }
        }

        [ColumnInfo("loan_end_date", "date", isNullable: true)]
        public DateOnly? LoanEndDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.loan_end_date); }
            set { data.loan_end_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("status", "varchar(140)", isNullable: true)]
        public string? Status
        {
            get { return data.status; }
            set { data.status = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("total_amount", "decimal(21,9)", isNullable: false)]
        public decimal TotalAmount
        {
            get { return data.total_amount; }
            set { data.total_amount = value; }
        }

        [ColumnInfo("bank_charges", "decimal(21,9)", isNullable: false)]
        public decimal BankCharges
        {
            get { return data.bank_charges; }
            set { data.bank_charges = value; }
        }

        [ColumnInfo("short_term_loan", "varchar(140)", isNullable: true)]
        public string? ShortTermLoan
        {
            get { return data.short_term_loan; }
            set { data.short_term_loan = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("bank_account", "varchar(140)", isNullable: true)]
        public string? BankAccount
        {
            get { return data.bank_account; }
            set { data.bank_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("bank_charges_account", "varchar(140)", isNullable: true)]
        public string? BankChargesAccount
        {
            get { return data.bank_charges_account; }
            set { data.bank_charges_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("accounts_receivable_credit", "varchar(140)", isNullable: true)]
        public string? AccountsReceivableCredit
        {
            get { return data.accounts_receivable_credit; }
            set { data.accounts_receivable_credit = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("accounts_receivable_discounted", "varchar(140)", isNullable: true)]
        public string? AccountsReceivableDiscounted
        {
            get { return data.accounts_receivable_discounted; }
            set { data.accounts_receivable_discounted = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("accounts_receivable_unpaid", "varchar(140)", isNullable: true)]
        public string? AccountsReceivableUnpaid
        {
            get { return data.accounts_receivable_unpaid; }
            set { data.accounts_receivable_unpaid = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("amended_from", "varchar(140)", isNullable: true)]
        public string? AmendedFrom
        {
            get { return data.amended_from; }
            set { data.amended_from = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

