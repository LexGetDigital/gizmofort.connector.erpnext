/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Accounts.PromotionalSchemeProductDiscount
{
    public partial class ERP_Accounts_PromotionalSchemeProductDiscount : ERPNextObjectBase
    {
        public ERP_Accounts_PromotionalSchemeProductDiscount() : this(new ERPObject(_DocType.Accounts_PromotionalSchemeProductDiscount)) { }
        public ERP_Accounts_PromotionalSchemeProductDiscount(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("disable", "int(1)", isNullable: false)]
        public bool Disable
        {
            get { return ERPNextConverter.IntToBool((int)data.disable); }
            set { data.disable = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("apply_multiple_pricing_rules", "int(1)", isNullable: false)]
        public bool ApplyMultiplePricingRules
        {
            get { return ERPNextConverter.IntToBool((int)data.apply_multiple_pricing_rules); }
            set { data.apply_multiple_pricing_rules = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("rule_description", "text", isNullable: true)]
        public string? RuleDescription
        {
            get { return data.rule_description; }
            set { data.rule_description = value; }
        }

        [ColumnInfo("min_qty", "decimal(21,9)", isNullable: false)]
        public decimal MinQty
        {
            get { return data.min_qty; }
            set { data.min_qty = value; }
        }

        [ColumnInfo("max_qty", "decimal(21,9)", isNullable: false)]
        public decimal MaxQty
        {
            get { return data.max_qty; }
            set { data.max_qty = value; }
        }

        [ColumnInfo("min_amount", "decimal(21,9)", isNullable: false)]
        public decimal MinAmount
        {
            get { return data.min_amount; }
            set { data.min_amount = value; }
        }

        [ColumnInfo("max_amount", "decimal(21,9)", isNullable: false)]
        public decimal MaxAmount
        {
            get { return data.max_amount; }
            set { data.max_amount = value; }
        }

        [ColumnInfo("same_item", "int(1)", isNullable: false)]
        public bool SameItem
        {
            get { return ERPNextConverter.IntToBool((int)data.same_item); }
            set { data.same_item = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("free_item", "varchar(140)", isNullable: true)]
        public string? FreeItem
        {
            get { return data.free_item; }
            set { data.free_item = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("free_qty", "decimal(21,9)", isNullable: false)]
        public decimal FreeQty
        {
            get { return data.free_qty; }
            set { data.free_qty = value; }
        }

        [ColumnInfo("free_item_uom", "varchar(140)", isNullable: true)]
        public string? FreeItemUom
        {
            get { return data.free_item_uom; }
            set { data.free_item_uom = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("free_item_rate", "decimal(21,9)", isNullable: false)]
        public decimal FreeItemRate
        {
            get { return data.free_item_rate; }
            set { data.free_item_rate = value; }
        }

        [ColumnInfo("warehouse", "varchar(140)", isNullable: true)]
        public string? Warehouse
        {
            get { return data.warehouse; }
            set { data.warehouse = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("threshold_percentage", "decimal(21,9)", isNullable: false)]
        public decimal ThresholdPercentage
        {
            get { return data.threshold_percentage; }
            set { data.threshold_percentage = value; }
        }

        [ColumnInfo("priority", "varchar(140)", isNullable: true)]
        public string? Priority
        {
            get { return data.priority; }
            set { data.priority = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("is_recursive", "int(1)", isNullable: false)]
        public bool IsRecursive
        {
            get { return ERPNextConverter.IntToBool((int)data.is_recursive); }
            set { data.is_recursive = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("parent", "varchar(140)", isNullable: true)]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parentfield", "varchar(140)", isNullable: true)]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parenttype", "varchar(140)", isNullable: true)]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = ERPNextConverter.TruncateString(value, 140); }
        }


    }
}

