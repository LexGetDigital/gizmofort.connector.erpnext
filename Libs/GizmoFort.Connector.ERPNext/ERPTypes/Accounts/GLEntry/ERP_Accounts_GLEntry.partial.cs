/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/13/2022 7:48:39 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Accounts.GLEntry
{
    public partial class ERP_Accounts_GLEntry : ERPNextObjectBase
    {
        public ERP_Accounts_GLEntry() : this(new ERPObject(_DocType.Accounts_GLEntry)) { }
        public ERP_Accounts_GLEntry(ERPObject obj) : base(obj) { }

        //public static string? GetColumnName(string propertyName)
        //{
        //    return ERPNextObjectBase.GetColumnName<ERP_Accounts_GLEntry>(propertyName);
        //}

        //public static string? GetPropertyName(string columnName)
        //{
        //    return ERPNextObjectBase.GetPropertyName<ERP_Accounts_GLEntry>(columnName);
        //}

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("posting_date", "date", isNullable: true)]
        public DateOnly? PostingDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.posting_date); }
            set { data.posting_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("transaction_date", "date", isNullable: true)]
        public DateOnly? TransactionDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.transaction_date); }
            set { data.transaction_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("account", "varchar(140)", isNullable: true)]
        public string? Account
        {
            get { return data.account; }
            set { data.account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("party_type", "varchar(140)", isNullable: true)]
        public string? PartyType
        {
            get { return data.party_type; }
            set { data.party_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("party", "varchar(140)", isNullable: true)]
        public string? Party
        {
            get { return data.party; }
            set { data.party = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("cost_center", "varchar(140)", isNullable: true)]
        public string? CostCenter
        {
            get { return data.cost_center; }
            set { data.cost_center = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("debit", "decimal(21,9)", isNullable: false)]
        public decimal Debit
        {
            get { return data.debit; }
            set { data.debit = value; }
        }

        [ColumnInfo("credit", "decimal(21,9)", isNullable: false)]
        public decimal Credit
        {
            get { return data.credit; }
            set { data.credit = value; }
        }

        [ColumnInfo("account_currency", "varchar(140)", isNullable: true)]
        public string? AccountCurrency
        {
            get { return data.account_currency; }
            set { data.account_currency = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("debit_in_account_currency", "decimal(21,9)", isNullable: false)]
        public decimal DebitInAccountCurrency
        {
            get { return data.debit_in_account_currency; }
            set { data.debit_in_account_currency = value; }
        }

        [ColumnInfo("credit_in_account_currency", "decimal(21,9)", isNullable: false)]
        public decimal CreditInAccountCurrency
        {
            get { return data.credit_in_account_currency; }
            set { data.credit_in_account_currency = value; }
        }

        [ColumnInfo("against", "text", isNullable: true)]
        public string? Against
        {
            get { return data.against; }
            set { data.against = value; }
        }

        [ColumnInfo("against_voucher_type", "varchar(140)", isNullable: true)]
        public string? AgainstVoucherType
        {
            get { return data.against_voucher_type; }
            set { data.against_voucher_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("against_voucher", "varchar(140)", isNullable: true)]
        public string? AgainstVoucher
        {
            get { return data.against_voucher; }
            set { data.against_voucher = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("voucher_type", "varchar(140)", isNullable: true)]
        public string? VoucherType
        {
            get { return data.voucher_type; }
            set { data.voucher_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("voucher_no", "varchar(140)", isNullable: true)]
        public string? VoucherNo
        {
            get { return data.voucher_no; }
            set { data.voucher_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("voucher_detail_no", "varchar(140)", isNullable: true)]
        public string? VoucherDetailNo
        {
            get { return data.voucher_detail_no; }
            set { data.voucher_detail_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("project", "varchar(140)", isNullable: true)]
        public string? Project
        {
            get { return data.project; }
            set { data.project = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("remarks", "text", isNullable: true)]
        public string? Remarks
        {
            get { return data.remarks; }
            set { data.remarks = value; }
        }

        [ColumnInfo("is_opening", "varchar(140)", isNullable: true)]
        public string? IsOpening
        {
            get { return data.is_opening; }
            set { data.is_opening = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("is_advance", "varchar(140)", isNullable: true)]
        public string? IsAdvance
        {
            get { return data.is_advance; }
            set { data.is_advance = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("fiscal_year", "varchar(140)", isNullable: true)]
        public string? FiscalYear
        {
            get { return data.fiscal_year; }
            set { data.fiscal_year = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("finance_book", "varchar(140)", isNullable: true)]
        public string? FinanceBook
        {
            get { return data.finance_book; }
            set { data.finance_book = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("to_rename", "int(1)", isNullable: false)]
        public bool ToRename
        {
            get { return ERPNextConverter.IntToBool((int)data.to_rename); }
            set { data.to_rename = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("due_date", "date", isNullable: true)]
        public DateOnly? DueDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.due_date); }
            set { data.due_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("is_cancelled", "int(1)", isNullable: false)]
        public bool IsCancelled
        {
            get { return ERPNextConverter.IntToBool((int)data.is_cancelled); }
            set { data.is_cancelled = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

