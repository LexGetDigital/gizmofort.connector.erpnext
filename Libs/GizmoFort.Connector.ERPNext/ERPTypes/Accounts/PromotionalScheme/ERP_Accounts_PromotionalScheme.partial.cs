/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Accounts.PromotionalScheme
{
    public partial class ERP_Accounts_PromotionalScheme : ERPNextObjectBase
    {
        public ERP_Accounts_PromotionalScheme() : this(new ERPObject(_DocType.Accounts_PromotionalScheme)) { }
        public ERP_Accounts_PromotionalScheme(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("apply_on", "varchar(140)", isNullable: true)]
        public string? ApplyOn
        {
            get { return data.apply_on; }
            set { data.apply_on = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("disable", "int(1)", isNullable: false)]
        public bool Disable
        {
            get { return ERPNextConverter.IntToBool((int)data.disable); }
            set { data.disable = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("mixed_conditions", "int(1)", isNullable: false)]
        public bool MixedConditions
        {
            get { return ERPNextConverter.IntToBool((int)data.mixed_conditions); }
            set { data.mixed_conditions = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("is_cumulative", "int(1)", isNullable: false)]
        public bool IsCumulative
        {
            get { return ERPNextConverter.IntToBool((int)data.is_cumulative); }
            set { data.is_cumulative = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("apply_rule_on_other", "varchar(140)", isNullable: true)]
        public string? ApplyRuleOnOther
        {
            get { return data.apply_rule_on_other; }
            set { data.apply_rule_on_other = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("other_item_code", "varchar(140)", isNullable: true)]
        public string? OtherItemCode
        {
            get { return data.other_item_code; }
            set { data.other_item_code = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("other_item_group", "varchar(140)", isNullable: true)]
        public string? OtherItemGroup
        {
            get { return data.other_item_group; }
            set { data.other_item_group = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("other_brand", "varchar(140)", isNullable: true)]
        public string? OtherBrand
        {
            get { return data.other_brand; }
            set { data.other_brand = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("selling", "int(1)", isNullable: false)]
        public bool Selling
        {
            get { return ERPNextConverter.IntToBool((int)data.selling); }
            set { data.selling = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("buying", "int(1)", isNullable: false)]
        public bool Buying
        {
            get { return ERPNextConverter.IntToBool((int)data.buying); }
            set { data.buying = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("applicable_for", "varchar(140)", isNullable: true)]
        public string? ApplicableFor
        {
            get { return data.applicable_for; }
            set { data.applicable_for = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("valid_from", "date", isNullable: true)]
        public DateOnly? ValidFrom
        {
            get { return ERPNextConverter.StringToDateOnly(data.valid_from); }
            set { data.valid_from = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("valid_upto", "date", isNullable: true)]
        public DateOnly? ValidUpto
        {
            get { return ERPNextConverter.StringToDateOnly(data.valid_upto); }
            set { data.valid_upto = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("currency", "varchar(140)", isNullable: true)]
        public string? Currency
        {
            get { return data.currency; }
            set { data.currency = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

