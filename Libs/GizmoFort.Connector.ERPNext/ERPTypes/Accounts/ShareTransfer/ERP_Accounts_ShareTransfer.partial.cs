/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Accounts.ShareTransfer
{
    public partial class ERP_Accounts_ShareTransfer : ERPNextObjectBase
    {
        public ERP_Accounts_ShareTransfer() : this(new ERPObject(_DocType.Accounts_ShareTransfer)) { }
        public ERP_Accounts_ShareTransfer(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("transfer_type", "varchar(140)", isNullable: true)]
        public string? TransferType
        {
            get { return data.transfer_type; }
            set { data.transfer_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("date", "date", isNullable: true)]
        public DateOnly? Date
        {
            get { return ERPNextConverter.StringToDateOnly(data.date); }
            set { data.date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("from_shareholder", "varchar(140)", isNullable: true)]
        public string? FromShareholder
        {
            get { return data.from_shareholder; }
            set { data.from_shareholder = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("from_folio_no", "varchar(140)", isNullable: true)]
        public string? FromFolioNo
        {
            get { return data.from_folio_no; }
            set { data.from_folio_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("to_shareholder", "varchar(140)", isNullable: true)]
        public string? ToShareholder
        {
            get { return data.to_shareholder; }
            set { data.to_shareholder = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("to_folio_no", "varchar(140)", isNullable: true)]
        public string? ToFolioNo
        {
            get { return data.to_folio_no; }
            set { data.to_folio_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("equity_or_liability_account", "varchar(140)", isNullable: true)]
        public string? EquityOrLiabilityAccount
        {
            get { return data.equity_or_liability_account; }
            set { data.equity_or_liability_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("asset_account", "varchar(140)", isNullable: true)]
        public string? AssetAccount
        {
            get { return data.asset_account; }
            set { data.asset_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("share_type", "varchar(140)", isNullable: true)]
        public string? ShareType
        {
            get { return data.share_type; }
            set { data.share_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("from_no", "int(11)", isNullable: false)]
        public int FromNo
        {
            get { return data.from_no; }
            set { data.from_no = value; }
        }

        [ColumnInfo("rate", "decimal(21,9)", isNullable: false)]
        public decimal Rate
        {
            get { return data.rate; }
            set { data.rate = value; }
        }

        [ColumnInfo("no_of_shares", "int(11)", isNullable: false)]
        public int NoOfShares
        {
            get { return data.no_of_shares; }
            set { data.no_of_shares = value; }
        }

        [ColumnInfo("to_no", "int(11)", isNullable: false)]
        public int ToNo
        {
            get { return data.to_no; }
            set { data.to_no = value; }
        }

        [ColumnInfo("amount", "decimal(21,9)", isNullable: false)]
        public decimal Amount
        {
            get { return data.amount; }
            set { data.amount = value; }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("remarks", "longtext", isNullable: true)]
        public string? Remarks
        {
            get { return data.remarks; }
            set { data.remarks = value; }
        }

        [ColumnInfo("amended_from", "varchar(140)", isNullable: true)]
        public string? AmendedFrom
        {
            get { return data.amended_from; }
            set { data.amended_from = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

