/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/13/2022 7:48:39 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Accounts.ProcessStatementOfAccounts
{
    public partial class ERP_Accounts_ProcessStatementOfAccounts : ERPNextObjectBase
    {
        public ERP_Accounts_ProcessStatementOfAccounts() : this(new ERPObject(_DocType.Accounts_ProcessStatementOfAccounts)) { }
        public ERP_Accounts_ProcessStatementOfAccounts(ERPObject obj) : base(obj) { }

        //public static string? GetColumnName(string propertyName)
        //{
        //    return ERPNextObjectBase.GetColumnName<ERP_Accounts_ProcessStatementOfAccounts>(propertyName);
        //}

        //public static string? GetPropertyName(string columnName)
        //{
        //    return ERPNextObjectBase.GetPropertyName<ERP_Accounts_ProcessStatementOfAccounts>(columnName);
        //}

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("from_date", "date", isNullable: true)]
        public DateOnly? FromDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.from_date); }
            set { data.from_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("account", "varchar(140)", isNullable: true)]
        public string? Account
        {
            get { return data.account; }
            set { data.account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("group_by", "varchar(140)", isNullable: true)]
        public string? GroupBy
        {
            get { return data.group_by; }
            set { data.group_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("to_date", "date", isNullable: true)]
        public DateOnly? ToDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.to_date); }
            set { data.to_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("finance_book", "varchar(140)", isNullable: true)]
        public string? FinanceBook
        {
            get { return data.finance_book; }
            set { data.finance_book = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("currency", "varchar(140)", isNullable: true)]
        public string? Currency
        {
            get { return data.currency; }
            set { data.currency = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("customer_collection", "varchar(140)", isNullable: true)]
        public string? CustomerCollection
        {
            get { return data.customer_collection; }
            set { data.customer_collection = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("collection_name", "varchar(140)", isNullable: true)]
        public string? CollectionName
        {
            get { return data.collection_name; }
            set { data.collection_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("primary_mandatory", "int(1)", isNullable: false)]
        public bool PrimaryMandatory
        {
            get { return ERPNextConverter.IntToBool((int)data.primary_mandatory); }
            set { data.primary_mandatory = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("orientation", "varchar(140)", isNullable: true)]
        public string? Orientation
        {
            get { return data.orientation; }
            set { data.orientation = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("include_ageing", "int(1)", isNullable: false)]
        public bool IncludeAgeing
        {
            get { return ERPNextConverter.IntToBool((int)data.include_ageing); }
            set { data.include_ageing = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("ageing_based_on", "varchar(140)", isNullable: true)]
        public string? AgeingBasedOn
        {
            get { return data.ageing_based_on; }
            set { data.ageing_based_on = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("letter_head", "varchar(140)", isNullable: true)]
        public string? LetterHead
        {
            get { return data.letter_head; }
            set { data.letter_head = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("terms_and_conditions", "varchar(140)", isNullable: true)]
        public string? TermsAndConditions
        {
            get { return data.terms_and_conditions; }
            set { data.terms_and_conditions = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("enable_auto_email", "int(1)", isNullable: false)]
        public bool EnableAutoEmail
        {
            get { return ERPNextConverter.IntToBool((int)data.enable_auto_email); }
            set { data.enable_auto_email = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("frequency", "varchar(140)", isNullable: true)]
        public string? Frequency
        {
            get { return data.frequency; }
            set { data.frequency = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("filter_duration", "int(11)", isNullable: false)]
        public int FilterDuration
        {
            get { return data.filter_duration; }
            set { data.filter_duration = value; }
        }

        [ColumnInfo("start_date", "date", isNullable: true)]
        public DateOnly? StartDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.start_date); }
            set { data.start_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("subject", "varchar(140)", isNullable: true)]
        public string? Subject
        {
            get { return data.subject; }
            set { data.subject = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("cc_to", "varchar(140)", isNullable: true)]
        public string? CcTo
        {
            get { return data.cc_to; }
            set { data.cc_to = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("body", "longtext", isNullable: true)]
        public string? Body
        {
            get { return data.body; }
            set { data.body = value; }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

