/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Accounts.PricingRule
{
    public partial class ERP_Accounts_PricingRule : ERPNextObjectBase
    {
        public ERP_Accounts_PricingRule() : this(new ERPObject(_DocType.Accounts_PricingRule)) { }
        public ERP_Accounts_PricingRule(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("naming_series", "varchar(140)", isNullable: true)]
        public string? NamingSeries
        {
            get { return data.naming_series; }
            set { data.naming_series = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("title", "varchar(140)", isNullable: true)]
        public string? Title
        {
            get { return data.title; }
            set { data.title = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("disable", "int(1)", isNullable: false)]
        public bool Disable
        {
            get { return ERPNextConverter.IntToBool((int)data.disable); }
            set { data.disable = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("apply_on", "varchar(140)", isNullable: true)]
        public string? ApplyOn
        {
            get { return data.apply_on; }
            set { data.apply_on = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("price_or_product_discount", "varchar(140)", isNullable: true)]
        public string? PriceOrProductDiscount
        {
            get { return data.price_or_product_discount; }
            set { data.price_or_product_discount = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("warehouse", "varchar(140)", isNullable: true)]
        public string? Warehouse
        {
            get { return data.warehouse; }
            set { data.warehouse = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("mixed_conditions", "int(1)", isNullable: false)]
        public bool MixedConditions
        {
            get { return ERPNextConverter.IntToBool((int)data.mixed_conditions); }
            set { data.mixed_conditions = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("is_cumulative", "int(1)", isNullable: false)]
        public bool IsCumulative
        {
            get { return ERPNextConverter.IntToBool((int)data.is_cumulative); }
            set { data.is_cumulative = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("coupon_code_based", "int(1)", isNullable: false)]
        public bool CouponCodeBased
        {
            get { return ERPNextConverter.IntToBool((int)data.coupon_code_based); }
            set { data.coupon_code_based = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("apply_rule_on_other", "varchar(140)", isNullable: true)]
        public string? ApplyRuleOnOther
        {
            get { return data.apply_rule_on_other; }
            set { data.apply_rule_on_other = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("other_item_code", "varchar(140)", isNullable: true)]
        public string? OtherItemCode
        {
            get { return data.other_item_code; }
            set { data.other_item_code = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("other_item_group", "varchar(140)", isNullable: true)]
        public string? OtherItemGroup
        {
            get { return data.other_item_group; }
            set { data.other_item_group = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("other_brand", "varchar(140)", isNullable: true)]
        public string? OtherBrand
        {
            get { return data.other_brand; }
            set { data.other_brand = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("selling", "int(1)", isNullable: false)]
        public bool Selling
        {
            get { return ERPNextConverter.IntToBool((int)data.selling); }
            set { data.selling = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("buying", "int(1)", isNullable: false)]
        public bool Buying
        {
            get { return ERPNextConverter.IntToBool((int)data.buying); }
            set { data.buying = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("applicable_for", "varchar(140)", isNullable: true)]
        public string? ApplicableFor
        {
            get { return data.applicable_for; }
            set { data.applicable_for = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("customer", "varchar(140)", isNullable: true)]
        public string? Customer
        {
            get { return data.customer; }
            set { data.customer = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("customer_group", "varchar(140)", isNullable: true)]
        public string? CustomerGroup
        {
            get { return data.customer_group; }
            set { data.customer_group = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("territory", "varchar(140)", isNullable: true)]
        public string? Territory
        {
            get { return data.territory; }
            set { data.territory = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("sales_partner", "varchar(140)", isNullable: true)]
        public string? SalesPartner
        {
            get { return data.sales_partner; }
            set { data.sales_partner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("campaign", "varchar(140)", isNullable: true)]
        public string? Campaign
        {
            get { return data.campaign; }
            set { data.campaign = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("supplier", "varchar(140)", isNullable: true)]
        public string? Supplier
        {
            get { return data.supplier; }
            set { data.supplier = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("supplier_group", "varchar(140)", isNullable: true)]
        public string? SupplierGroup
        {
            get { return data.supplier_group; }
            set { data.supplier_group = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("min_qty", "decimal(21,9)", isNullable: false)]
        public decimal MinQty
        {
            get { return data.min_qty; }
            set { data.min_qty = value; }
        }

        [ColumnInfo("max_qty", "decimal(21,9)", isNullable: false)]
        public decimal MaxQty
        {
            get { return data.max_qty; }
            set { data.max_qty = value; }
        }

        [ColumnInfo("min_amt", "decimal(21,9)", isNullable: false)]
        public decimal MinAmt
        {
            get { return data.min_amt; }
            set { data.min_amt = value; }
        }

        [ColumnInfo("max_amt", "decimal(21,9)", isNullable: false)]
        public decimal MaxAmt
        {
            get { return data.max_amt; }
            set { data.max_amt = value; }
        }

        [ColumnInfo("same_item", "int(1)", isNullable: false)]
        public bool SameItem
        {
            get { return ERPNextConverter.IntToBool((int)data.same_item); }
            set { data.same_item = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("free_item", "varchar(140)", isNullable: true)]
        public string? FreeItem
        {
            get { return data.free_item; }
            set { data.free_item = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("free_qty", "decimal(21,9)", isNullable: false)]
        public decimal FreeQty
        {
            get { return data.free_qty; }
            set { data.free_qty = value; }
        }

        [ColumnInfo("free_item_rate", "decimal(21,9)", isNullable: false)]
        public decimal FreeItemRate
        {
            get { return data.free_item_rate; }
            set { data.free_item_rate = value; }
        }

        [ColumnInfo("free_item_uom", "varchar(140)", isNullable: true)]
        public string? FreeItemUom
        {
            get { return data.free_item_uom; }
            set { data.free_item_uom = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("is_recursive", "int(1)", isNullable: false)]
        public bool IsRecursive
        {
            get { return ERPNextConverter.IntToBool((int)data.is_recursive); }
            set { data.is_recursive = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("valid_from", "date", isNullable: true)]
        public DateOnly? ValidFrom
        {
            get { return ERPNextConverter.StringToDateOnly(data.valid_from); }
            set { data.valid_from = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("valid_upto", "date", isNullable: true)]
        public DateOnly? ValidUpto
        {
            get { return ERPNextConverter.StringToDateOnly(data.valid_upto); }
            set { data.valid_upto = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("currency", "varchar(140)", isNullable: true)]
        public string? Currency
        {
            get { return data.currency; }
            set { data.currency = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("margin_type", "varchar(140)", isNullable: true)]
        public string? MarginType
        {
            get { return data.margin_type; }
            set { data.margin_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("margin_rate_or_amount", "decimal(21,9)", isNullable: false)]
        public decimal MarginRateOrAmount
        {
            get { return data.margin_rate_or_amount; }
            set { data.margin_rate_or_amount = value; }
        }

        [ColumnInfo("rate_or_discount", "varchar(140)", isNullable: true)]
        public string? RateOrDiscount
        {
            get { return data.rate_or_discount; }
            set { data.rate_or_discount = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("apply_discount_on", "varchar(140)", isNullable: true)]
        public string? ApplyDiscountOn
        {
            get { return data.apply_discount_on; }
            set { data.apply_discount_on = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("rate", "decimal(21,9)", isNullable: false)]
        public decimal Rate
        {
            get { return data.rate; }
            set { data.rate = value; }
        }

        [ColumnInfo("discount_amount", "decimal(21,9)", isNullable: false)]
        public decimal DiscountAmount
        {
            get { return data.discount_amount; }
            set { data.discount_amount = value; }
        }

        [ColumnInfo("discount_percentage", "decimal(21,9)", isNullable: false)]
        public decimal DiscountPercentage
        {
            get { return data.discount_percentage; }
            set { data.discount_percentage = value; }
        }

        [ColumnInfo("for_price_list", "varchar(140)", isNullable: true)]
        public string? ForPriceList
        {
            get { return data.for_price_list; }
            set { data.for_price_list = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("threshold_percentage", "decimal(21,9)", isNullable: false)]
        public decimal ThresholdPercentage
        {
            get { return data.threshold_percentage; }
            set { data.threshold_percentage = value; }
        }

        [ColumnInfo("priority", "varchar(140)", isNullable: true)]
        public string? Priority
        {
            get { return data.priority; }
            set { data.priority = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("condition", "longtext", isNullable: true)]
        public string? Condition
        {
            get { return data.condition; }
            set { data.condition = value; }
        }

        [ColumnInfo("apply_multiple_pricing_rules", "int(1)", isNullable: false)]
        public bool ApplyMultiplePricingRules
        {
            get { return ERPNextConverter.IntToBool((int)data.apply_multiple_pricing_rules); }
            set { data.apply_multiple_pricing_rules = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("apply_discount_on_rate", "int(1)", isNullable: false)]
        public bool ApplyDiscountOnRate
        {
            get { return ERPNextConverter.IntToBool((int)data.apply_discount_on_rate); }
            set { data.apply_discount_on_rate = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("validate_applied_rule", "int(1)", isNullable: false)]
        public bool ValidateAppliedRule
        {
            get { return ERPNextConverter.IntToBool((int)data.validate_applied_rule); }
            set { data.validate_applied_rule = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("rule_description", "text", isNullable: true)]
        public string? RuleDescription
        {
            get { return data.rule_description; }
            set { data.rule_description = value; }
        }

        [ColumnInfo("promotional_scheme_id", "varchar(140)", isNullable: true)]
        public string? PromotionalSchemeId
        {
            get { return data.promotional_scheme_id; }
            set { data.promotional_scheme_id = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("promotional_scheme", "varchar(140)", isNullable: true)]
        public string? PromotionalScheme
        {
            get { return data.promotional_scheme; }
            set { data.promotional_scheme = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

