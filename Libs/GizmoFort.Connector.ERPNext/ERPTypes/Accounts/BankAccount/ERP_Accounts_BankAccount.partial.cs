/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/13/2022 7:48:39 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Accounts.BankAccount
{
    public partial class ERP_Accounts_BankAccount : ERPNextObjectBase
    {
        public ERP_Accounts_BankAccount() : this(new ERPObject(_DocType.Accounts_BankAccount)) { }
        public ERP_Accounts_BankAccount(ERPObject obj) : base(obj) { }

        //public static string? GetColumnName(string propertyName)
        //{
        //    return ERPNextObjectBase.GetColumnName<ERP_Accounts_BankAccount>(propertyName);
        //}

        //public static string? GetPropertyName(string columnName)
        //{
        //    return ERPNextObjectBase.GetPropertyName<ERP_Accounts_BankAccount>(columnName);
        //}

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("account_name", "varchar(140)", isNullable: true)]
        public string? AccountName
        {
            get { return data.account_name; }
            set { data.account_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("account", "varchar(140)", isNullable: true)]
        public string? Account
        {
            get { return data.account; }
            set { data.account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("bank", "varchar(140)", isNullable: true)]
        public string? Bank
        {
            get { return data.bank; }
            set { data.bank = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("account_type", "varchar(140)", isNullable: true)]
        public string? AccountType
        {
            get { return data.account_type; }
            set { data.account_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("account_subtype", "varchar(140)", isNullable: true)]
        public string? AccountSubtype
        {
            get { return data.account_subtype; }
            set { data.account_subtype = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("is_default", "int(1)", isNullable: false)]
        public bool IsDefault
        {
            get { return ERPNextConverter.IntToBool((int)data.is_default); }
            set { data.is_default = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("is_company_account", "int(1)", isNullable: false)]
        public bool IsCompanyAccount
        {
            get { return ERPNextConverter.IntToBool((int)data.is_company_account); }
            set { data.is_company_account = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("party_type", "varchar(140)", isNullable: true)]
        public string? PartyType
        {
            get { return data.party_type; }
            set { data.party_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("party", "varchar(140)", isNullable: true)]
        public string? Party
        {
            get { return data.party; }
            set { data.party = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("iban", "varchar(30)", isNullable: true)]
        public string? Iban
        {
            get { return data.iban; }
            set { data.iban = ERPNextConverter.TruncateString(value, 30); }
        }

        [ColumnInfo("branch_code", "varchar(140)", isNullable: true)]
        public string? BranchCode
        {
            get { return data.branch_code; }
            set { data.branch_code = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("bank_account_no", "varchar(30)", isNullable: true)]
        public string? BankAccountNo
        {
            get { return data.bank_account_no; }
            set { data.bank_account_no = ERPNextConverter.TruncateString(value, 30); }
        }

        [ColumnInfo("integration_id", "varchar(140)", isNullable: true)]
        public string? IntegrationId
        {
            get { return data.integration_id; }
            set { data.integration_id = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("last_integration_date", "date", isNullable: true)]
        public DateOnly? LastIntegrationDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.last_integration_date); }
            set { data.last_integration_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("mask", "varchar(140)", isNullable: true)]
        public string? Mask
        {
            get { return data.mask; }
            set { data.mask = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

