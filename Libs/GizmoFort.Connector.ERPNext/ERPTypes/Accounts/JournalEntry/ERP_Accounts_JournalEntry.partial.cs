/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Accounts.JournalEntry
{
    public partial class ERP_Accounts_JournalEntry : ERPNextObjectBase
    {
        public ERP_Accounts_JournalEntry() : this(new ERPObject(_DocType.Accounts_JournalEntry)) { }
        public ERP_Accounts_JournalEntry(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("title", "varchar(140)", isNullable: true)]
        public string? Title
        {
            get { return data.title; }
            set { data.title = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("voucher_type", "varchar(140)", isNullable: true)]
        public string? VoucherType
        {
            get { return data.voucher_type; }
            set { data.voucher_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("naming_series", "varchar(140)", isNullable: true)]
        public string? NamingSeries
        {
            get { return data.naming_series; }
            set { data.naming_series = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("finance_book", "varchar(140)", isNullable: true)]
        public string? FinanceBook
        {
            get { return data.finance_book; }
            set { data.finance_book = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("process_deferred_accounting", "varchar(140)", isNullable: true)]
        public string? ProcessDeferredAccounting
        {
            get { return data.process_deferred_accounting; }
            set { data.process_deferred_accounting = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("reversal_of", "varchar(140)", isNullable: true)]
        public string? ReversalOf
        {
            get { return data.reversal_of; }
            set { data.reversal_of = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("tax_withholding_category", "varchar(140)", isNullable: true)]
        public string? TaxWithholdingCategory
        {
            get { return data.tax_withholding_category; }
            set { data.tax_withholding_category = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("from_template", "varchar(140)", isNullable: true)]
        public string? FromTemplate
        {
            get { return data.from_template; }
            set { data.from_template = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("posting_date", "date", isNullable: true)]
        public DateOnly? PostingDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.posting_date); }
            set { data.posting_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("apply_tds", "int(1)", isNullable: false)]
        public bool ApplyTds
        {
            get { return ERPNextConverter.IntToBool((int)data.apply_tds); }
            set { data.apply_tds = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("cheque_no", "varchar(140)", isNullable: true)]
        public string? ChequeNo
        {
            get { return data.cheque_no; }
            set { data.cheque_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("cheque_date", "date", isNullable: true)]
        public DateOnly? ChequeDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.cheque_date); }
            set { data.cheque_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("user_remark", "text", isNullable: true)]
        public string? UserRemark
        {
            get { return data.user_remark; }
            set { data.user_remark = value; }
        }

        [ColumnInfo("total_debit", "decimal(21,9)", isNullable: false)]
        public decimal TotalDebit
        {
            get { return data.total_debit; }
            set { data.total_debit = value; }
        }

        [ColumnInfo("total_credit", "decimal(21,9)", isNullable: false)]
        public decimal TotalCredit
        {
            get { return data.total_credit; }
            set { data.total_credit = value; }
        }

        [ColumnInfo("difference", "decimal(21,9)", isNullable: false)]
        public decimal Difference
        {
            get { return data.difference; }
            set { data.difference = value; }
        }

        [ColumnInfo("multi_currency", "int(1)", isNullable: false)]
        public bool MultiCurrency
        {
            get { return ERPNextConverter.IntToBool((int)data.multi_currency); }
            set { data.multi_currency = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("total_amount_currency", "varchar(140)", isNullable: true)]
        public string? TotalAmountCurrency
        {
            get { return data.total_amount_currency; }
            set { data.total_amount_currency = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("total_amount", "decimal(21,9)", isNullable: false)]
        public decimal TotalAmount
        {
            get { return data.total_amount; }
            set { data.total_amount = value; }
        }

        [ColumnInfo("total_amount_in_words", "varchar(140)", isNullable: true)]
        public string? TotalAmountInWords
        {
            get { return data.total_amount_in_words; }
            set { data.total_amount_in_words = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("clearance_date", "date", isNullable: true)]
        public DateOnly? ClearanceDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.clearance_date); }
            set { data.clearance_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("remark", "text", isNullable: true)]
        public string? Remark
        {
            get { return data.remark; }
            set { data.remark = value; }
        }

        [ColumnInfo("paid_loan", "varchar(140)", isNullable: true)]
        public string? PaidLoan
        {
            get { return data.paid_loan; }
            set { data.paid_loan = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("inter_company_journal_entry_reference", "varchar(140)", isNullable: true)]
        public string? InterCompanyJournalEntryReference
        {
            get { return data.inter_company_journal_entry_reference; }
            set { data.inter_company_journal_entry_reference = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("bill_no", "varchar(140)", isNullable: true)]
        public string? BillNo
        {
            get { return data.bill_no; }
            set { data.bill_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("bill_date", "date", isNullable: true)]
        public DateOnly? BillDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.bill_date); }
            set { data.bill_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("due_date", "date", isNullable: true)]
        public DateOnly? DueDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.due_date); }
            set { data.due_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("write_off_based_on", "varchar(140)", isNullable: true)]
        public string? WriteOffBasedOn
        {
            get { return data.write_off_based_on; }
            set { data.write_off_based_on = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("write_off_amount", "decimal(21,9)", isNullable: false)]
        public decimal WriteOffAmount
        {
            get { return data.write_off_amount; }
            set { data.write_off_amount = value; }
        }

        [ColumnInfo("pay_to_recd_from", "varchar(140)", isNullable: true)]
        public string? PayToRecdFrom
        {
            get { return data.pay_to_recd_from; }
            set { data.pay_to_recd_from = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("letter_head", "varchar(140)", isNullable: true)]
        public string? LetterHead
        {
            get { return data.letter_head; }
            set { data.letter_head = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("select_print_heading", "varchar(140)", isNullable: true)]
        public string? SelectPrintHeading
        {
            get { return data.select_print_heading; }
            set { data.select_print_heading = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("mode_of_payment", "varchar(140)", isNullable: true)]
        public string? ModeOfPayment
        {
            get { return data.mode_of_payment; }
            set { data.mode_of_payment = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("payment_order", "varchar(140)", isNullable: true)]
        public string? PaymentOrder
        {
            get { return data.payment_order; }
            set { data.payment_order = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("is_opening", "varchar(140)", isNullable: true)]
        public string? IsOpening
        {
            get { return data.is_opening; }
            set { data.is_opening = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("stock_entry", "varchar(140)", isNullable: true)]
        public string? StockEntry
        {
            get { return data.stock_entry; }
            set { data.stock_entry = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("auto_repeat", "varchar(140)", isNullable: true)]
        public string? AutoRepeat
        {
            get { return data.auto_repeat; }
            set { data.auto_repeat = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("amended_from", "varchar(140)", isNullable: true)]
        public string? AmendedFrom
        {
            get { return data.amended_from; }
            set { data.amended_from = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

