/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Accounts.JournalEntryAccount
{
    public partial class ERP_Accounts_JournalEntryAccount : ERPNextObjectBase
    {
        public ERP_Accounts_JournalEntryAccount() : this(new ERPObject(_DocType.Accounts_JournalEntryAccount)) { }
        public ERP_Accounts_JournalEntryAccount(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("account", "varchar(140)", isNullable: true)]
        public string? Account
        {
            get { return data.account; }
            set { data.account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("account_type", "varchar(140)", isNullable: true)]
        public string? AccountType
        {
            get { return data.account_type; }
            set { data.account_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("balance", "decimal(21,9)", isNullable: false)]
        public decimal Balance
        {
            get { return data.balance; }
            set { data.balance = value; }
        }

        [ColumnInfo("bank_account", "varchar(140)", isNullable: true)]
        public string? BankAccount
        {
            get { return data.bank_account; }
            set { data.bank_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("party_type", "varchar(140)", isNullable: true)]
        public string? PartyType
        {
            get { return data.party_type; }
            set { data.party_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("party", "varchar(140)", isNullable: true)]
        public string? Party
        {
            get { return data.party; }
            set { data.party = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("party_balance", "decimal(21,9)", isNullable: false)]
        public decimal PartyBalance
        {
            get { return data.party_balance; }
            set { data.party_balance = value; }
        }

        [ColumnInfo("cost_center", "varchar(140)", isNullable: true)]
        public string? CostCenter
        {
            get { return data.cost_center; }
            set { data.cost_center = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("project", "varchar(140)", isNullable: true)]
        public string? Project
        {
            get { return data.project; }
            set { data.project = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("account_currency", "varchar(140)", isNullable: true)]
        public string? AccountCurrency
        {
            get { return data.account_currency; }
            set { data.account_currency = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("exchange_rate", "decimal(21,9)", isNullable: false)]
        public decimal ExchangeRate
        {
            get { return data.exchange_rate; }
            set { data.exchange_rate = value; }
        }

        [ColumnInfo("debit_in_account_currency", "decimal(21,9)", isNullable: false)]
        public decimal DebitInAccountCurrency
        {
            get { return data.debit_in_account_currency; }
            set { data.debit_in_account_currency = value; }
        }

        [ColumnInfo("debit", "decimal(21,9)", isNullable: false)]
        public decimal Debit
        {
            get { return data.debit; }
            set { data.debit = value; }
        }

        [ColumnInfo("credit_in_account_currency", "decimal(21,9)", isNullable: false)]
        public decimal CreditInAccountCurrency
        {
            get { return data.credit_in_account_currency; }
            set { data.credit_in_account_currency = value; }
        }

        [ColumnInfo("credit", "decimal(21,9)", isNullable: false)]
        public decimal Credit
        {
            get { return data.credit; }
            set { data.credit = value; }
        }

        [ColumnInfo("reference_type", "varchar(140)", isNullable: true)]
        public string? ReferenceType
        {
            get { return data.reference_type; }
            set { data.reference_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("reference_name", "varchar(140)", isNullable: true)]
        public string? ReferenceName
        {
            get { return data.reference_name; }
            set { data.reference_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("reference_due_date", "varchar(140)", isNullable: true)]
        public string? ReferenceDueDate
        {
            get { return data.reference_due_date; }
            set { data.reference_due_date = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("reference_detail_no", "varchar(140)", isNullable: true)]
        public string? ReferenceDetailNo
        {
            get { return data.reference_detail_no; }
            set { data.reference_detail_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("is_advance", "varchar(140)", isNullable: true)]
        public string? IsAdvance
        {
            get { return data.is_advance; }
            set { data.is_advance = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("user_remark", "text", isNullable: true)]
        public string? UserRemark
        {
            get { return data.user_remark; }
            set { data.user_remark = value; }
        }

        [ColumnInfo("against_account", "text", isNullable: true)]
        public string? AgainstAccount
        {
            get { return data.against_account; }
            set { data.against_account = value; }
        }

        [ColumnInfo("parent", "varchar(140)", isNullable: true)]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parentfield", "varchar(140)", isNullable: true)]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parenttype", "varchar(140)", isNullable: true)]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = ERPNextConverter.TruncateString(value, 140); }
        }


    }
}

