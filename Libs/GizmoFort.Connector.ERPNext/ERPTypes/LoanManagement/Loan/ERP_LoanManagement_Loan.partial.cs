/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.LoanManagement.Loan
{
    public partial class ERP_LoanManagement_Loan : ERPNextObjectBase
    {
        public ERP_LoanManagement_Loan() : this(new ERPObject(_DocType.LoanManagement_Loan)) { }
        public ERP_LoanManagement_Loan(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("applicant_type", "varchar(140)", isNullable: true)]
        public string? ApplicantType
        {
            get { return data.applicant_type; }
            set { data.applicant_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("applicant", "varchar(140)", isNullable: true)]
        public string? Applicant
        {
            get { return data.applicant; }
            set { data.applicant = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("applicant_name", "varchar(140)", isNullable: true)]
        public string? ApplicantName
        {
            get { return data.applicant_name; }
            set { data.applicant_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("loan_application", "varchar(140)", isNullable: true)]
        public string? LoanApplication
        {
            get { return data.loan_application; }
            set { data.loan_application = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("posting_date", "date", isNullable: true)]
        public DateOnly? PostingDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.posting_date); }
            set { data.posting_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("status", "varchar(140)", isNullable: true)]
        public string? Status
        {
            get { return data.status; }
            set { data.status = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("loan_type", "varchar(140)", isNullable: true)]
        public string? LoanType
        {
            get { return data.loan_type; }
            set { data.loan_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("loan_amount", "decimal(21,9)", isNullable: false)]
        public decimal LoanAmount
        {
            get { return data.loan_amount; }
            set { data.loan_amount = value; }
        }

        [ColumnInfo("rate_of_interest", "decimal(21,9)", isNullable: false)]
        public decimal RateOfInterest
        {
            get { return data.rate_of_interest; }
            set { data.rate_of_interest = value; }
        }

        [ColumnInfo("is_secured_loan", "int(1)", isNullable: false)]
        public bool IsSecuredLoan
        {
            get { return ERPNextConverter.IntToBool((int)data.is_secured_loan); }
            set { data.is_secured_loan = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("disbursement_date", "date", isNullable: true)]
        public DateOnly? DisbursementDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.disbursement_date); }
            set { data.disbursement_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("closure_date", "date", isNullable: true)]
        public DateOnly? ClosureDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.closure_date); }
            set { data.closure_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("disbursed_amount", "decimal(21,9)", isNullable: false)]
        public decimal DisbursedAmount
        {
            get { return data.disbursed_amount; }
            set { data.disbursed_amount = value; }
        }

        [ColumnInfo("maximum_loan_amount", "decimal(21,9)", isNullable: false)]
        public decimal MaximumLoanAmount
        {
            get { return data.maximum_loan_amount; }
            set { data.maximum_loan_amount = value; }
        }

        [ColumnInfo("repayment_method", "varchar(140)", isNullable: true)]
        public string? RepaymentMethod
        {
            get { return data.repayment_method; }
            set { data.repayment_method = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("repayment_periods", "int(11)", isNullable: false)]
        public int RepaymentPeriods
        {
            get { return data.repayment_periods; }
            set { data.repayment_periods = value; }
        }

        [ColumnInfo("monthly_repayment_amount", "decimal(21,9)", isNullable: false)]
        public decimal MonthlyRepaymentAmount
        {
            get { return data.monthly_repayment_amount; }
            set { data.monthly_repayment_amount = value; }
        }

        [ColumnInfo("repayment_start_date", "date", isNullable: true)]
        public DateOnly? RepaymentStartDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.repayment_start_date); }
            set { data.repayment_start_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("is_term_loan", "int(1)", isNullable: false)]
        public bool IsTermLoan
        {
            get { return ERPNextConverter.IntToBool((int)data.is_term_loan); }
            set { data.is_term_loan = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("cost_center", "varchar(140)", isNullable: true)]
        public string? CostCenter
        {
            get { return data.cost_center; }
            set { data.cost_center = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("mode_of_payment", "varchar(140)", isNullable: true)]
        public string? ModeOfPayment
        {
            get { return data.mode_of_payment; }
            set { data.mode_of_payment = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("disbursement_account", "varchar(140)", isNullable: true)]
        public string? DisbursementAccount
        {
            get { return data.disbursement_account; }
            set { data.disbursement_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("payment_account", "varchar(140)", isNullable: true)]
        public string? PaymentAccount
        {
            get { return data.payment_account; }
            set { data.payment_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("loan_account", "varchar(140)", isNullable: true)]
        public string? LoanAccount
        {
            get { return data.loan_account; }
            set { data.loan_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("interest_income_account", "varchar(140)", isNullable: true)]
        public string? InterestIncomeAccount
        {
            get { return data.interest_income_account; }
            set { data.interest_income_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("penalty_income_account", "varchar(140)", isNullable: true)]
        public string? PenaltyIncomeAccount
        {
            get { return data.penalty_income_account; }
            set { data.penalty_income_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("total_payment", "decimal(21,9)", isNullable: false)]
        public decimal TotalPayment
        {
            get { return data.total_payment; }
            set { data.total_payment = value; }
        }

        [ColumnInfo("total_principal_paid", "decimal(21,9)", isNullable: false)]
        public decimal TotalPrincipalPaid
        {
            get { return data.total_principal_paid; }
            set { data.total_principal_paid = value; }
        }

        [ColumnInfo("written_off_amount", "decimal(21,9)", isNullable: false)]
        public decimal WrittenOffAmount
        {
            get { return data.written_off_amount; }
            set { data.written_off_amount = value; }
        }

        [ColumnInfo("refund_amount", "decimal(21,9)", isNullable: false)]
        public decimal RefundAmount
        {
            get { return data.refund_amount; }
            set { data.refund_amount = value; }
        }

        [ColumnInfo("debit_adjustment_amount", "decimal(21,9)", isNullable: false)]
        public decimal DebitAdjustmentAmount
        {
            get { return data.debit_adjustment_amount; }
            set { data.debit_adjustment_amount = value; }
        }

        [ColumnInfo("credit_adjustment_amount", "decimal(21,9)", isNullable: false)]
        public decimal CreditAdjustmentAmount
        {
            get { return data.credit_adjustment_amount; }
            set { data.credit_adjustment_amount = value; }
        }

        [ColumnInfo("is_npa", "int(1)", isNullable: false)]
        public bool IsNpa
        {
            get { return ERPNextConverter.IntToBool((int)data.is_npa); }
            set { data.is_npa = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("total_interest_payable", "decimal(21,9)", isNullable: false)]
        public decimal TotalInterestPayable
        {
            get { return data.total_interest_payable; }
            set { data.total_interest_payable = value; }
        }

        [ColumnInfo("total_amount_paid", "decimal(21,9)", isNullable: false)]
        public decimal TotalAmountPaid
        {
            get { return data.total_amount_paid; }
            set { data.total_amount_paid = value; }
        }

        [ColumnInfo("amended_from", "varchar(140)", isNullable: true)]
        public string? AmendedFrom
        {
            get { return data.amended_from; }
            set { data.amended_from = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

