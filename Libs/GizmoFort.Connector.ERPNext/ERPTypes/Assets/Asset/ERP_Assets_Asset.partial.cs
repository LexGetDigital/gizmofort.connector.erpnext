/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/13/2022 7:48:39 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Assets.Asset
{
    public partial class ERP_Assets_Asset : ERPNextObjectBase
    {
        public ERP_Assets_Asset() : this(new ERPObject(_DocType.Assets_Asset)) { }
        public ERP_Assets_Asset(ERPObject obj) : base(obj) { }

        //public static string? GetColumnName(string propertyName)
        //{
        //    return ERPNextObjectBase.GetColumnName<ERP_Assets_Asset>(propertyName);
        //}

        //public static string? GetPropertyName(string columnName)
        //{
        //    return ERPNextObjectBase.GetPropertyName<ERP_Assets_Asset>(columnName);
        //}

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("item_code", "varchar(140)", isNullable: true)]
        public string? ItemCode
        {
            get { return data.item_code; }
            set { data.item_code = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("item_name", "varchar(140)", isNullable: true)]
        public string? ItemName
        {
            get { return data.item_name; }
            set { data.item_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("asset_owner", "varchar(140)", isNullable: true)]
        public string? AssetOwner
        {
            get { return data.asset_owner; }
            set { data.asset_owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("asset_owner_company", "varchar(140)", isNullable: true)]
        public string? AssetOwnerCompany
        {
            get { return data.asset_owner_company; }
            set { data.asset_owner_company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("is_existing_asset", "int(1)", isNullable: false)]
        public bool IsExistingAsset
        {
            get { return ERPNextConverter.IntToBool((int)data.is_existing_asset); }
            set { data.is_existing_asset = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("supplier", "varchar(140)", isNullable: true)]
        public string? Supplier
        {
            get { return data.supplier; }
            set { data.supplier = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("customer", "varchar(140)", isNullable: true)]
        public string? Customer
        {
            get { return data.customer; }
            set { data.customer = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("image", "text", isNullable: true)]
        public string? Image
        {
            get { return data.image; }
            set { data.image = value; }
        }

        [ColumnInfo("journal_entry_for_scrap", "varchar(140)", isNullable: true)]
        public string? JournalEntryForScrap
        {
            get { return data.journal_entry_for_scrap; }
            set { data.journal_entry_for_scrap = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("naming_series", "varchar(140)", isNullable: true)]
        public string? NamingSeries
        {
            get { return data.naming_series; }
            set { data.naming_series = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("asset_name", "varchar(140)", isNullable: true)]
        public string? AssetName
        {
            get { return data.asset_name; }
            set { data.asset_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("asset_category", "varchar(140)", isNullable: true)]
        public string? AssetCategory
        {
            get { return data.asset_category; }
            set { data.asset_category = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("location", "varchar(140)", isNullable: true)]
        public string? Location
        {
            get { return data.location; }
            set { data.location = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("split_from", "varchar(140)", isNullable: true)]
        public string? SplitFrom
        {
            get { return data.split_from; }
            set { data.split_from = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("custodian", "varchar(140)", isNullable: true)]
        public string? Custodian
        {
            get { return data.custodian; }
            set { data.custodian = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("department", "varchar(140)", isNullable: true)]
        public string? Department
        {
            get { return data.department; }
            set { data.department = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("disposal_date", "date", isNullable: true)]
        public DateOnly? DisposalDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.disposal_date); }
            set { data.disposal_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("cost_center", "varchar(140)", isNullable: true)]
        public string? CostCenter
        {
            get { return data.cost_center; }
            set { data.cost_center = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("purchase_receipt", "varchar(140)", isNullable: true)]
        public string? PurchaseReceipt
        {
            get { return data.purchase_receipt; }
            set { data.purchase_receipt = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("purchase_invoice", "varchar(140)", isNullable: true)]
        public string? PurchaseInvoice
        {
            get { return data.purchase_invoice; }
            set { data.purchase_invoice = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("available_for_use_date", "date", isNullable: true)]
        public DateOnly? AvailableForUseDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.available_for_use_date); }
            set { data.available_for_use_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("gross_purchase_amount", "decimal(21,9)", isNullable: false)]
        public decimal GrossPurchaseAmount
        {
            get { return data.gross_purchase_amount; }
            set { data.gross_purchase_amount = value; }
        }

        [ColumnInfo("asset_quantity", "int(11)", isNullable: false)]
        public int AssetQuantity
        {
            get { return data.asset_quantity; }
            set { data.asset_quantity = value; }
        }

        [ColumnInfo("purchase_date", "date", isNullable: true)]
        public DateOnly? PurchaseDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.purchase_date); }
            set { data.purchase_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("calculate_depreciation", "int(1)", isNullable: false)]
        public bool CalculateDepreciation
        {
            get { return ERPNextConverter.IntToBool((int)data.calculate_depreciation); }
            set { data.calculate_depreciation = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("opening_accumulated_depreciation", "decimal(21,9)", isNullable: false)]
        public decimal OpeningAccumulatedDepreciation
        {
            get { return data.opening_accumulated_depreciation; }
            set { data.opening_accumulated_depreciation = value; }
        }

        [ColumnInfo("number_of_depreciations_booked", "int(11)", isNullable: false)]
        public int NumberOfDepreciationsBooked
        {
            get { return data.number_of_depreciations_booked; }
            set { data.number_of_depreciations_booked = value; }
        }

        [ColumnInfo("depreciation_method", "varchar(140)", isNullable: true)]
        public string? DepreciationMethod
        {
            get { return data.depreciation_method; }
            set { data.depreciation_method = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("value_after_depreciation", "decimal(21,9)", isNullable: false)]
        public decimal ValueAfterDepreciation
        {
            get { return data.value_after_depreciation; }
            set { data.value_after_depreciation = value; }
        }

        [ColumnInfo("total_number_of_depreciations", "int(11)", isNullable: false)]
        public int TotalNumberOfDepreciations
        {
            get { return data.total_number_of_depreciations; }
            set { data.total_number_of_depreciations = value; }
        }

        [ColumnInfo("frequency_of_depreciation", "int(11)", isNullable: false)]
        public int FrequencyOfDepreciation
        {
            get { return data.frequency_of_depreciation; }
            set { data.frequency_of_depreciation = value; }
        }

        [ColumnInfo("next_depreciation_date", "date", isNullable: true)]
        public DateOnly? NextDepreciationDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.next_depreciation_date); }
            set { data.next_depreciation_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("policy_number", "varchar(140)", isNullable: true)]
        public string? PolicyNumber
        {
            get { return data.policy_number; }
            set { data.policy_number = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("insurer", "varchar(140)", isNullable: true)]
        public string? Insurer
        {
            get { return data.insurer; }
            set { data.insurer = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("insured_value", "varchar(140)", isNullable: true)]
        public string? InsuredValue
        {
            get { return data.insured_value; }
            set { data.insured_value = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("insurance_start_date", "date", isNullable: true)]
        public DateOnly? InsuranceStartDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.insurance_start_date); }
            set { data.insurance_start_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("insurance_end_date", "date", isNullable: true)]
        public DateOnly? InsuranceEndDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.insurance_end_date); }
            set { data.insurance_end_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("comprehensive_insurance", "varchar(140)", isNullable: true)]
        public string? ComprehensiveInsurance
        {
            get { return data.comprehensive_insurance; }
            set { data.comprehensive_insurance = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("maintenance_required", "int(1)", isNullable: false)]
        public bool MaintenanceRequired
        {
            get { return ERPNextConverter.IntToBool((int)data.maintenance_required); }
            set { data.maintenance_required = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("status", "varchar(140)", isNullable: true)]
        public string? Status
        {
            get { return data.status; }
            set { data.status = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("booked_fixed_asset", "int(1)", isNullable: false)]
        public bool BookedFixedAsset
        {
            get { return ERPNextConverter.IntToBool((int)data.booked_fixed_asset); }
            set { data.booked_fixed_asset = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("purchase_receipt_amount", "decimal(21,9)", isNullable: false)]
        public decimal PurchaseReceiptAmount
        {
            get { return data.purchase_receipt_amount; }
            set { data.purchase_receipt_amount = value; }
        }

        [ColumnInfo("default_finance_book", "varchar(140)", isNullable: true)]
        public string? DefaultFinanceBook
        {
            get { return data.default_finance_book; }
            set { data.default_finance_book = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("amended_from", "varchar(140)", isNullable: true)]
        public string? AmendedFrom
        {
            get { return data.amended_from; }
            set { data.amended_from = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

