/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/13/2022 7:48:39 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Geo.Currency
{
    public partial class ERP_Geo_Currency : ERPNextObjectBase
    {
        public ERP_Geo_Currency() : this(new ERPObject(_DocType.Geo_Currency)) { }
        public ERP_Geo_Currency(ERPObject obj) : base(obj) { }

        //public static string? GetColumnName(string propertyName)
        //{
        //    return ERPNextObjectBase.GetColumnName<ERP_Geo_Currency>(propertyName);
        //}

        //public static string? GetPropertyName(string columnName)
        //{
        //    return ERPNextObjectBase.GetPropertyName<ERP_Geo_Currency>(columnName);
        //}

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("currency_name", "varchar(140)", isNullable: true)]
        public string? CurrencyName
        {
            get { return data.currency_name; }
            set { data.currency_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("enabled", "int(1)", isNullable: false)]
        public bool Enabled
        {
            get { return ERPNextConverter.IntToBool((int)data.enabled); }
            set { data.enabled = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("fraction", "varchar(140)", isNullable: true)]
        public string? Fraction
        {
            get { return data.fraction; }
            set { data.fraction = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("fraction_units", "int(11)", isNullable: false)]
        public int FractionUnits
        {
            get { return data.fraction_units; }
            set { data.fraction_units = value; }
        }

        [ColumnInfo("smallest_currency_fraction_value", "decimal(21,9)", isNullable: false)]
        public decimal SmallestCurrencyFractionValue
        {
            get { return data.smallest_currency_fraction_value; }
            set { data.smallest_currency_fraction_value = value; }
        }

        [ColumnInfo("symbol", "varchar(140)", isNullable: true)]
        public string? Symbol
        {
            get { return data.symbol; }
            set { data.symbol = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("symbol_on_right", "int(1)", isNullable: false)]
        public bool SymbolOnRight
        {
            get { return ERPNextConverter.IntToBool((int)data.symbol_on_right); }
            set { data.symbol_on_right = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("number_format", "varchar(140)", isNullable: true)]
        public string? NumberFormat
        {
            get { return data.number_format; }
            set { data.number_format = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

