/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/12/2022 2:29:08 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using _DockType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.EventStreaming.EventProducerDocumentType
{
    public partial class ERP_EventStreaming_EventProducerDocumentType : ERPNextObjectBase
    {
        public ERP_EventStreaming_EventProducerDocumentType() : this(new ERPObject(_DockType.EventStreaming_EventProducerDocumentType)) { }
        public ERP_EventStreaming_EventProducerDocumentType(ERPObject obj) : base(obj) { }

        public static string? GetColumnName(string propertyName)
        {
            return ERPNextObjectBase.GetColumnName<ERP_EventStreaming_EventProducerDocumentType>(propertyName);
        }

        public static string? GetPropertyName(string columnName)
        {
            return ERPNextObjectBase.GetPropertyName<ERP_EventStreaming_EventProducerDocumentType>(columnName);
        }


        [Column("name")]
        public string Name
        {
            get { return data.name; }
            set { data.name = value; }
        }

        [Column("creation")]
        public DateTimeOffset? Creation
        {
            get { return data.creation; }
            set { data.creation = value; }
        }

        [Column("modified")]
        public DateTimeOffset? Modified
        {
            get { return data.modified; }
            set { data.modified = value; }
        }

        [Column("modified_by")]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = value; }
        }

        [Column("owner")]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = value; }
        }

        [Column("docstatus")]
        public int Docstatus
        {
            get { return data.docstatus; }
            set { data.docstatus = value; }
        }

        [Column("idx")]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [Column("ref_doctype")]
        public string? RefDoctype
        {
            get { return data.ref_doctype; }
            set { data.ref_doctype = value; }
        }

        [Column("status")]
        public string? Status
        {
            get { return data.status; }
            set { data.status = value; }
        }

        [Column("use_same_name")]
        public int UseSameName
        {
            get { return data.use_same_name; }
            set { data.use_same_name = value; }
        }

        [Column("unsubscribe")]
        public int Unsubscribe
        {
            get { return data.unsubscribe; }
            set { data.unsubscribe = value; }
        }

        [Column("has_mapping")]
        public int HasMapping
        {
            get { return data.has_mapping; }
            set { data.has_mapping = value; }
        }

        [Column("mapping")]
        public string? Mapping
        {
            get { return data.mapping; }
            set { data.mapping = value; }
        }

        [Column("condition")]
        public string? Condition
        {
            get { return data.condition; }
            set { data.condition = value; }
        }

        [Column("parent")]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = value; }
        }

        [Column("parentfield")]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = value; }
        }

        [Column("parenttype")]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = value; }
        }


    }
}

