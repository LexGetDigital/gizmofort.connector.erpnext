/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Email.EmailAccount
{
    public partial class ERP_Email_EmailAccount : ERPNextObjectBase
    {
        public ERP_Email_EmailAccount() : this(new ERPObject(_DocType.Email_EmailAccount)) { }
        public ERP_Email_EmailAccount(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("email_id", "varchar(140)", isNullable: true)]
        public string? EmailId
        {
            get { return data.email_id; }
            set { data.email_id = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("email_account_name", "varchar(140)", isNullable: true)]
        public string? EmailAccountName
        {
            get { return data.email_account_name; }
            set { data.email_account_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("domain", "varchar(140)", isNullable: true)]
        public string? Domain
        {
            get { return data.domain; }
            set { data.domain = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("service", "varchar(140)", isNullable: true)]
        public string? Service
        {
            get { return data.service; }
            set { data.service = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("auth_method", "varchar(140)", isNullable: true)]
        public string? AuthMethod
        {
            get { return data.auth_method; }
            set { data.auth_method = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("password", "text", isNullable: true)]
        public string? Password
        {
            get { return data.password; }
            set { data.password = value; }
        }

        [ColumnInfo("awaiting_password", "int(1)", isNullable: false)]
        public bool AwaitingPassword
        {
            get { return ERPNextConverter.IntToBool((int)data.awaiting_password); }
            set { data.awaiting_password = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("ascii_encode_password", "int(1)", isNullable: false)]
        public bool AsciiEncodePassword
        {
            get { return ERPNextConverter.IntToBool((int)data.ascii_encode_password); }
            set { data.ascii_encode_password = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("refresh_token", "text", isNullable: true)]
        public string? RefreshToken
        {
            get { return data.refresh_token; }
            set { data.refresh_token = value; }
        }

        [ColumnInfo("access_token", "text", isNullable: true)]
        public string? AccessToken
        {
            get { return data.access_token; }
            set { data.access_token = value; }
        }

        [ColumnInfo("login_id_is_different", "int(1)", isNullable: false)]
        public bool LoginIdIsDifferent
        {
            get { return ERPNextConverter.IntToBool((int)data.login_id_is_different); }
            set { data.login_id_is_different = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("login_id", "varchar(140)", isNullable: true)]
        public string? LoginId
        {
            get { return data.login_id; }
            set { data.login_id = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("enable_incoming", "int(1)", isNullable: false)]
        public bool EnableIncoming
        {
            get { return ERPNextConverter.IntToBool((int)data.enable_incoming); }
            set { data.enable_incoming = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("default_incoming", "int(1)", isNullable: false)]
        public bool DefaultIncoming
        {
            get { return ERPNextConverter.IntToBool((int)data.default_incoming); }
            set { data.default_incoming = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("use_imap", "int(1)", isNullable: false)]
        public bool UseImap
        {
            get { return ERPNextConverter.IntToBool((int)data.use_imap); }
            set { data.use_imap = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("use_ssl", "int(1)", isNullable: false)]
        public bool UseSsl
        {
            get { return ERPNextConverter.IntToBool((int)data.use_ssl); }
            set { data.use_ssl = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("use_starttls", "int(1)", isNullable: false)]
        public bool UseStarttls
        {
            get { return ERPNextConverter.IntToBool((int)data.use_starttls); }
            set { data.use_starttls = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("email_server", "varchar(140)", isNullable: true)]
        public string? EmailServer
        {
            get { return data.email_server; }
            set { data.email_server = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("incoming_port", "varchar(140)", isNullable: true)]
        public string? IncomingPort
        {
            get { return data.incoming_port; }
            set { data.incoming_port = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("attachment_limit", "int(11)", isNullable: false)]
        public int AttachmentLimit
        {
            get { return data.attachment_limit; }
            set { data.attachment_limit = value; }
        }

        [ColumnInfo("email_sync_option", "varchar(140)", isNullable: true)]
        public string? EmailSyncOption
        {
            get { return data.email_sync_option; }
            set { data.email_sync_option = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("initial_sync_count", "varchar(140)", isNullable: true)]
        public string? InitialSyncCount
        {
            get { return data.initial_sync_count; }
            set { data.initial_sync_count = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("append_emails_to_sent_folder", "int(1)", isNullable: false)]
        public bool AppendEmailsToSentFolder
        {
            get { return ERPNextConverter.IntToBool((int)data.append_emails_to_sent_folder); }
            set { data.append_emails_to_sent_folder = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("append_to", "varchar(140)", isNullable: true)]
        public string? AppendTo
        {
            get { return data.append_to; }
            set { data.append_to = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("create_contact", "int(1)", isNullable: false)]
        public bool CreateContact
        {
            get { return ERPNextConverter.IntToBool((int)data.create_contact); }
            set { data.create_contact = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("enable_automatic_linking", "int(1)", isNullable: false)]
        public bool EnableAutomaticLinking
        {
            get { return ERPNextConverter.IntToBool((int)data.enable_automatic_linking); }
            set { data.enable_automatic_linking = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("notify_if_unreplied", "int(1)", isNullable: false)]
        public bool NotifyIfUnreplied
        {
            get { return ERPNextConverter.IntToBool((int)data.notify_if_unreplied); }
            set { data.notify_if_unreplied = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("unreplied_for_mins", "int(11)", isNullable: false)]
        public int UnrepliedForMins
        {
            get { return data.unreplied_for_mins; }
            set { data.unreplied_for_mins = value; }
        }

        [ColumnInfo("send_notification_to", "text", isNullable: true)]
        public string? SendNotificationTo
        {
            get { return data.send_notification_to; }
            set { data.send_notification_to = value; }
        }

        [ColumnInfo("enable_outgoing", "int(1)", isNullable: false)]
        public bool EnableOutgoing
        {
            get { return ERPNextConverter.IntToBool((int)data.enable_outgoing); }
            set { data.enable_outgoing = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("use_tls", "int(1)", isNullable: false)]
        public bool UseTls
        {
            get { return ERPNextConverter.IntToBool((int)data.use_tls); }
            set { data.use_tls = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("use_ssl_for_outgoing", "int(1)", isNullable: false)]
        public bool UseSslForOutgoing
        {
            get { return ERPNextConverter.IntToBool((int)data.use_ssl_for_outgoing); }
            set { data.use_ssl_for_outgoing = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("smtp_server", "varchar(140)", isNullable: true)]
        public string? SmtpServer
        {
            get { return data.smtp_server; }
            set { data.smtp_server = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("smtp_port", "varchar(140)", isNullable: true)]
        public string? SmtpPort
        {
            get { return data.smtp_port; }
            set { data.smtp_port = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_outgoing", "int(1)", isNullable: false)]
        public bool DefaultOutgoing
        {
            get { return ERPNextConverter.IntToBool((int)data.default_outgoing); }
            set { data.default_outgoing = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("always_use_account_email_id_as_sender", "int(1)", isNullable: false)]
        public bool AlwaysUseAccountEmailIdAsSender
        {
            get { return ERPNextConverter.IntToBool((int)data.always_use_account_email_id_as_sender); }
            set { data.always_use_account_email_id_as_sender = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("always_use_account_name_as_sender_name", "int(1)", isNullable: false)]
        public bool AlwaysUseAccountNameAsSenderName
        {
            get { return ERPNextConverter.IntToBool((int)data.always_use_account_name_as_sender_name); }
            set { data.always_use_account_name_as_sender_name = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("send_unsubscribe_message", "int(1)", isNullable: false)]
        public bool SendUnsubscribeMessage
        {
            get { return ERPNextConverter.IntToBool((int)data.send_unsubscribe_message); }
            set { data.send_unsubscribe_message = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("track_email_status", "int(1)", isNullable: false)]
        public bool TrackEmailStatus
        {
            get { return ERPNextConverter.IntToBool((int)data.track_email_status); }
            set { data.track_email_status = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("no_smtp_authentication", "int(1)", isNullable: false)]
        public bool NoSmtpAuthentication
        {
            get { return ERPNextConverter.IntToBool((int)data.no_smtp_authentication); }
            set { data.no_smtp_authentication = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("add_signature", "int(1)", isNullable: false)]
        public bool AddSignature
        {
            get { return ERPNextConverter.IntToBool((int)data.add_signature); }
            set { data.add_signature = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("signature", "longtext", isNullable: true)]
        public string? Signature
        {
            get { return data.signature; }
            set { data.signature = value; }
        }

        [ColumnInfo("enable_auto_reply", "int(1)", isNullable: false)]
        public bool EnableAutoReply
        {
            get { return ERPNextConverter.IntToBool((int)data.enable_auto_reply); }
            set { data.enable_auto_reply = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("auto_reply_message", "longtext", isNullable: true)]
        public string? AutoReplyMessage
        {
            get { return data.auto_reply_message; }
            set { data.auto_reply_message = value; }
        }

        [ColumnInfo("footer", "longtext", isNullable: true)]
        public string? Footer
        {
            get { return data.footer; }
            set { data.footer = value; }
        }

        [ColumnInfo("brand_logo", "text", isNullable: true)]
        public string? BrandLogo
        {
            get { return data.brand_logo; }
            set { data.brand_logo = value; }
        }

        [ColumnInfo("uidvalidity", "varchar(140)", isNullable: true)]
        public string? Uidvalidity
        {
            get { return data.uidvalidity; }
            set { data.uidvalidity = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("uidnext", "int(11)", isNullable: false)]
        public int Uidnext
        {
            get { return data.uidnext; }
            set { data.uidnext = value; }
        }

        [ColumnInfo("no_failed", "int(11)", isNullable: false)]
        public int NoFailed
        {
            get { return data.no_failed; }
            set { data.no_failed = value; }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

