/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/11/2022 7:52:10 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using _DockType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Email.Newsletter
{
    public partial class ERP_Email_Newsletter : 
        ERPNextObjectBase, 
        ISerializePropertiesToJson, 
        IDeserializePropertiesFromJson<ERPNextObjectBase>
    {
        public ERP_Email_Newsletter() : this(new ERPObject(_DockType.Email_Newsletter)) { }
        public ERP_Email_Newsletter(ERPObject obj) : base(obj) { }

        public static string? GetColumnName(string propertyName)
        {
            return ERPNextObjectBase.GetColumnName<ERP_Email_Newsletter>(propertyName);
        }

        public static string? GetPropertyName(string columnName)
        {
            return ERPNextObjectBase.GetPropertyName<ERP_Email_Newsletter>(columnName);
        }

        public string Serialize()
        {
            //
            // serializtion is more complex... will need to serialize the data
            // property ONLY, but map the names to the exposed property names
            //
            var options = new JsonSerializerOptions
            {
                DictionaryKeyPolicy = new CustomJsonSerializationPolicy<ERP_Email_Newsletter>()
            };
            return JsonSerializer.Serialize(value: this.data,
                                            options: options);
        }

        public static ERP_Email_Newsletter? Deserialize(string json)
        {
            //
            // deserialization is straight-forward... setters will only be called if values
            // are included in the json string
            //
            return JsonSerializer.Deserialize<ERP_Email_Newsletter>(json: json);
        }

        [Column("name")]
        public string Name
        {
            get { return data.name; }
            set { data.name = value; }
        }

        [Column("creation")]
        public DateTime? Creation
        {
            get { return data.creation; }
            set { data.creation = value; }
        }

        [Column("modified")]
        public DateTime? Modified
        {
            get { return data.modified; }
            set { data.modified = value; }
        }

        [Column("modified_by")]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = value; }
        }

        [Column("owner")]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = value; }
        }

        [Column("docstatus")]
        public int Docstatus
        {
            get { return data.docstatus; }
            set { data.docstatus = value; }
        }

        [Column("idx")]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [Column("email_sent_at")]
        public DateTime? EmailSentAt
        {
            get { return data.email_sent_at; }
            set { data.email_sent_at = value; }
        }

        [Column("total_recipients")]
        public int TotalRecipients
        {
            get { return data.total_recipients; }
            set { data.total_recipients = value; }
        }

        [Column("email_sent")]
        public int EmailSent
        {
            get { return data.email_sent; }
            set { data.email_sent = value; }
        }

        [Column("sender_name")]
        public string? SenderName
        {
            get { return data.sender_name; }
            set { data.sender_name = value; }
        }

        [Column("sender_email")]
        public string? SenderEmail
        {
            get { return data.sender_email; }
            set { data.sender_email = value; }
        }

        [Column("send_from")]
        public string? SendFrom
        {
            get { return data.send_from; }
            set { data.send_from = value; }
        }

        [Column("subject")]
        public string? Subject
        {
            get { return data.subject; }
            set { data.subject = value; }
        }

        [Column("content_type")]
        public string? ContentType
        {
            get { return data.content_type; }
            set { data.content_type = value; }
        }

        [Column("message")]
        public string? Message
        {
            get { return data.message; }
            set { data.message = value; }
        }

        [Column("message_md")]
        public string? MessageMd
        {
            get { return data.message_md; }
            set { data.message_md = value; }
        }

        [Column("message_html")]
        public string? MessageHtml
        {
            get { return data.message_html; }
            set { data.message_html = value; }
        }

        [Column("send_unsubscribe_link")]
        public int SendUnsubscribeLink
        {
            get { return data.send_unsubscribe_link; }
            set { data.send_unsubscribe_link = value; }
        }

        [Column("send_webview_link")]
        public int SendWebviewLink
        {
            get { return data.send_webview_link; }
            set { data.send_webview_link = value; }
        }

        [Column("scheduled_to_send")]
        public int ScheduledToSend
        {
            get { return data.scheduled_to_send; }
            set { data.scheduled_to_send = value; }
        }

        [Column("schedule_sending")]
        public int ScheduleSending
        {
            get { return data.schedule_sending; }
            set { data.schedule_sending = value; }
        }

        [Column("schedule_send")]
        public DateTime? ScheduleSend
        {
            get { return data.schedule_send; }
            set { data.schedule_send = value; }
        }

        [Column("published")]
        public int Published
        {
            get { return data.published; }
            set { data.published = value; }
        }

        [Column("route")]
        public string? Route
        {
            get { return data.route; }
            set { data.route = value; }
        }

        [Column("_user_tags")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [Column("_comments")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [Column("_assign")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [Column("_liked_by")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

