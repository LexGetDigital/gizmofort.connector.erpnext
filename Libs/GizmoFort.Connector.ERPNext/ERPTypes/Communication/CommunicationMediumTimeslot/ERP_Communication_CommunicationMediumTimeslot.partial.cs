/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Communication.CommunicationMediumTimeslot
{
    public partial class ERP_Communication_CommunicationMediumTimeslot : ERPNextObjectBase
    {
        public ERP_Communication_CommunicationMediumTimeslot() : this(new ERPObject(_DocType.Communication_CommunicationMediumTimeslot)) { }
        public ERP_Communication_CommunicationMediumTimeslot(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("day_of_week", "varchar(140)", isNullable: true)]
        public string? DayOfWeek
        {
            get { return data.day_of_week; }
            set { data.day_of_week = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("from_time", "time(6)", isNullable: true)]
        public TimeSpan? FromTime
        {
            get { return ERPNextConverter.StringToTimeSpan(data.from_time); }
            set { data.from_time = ERPNextConverter.TimeSpanToString(value, 6); }
        }

        [ColumnInfo("to_time", "time(6)", isNullable: true)]
        public TimeSpan? ToTime
        {
            get { return ERPNextConverter.StringToTimeSpan(data.to_time); }
            set { data.to_time = ERPNextConverter.TimeSpanToString(value, 6); }
        }

        [ColumnInfo("employee_group", "varchar(140)", isNullable: true)]
        public string? EmployeeGroup
        {
            get { return data.employee_group; }
            set { data.employee_group = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parent", "varchar(140)", isNullable: true)]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parentfield", "varchar(140)", isNullable: true)]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parenttype", "varchar(140)", isNullable: true)]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = ERPNextConverter.TruncateString(value, 140); }
        }


    }
}

