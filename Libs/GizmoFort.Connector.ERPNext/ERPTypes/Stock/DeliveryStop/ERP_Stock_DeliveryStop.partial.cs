/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Stock.DeliveryStop
{
    public partial class ERP_Stock_DeliveryStop : ERPNextObjectBase
    {
        public ERP_Stock_DeliveryStop() : this(new ERPObject(_DocType.Stock_DeliveryStop)) { }
        public ERP_Stock_DeliveryStop(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("customer", "varchar(140)", isNullable: true)]
        public string? Customer
        {
            get { return data.customer; }
            set { data.customer = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("address", "varchar(140)", isNullable: true)]
        public string? Address
        {
            get { return data.address; }
            set { data.address = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("@lock", "int(1)", isNullable: false)]
        public bool Lock
        {
            get { return ERPNextConverter.IntToBool((int)data.@lock); }
            set { data.@lock = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("customer_address", "text", isNullable: true)]
        public string? CustomerAddress
        {
            get { return data.customer_address; }
            set { data.customer_address = value; }
        }

        [ColumnInfo("visited", "int(1)", isNullable: false)]
        public bool Visited
        {
            get { return ERPNextConverter.IntToBool((int)data.visited); }
            set { data.visited = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("delivery_note", "varchar(140)", isNullable: true)]
        public string? DeliveryNote
        {
            get { return data.delivery_note; }
            set { data.delivery_note = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("grand_total", "decimal(21,9)", isNullable: false)]
        public decimal GrandTotal
        {
            get { return data.grand_total; }
            set { data.grand_total = value; }
        }

        [ColumnInfo("contact", "varchar(140)", isNullable: true)]
        public string? Contact
        {
            get { return data.contact; }
            set { data.contact = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("email_sent_to", "varchar(140)", isNullable: true)]
        public string? EmailSentTo
        {
            get { return data.email_sent_to; }
            set { data.email_sent_to = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("customer_contact", "text", isNullable: true)]
        public string? CustomerContact
        {
            get { return data.customer_contact; }
            set { data.customer_contact = value; }
        }

        [ColumnInfo("distance", "decimal(21,9)", isNullable: false)]
        public decimal Distance
        {
            get { return data.distance; }
            set { data.distance = value; }
        }

        [ColumnInfo("estimated_arrival", "datetime(6)", isNullable: true)]
        public DateTimeOffset? EstimatedArrival
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.estimated_arrival); }
            set { data.estimated_arrival = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("lat", "decimal(21,9)", isNullable: false)]
        public decimal Lat
        {
            get { return data.lat; }
            set { data.lat = value; }
        }

        [ColumnInfo("uom", "varchar(140)", isNullable: true)]
        public string? Uom
        {
            get { return data.uom; }
            set { data.uom = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("lng", "decimal(21,9)", isNullable: false)]
        public decimal Lng
        {
            get { return data.lng; }
            set { data.lng = value; }
        }

        [ColumnInfo("details", "longtext", isNullable: true)]
        public string? Details
        {
            get { return data.details; }
            set { data.details = value; }
        }

        [ColumnInfo("parent", "varchar(140)", isNullable: true)]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parentfield", "varchar(140)", isNullable: true)]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parenttype", "varchar(140)", isNullable: true)]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = ERPNextConverter.TruncateString(value, 140); }
        }


    }
}

