/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/13/2022 7:48:39 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Stock.ItemDefault
{
    public partial class ERP_Stock_ItemDefault : ERPNextObjectBase
    {
        public ERP_Stock_ItemDefault() : this(new ERPObject(_DocType.Stock_ItemDefault)) { }
        public ERP_Stock_ItemDefault(ERPObject obj) : base(obj) { }

        //public static string? GetColumnName(string propertyName)
        //{
        //    return ERPNextObjectBase.GetColumnName<ERP_Stock_ItemDefault>(propertyName);
        //}

        //public static string? GetPropertyName(string columnName)
        //{
        //    return ERPNextObjectBase.GetPropertyName<ERP_Stock_ItemDefault>(columnName);
        //}

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_warehouse", "varchar(140)", isNullable: true)]
        public string? DefaultWarehouse
        {
            get { return data.default_warehouse; }
            set { data.default_warehouse = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_price_list", "varchar(140)", isNullable: true)]
        public string? DefaultPriceList
        {
            get { return data.default_price_list; }
            set { data.default_price_list = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_discount_account", "varchar(140)", isNullable: true)]
        public string? DefaultDiscountAccount
        {
            get { return data.default_discount_account; }
            set { data.default_discount_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("buying_cost_center", "varchar(140)", isNullable: true)]
        public string? BuyingCostCenter
        {
            get { return data.buying_cost_center; }
            set { data.buying_cost_center = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_supplier", "varchar(140)", isNullable: true)]
        public string? DefaultSupplier
        {
            get { return data.default_supplier; }
            set { data.default_supplier = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("expense_account", "varchar(140)", isNullable: true)]
        public string? ExpenseAccount
        {
            get { return data.expense_account; }
            set { data.expense_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_provisional_account", "varchar(140)", isNullable: true)]
        public string? DefaultProvisionalAccount
        {
            get { return data.default_provisional_account; }
            set { data.default_provisional_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("selling_cost_center", "varchar(140)", isNullable: true)]
        public string? SellingCostCenter
        {
            get { return data.selling_cost_center; }
            set { data.selling_cost_center = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("income_account", "varchar(140)", isNullable: true)]
        public string? IncomeAccount
        {
            get { return data.income_account; }
            set { data.income_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parent", "varchar(140)", isNullable: true)]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parentfield", "varchar(140)", isNullable: true)]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parenttype", "varchar(140)", isNullable: true)]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = ERPNextConverter.TruncateString(value, 140); }
        }


    }
}

