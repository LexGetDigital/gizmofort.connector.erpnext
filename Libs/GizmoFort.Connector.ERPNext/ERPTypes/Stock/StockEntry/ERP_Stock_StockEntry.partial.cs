/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/13/2022 7:48:39 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Stock.StockEntry
{
    public partial class ERP_Stock_StockEntry : ERPNextObjectBase
    {
        public ERP_Stock_StockEntry() : this(new ERPObject(_DocType.Stock_StockEntry)) { }
        public ERP_Stock_StockEntry(ERPObject obj) : base(obj) { }

        //public static string? GetColumnName(string propertyName)
        //{
        //    return ERPNextObjectBase.GetColumnName<ERP_Stock_StockEntry>(propertyName);
        //}

        //public static string? GetPropertyName(string columnName)
        //{
        //    return ERPNextObjectBase.GetPropertyName<ERP_Stock_StockEntry>(columnName);
        //}

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("naming_series", "varchar(140)", isNullable: true)]
        public string? NamingSeries
        {
            get { return data.naming_series; }
            set { data.naming_series = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("stock_entry_type", "varchar(140)", isNullable: true)]
        public string? StockEntryType
        {
            get { return data.stock_entry_type; }
            set { data.stock_entry_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("outgoing_stock_entry", "varchar(140)", isNullable: true)]
        public string? OutgoingStockEntry
        {
            get { return data.outgoing_stock_entry; }
            set { data.outgoing_stock_entry = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("purpose", "varchar(140)", isNullable: true)]
        public string? Purpose
        {
            get { return data.purpose; }
            set { data.purpose = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("add_to_transit", "int(1)", isNullable: false)]
        public bool AddToTransit
        {
            get { return ERPNextConverter.IntToBool((int)data.add_to_transit); }
            set { data.add_to_transit = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("work_order", "varchar(140)", isNullable: true)]
        public string? WorkOrder
        {
            get { return data.work_order; }
            set { data.work_order = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("purchase_order", "varchar(140)", isNullable: true)]
        public string? PurchaseOrder
        {
            get { return data.purchase_order; }
            set { data.purchase_order = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("subcontracting_order", "varchar(140)", isNullable: true)]
        public string? SubcontractingOrder
        {
            get { return data.subcontracting_order; }
            set { data.subcontracting_order = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("delivery_note_no", "varchar(140)", isNullable: true)]
        public string? DeliveryNoteNo
        {
            get { return data.delivery_note_no; }
            set { data.delivery_note_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("sales_invoice_no", "varchar(140)", isNullable: true)]
        public string? SalesInvoiceNo
        {
            get { return data.sales_invoice_no; }
            set { data.sales_invoice_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("pick_list", "varchar(140)", isNullable: true)]
        public string? PickList
        {
            get { return data.pick_list; }
            set { data.pick_list = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("purchase_receipt_no", "varchar(140)", isNullable: true)]
        public string? PurchaseReceiptNo
        {
            get { return data.purchase_receipt_no; }
            set { data.purchase_receipt_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("posting_date", "date", isNullable: true)]
        public DateOnly? PostingDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.posting_date); }
            set { data.posting_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("posting_time", "time(6)", isNullable: true)]
        public TimeSpan? PostingTime
        {
            get { return ERPNextConverter.StringToTimeSpan(data.posting_time); }
            set { data.posting_time = ERPNextConverter.TimeSpanToString(value, 6); }
        }

        [ColumnInfo("set_posting_time", "int(1)", isNullable: false)]
        public bool SetPostingTime
        {
            get { return ERPNextConverter.IntToBool((int)data.set_posting_time); }
            set { data.set_posting_time = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("inspection_required", "int(1)", isNullable: false)]
        public bool InspectionRequired
        {
            get { return ERPNextConverter.IntToBool((int)data.inspection_required); }
            set { data.inspection_required = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("from_bom", "int(1)", isNullable: false)]
        public bool FromBom
        {
            get { return ERPNextConverter.IntToBool((int)data.from_bom); }
            set { data.from_bom = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("apply_putaway_rule", "int(1)", isNullable: false)]
        public bool ApplyPutawayRule
        {
            get { return ERPNextConverter.IntToBool((int)data.apply_putaway_rule); }
            set { data.apply_putaway_rule = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("bom_no", "varchar(140)", isNullable: true)]
        public string? BomNo
        {
            get { return data.bom_no; }
            set { data.bom_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("fg_completed_qty", "decimal(21,9)", isNullable: false)]
        public decimal FgCompletedQty
        {
            get { return data.fg_completed_qty; }
            set { data.fg_completed_qty = value; }
        }

        [ColumnInfo("use_multi_level_bom", "int(1)", isNullable: false)]
        public bool UseMultiLevelBom
        {
            get { return ERPNextConverter.IntToBool((int)data.use_multi_level_bom); }
            set { data.use_multi_level_bom = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("from_warehouse", "varchar(140)", isNullable: true)]
        public string? FromWarehouse
        {
            get { return data.from_warehouse; }
            set { data.from_warehouse = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("source_warehouse_address", "varchar(140)", isNullable: true)]
        public string? SourceWarehouseAddress
        {
            get { return data.source_warehouse_address; }
            set { data.source_warehouse_address = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("source_address_display", "text", isNullable: true)]
        public string? SourceAddressDisplay
        {
            get { return data.source_address_display; }
            set { data.source_address_display = value; }
        }

        [ColumnInfo("to_warehouse", "varchar(140)", isNullable: true)]
        public string? ToWarehouse
        {
            get { return data.to_warehouse; }
            set { data.to_warehouse = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("target_warehouse_address", "varchar(140)", isNullable: true)]
        public string? TargetWarehouseAddress
        {
            get { return data.target_warehouse_address; }
            set { data.target_warehouse_address = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("target_address_display", "text", isNullable: true)]
        public string? TargetAddressDisplay
        {
            get { return data.target_address_display; }
            set { data.target_address_display = value; }
        }

        [ColumnInfo("scan_barcode", "varchar(140)", isNullable: true)]
        public string? ScanBarcode
        {
            get { return data.scan_barcode; }
            set { data.scan_barcode = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("total_outgoing_value", "decimal(21,9)", isNullable: false)]
        public decimal TotalOutgoingValue
        {
            get { return data.total_outgoing_value; }
            set { data.total_outgoing_value = value; }
        }

        [ColumnInfo("total_incoming_value", "decimal(21,9)", isNullable: false)]
        public decimal TotalIncomingValue
        {
            get { return data.total_incoming_value; }
            set { data.total_incoming_value = value; }
        }

        [ColumnInfo("value_difference", "decimal(21,9)", isNullable: false)]
        public decimal ValueDifference
        {
            get { return data.value_difference; }
            set { data.value_difference = value; }
        }

        [ColumnInfo("total_additional_costs", "decimal(21,9)", isNullable: false)]
        public decimal TotalAdditionalCosts
        {
            get { return data.total_additional_costs; }
            set { data.total_additional_costs = value; }
        }

        [ColumnInfo("supplier", "varchar(140)", isNullable: true)]
        public string? Supplier
        {
            get { return data.supplier; }
            set { data.supplier = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("supplier_name", "varchar(140)", isNullable: true)]
        public string? SupplierName
        {
            get { return data.supplier_name; }
            set { data.supplier_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("supplier_address", "varchar(140)", isNullable: true)]
        public string? SupplierAddress
        {
            get { return data.supplier_address; }
            set { data.supplier_address = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("address_display", "text", isNullable: true)]
        public string? AddressDisplay
        {
            get { return data.address_display; }
            set { data.address_display = value; }
        }

        [ColumnInfo("project", "varchar(140)", isNullable: true)]
        public string? Project
        {
            get { return data.project; }
            set { data.project = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("select_print_heading", "varchar(140)", isNullable: true)]
        public string? SelectPrintHeading
        {
            get { return data.select_print_heading; }
            set { data.select_print_heading = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("letter_head", "varchar(140)", isNullable: true)]
        public string? LetterHead
        {
            get { return data.letter_head; }
            set { data.letter_head = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("is_opening", "varchar(140)", isNullable: true)]
        public string? IsOpening
        {
            get { return data.is_opening; }
            set { data.is_opening = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("remarks", "text", isNullable: true)]
        public string? Remarks
        {
            get { return data.remarks; }
            set { data.remarks = value; }
        }

        [ColumnInfo("per_transferred", "decimal(21,9)", isNullable: false)]
        public decimal PerTransferred
        {
            get { return data.per_transferred; }
            set { data.per_transferred = value; }
        }

        [ColumnInfo("total_amount", "decimal(21,9)", isNullable: false)]
        public decimal TotalAmount
        {
            get { return data.total_amount; }
            set { data.total_amount = value; }
        }

        [ColumnInfo("job_card", "varchar(140)", isNullable: true)]
        public string? JobCard
        {
            get { return data.job_card; }
            set { data.job_card = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("amended_from", "varchar(140)", isNullable: true)]
        public string? AmendedFrom
        {
            get { return data.amended_from; }
            set { data.amended_from = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("credit_note", "varchar(140)", isNullable: true)]
        public string? CreditNote
        {
            get { return data.credit_note; }
            set { data.credit_note = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("is_return", "int(1)", isNullable: false)]
        public bool IsReturn
        {
            get { return ERPNextConverter.IntToBool((int)data.is_return); }
            set { data.is_return = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

