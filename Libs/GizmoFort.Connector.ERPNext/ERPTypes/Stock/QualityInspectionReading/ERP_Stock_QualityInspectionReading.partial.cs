/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/9/2022 12:40:42 AM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using _DockType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Stock.QualityInspectionReading
{
    public partial class ERP_Stock_QualityInspectionReading : ERPNextObjectBase
    {
        public ERP_Stock_QualityInspectionReading() : this(new ERPObject(_DockType.Stock_QualityInspectionReading)) { }
        public ERP_Stock_QualityInspectionReading(ERPObject obj) : base(obj) { }

        public static string? GetColumnName(string propertyName)
        {
            return ERPNextObjectBase.GetColumnName<ERP_Stock_QualityInspectionReading>(propertyName);
        }

        [Column("name")]
        public string Name
        {
            get { return data.name; }
            set { data.name = value; }
        }

        [Column("creation")]
        public DateTime? Creation
        {
            get { return data.creation; }
            set { data.creation = value; }
        }

        [Column("modified")]
        public DateTime? Modified
        {
            get { return data.modified; }
            set { data.modified = value; }
        }

        [Column("modified_by")]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = value; }
        }

        [Column("owner")]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = value; }
        }

        [Column("docstatus")]
        public int Docstatus
        {
            get { return data.docstatus; }
            set { data.docstatus = value; }
        }

        [Column("idx")]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [Column("specification")]
        public string? Specification
        {
            get { return data.specification; }
            set { data.specification = value; }
        }

        [Column("parameter_group")]
        public string? ParameterGroup
        {
            get { return data.parameter_group; }
            set { data.parameter_group = value; }
        }

        [Column("status")]
        public string? Status
        {
            get { return data.status; }
            set { data.status = value; }
        }

        [Column("@value")]
        public string? Value
        {
            get { return data.@value; }
            set { data.@value = value; }
        }

        [Column("numeric")]
        public int Numeric
        {
            get { return data.numeric; }
            set { data.numeric = value; }
        }

        [Column("manual_inspection")]
        public int ManualInspection
        {
            get { return data.manual_inspection; }
            set { data.manual_inspection = value; }
        }

        [Column("min_value")]
        public decimal MinValue
        {
            get { return data.min_value; }
            set { data.min_value = value; }
        }

        [Column("max_value")]
        public decimal MaxValue
        {
            get { return data.max_value; }
            set { data.max_value = value; }
        }

        [Column("formula_based_criteria")]
        public int FormulaBasedCriteria
        {
            get { return data.formula_based_criteria; }
            set { data.formula_based_criteria = value; }
        }

        [Column("acceptance_formula")]
        public string? AcceptanceFormula
        {
            get { return data.acceptance_formula; }
            set { data.acceptance_formula = value; }
        }

        [Column("reading_value")]
        public string? ReadingValue
        {
            get { return data.reading_value; }
            set { data.reading_value = value; }
        }

        [Column("reading_1")]
        public string? Reading1
        {
            get { return data.reading_1; }
            set { data.reading_1 = value; }
        }

        [Column("reading_2")]
        public string? Reading2
        {
            get { return data.reading_2; }
            set { data.reading_2 = value; }
        }

        [Column("reading_3")]
        public string? Reading3
        {
            get { return data.reading_3; }
            set { data.reading_3 = value; }
        }

        [Column("reading_4")]
        public string? Reading4
        {
            get { return data.reading_4; }
            set { data.reading_4 = value; }
        }

        [Column("reading_5")]
        public string? Reading5
        {
            get { return data.reading_5; }
            set { data.reading_5 = value; }
        }

        [Column("reading_6")]
        public string? Reading6
        {
            get { return data.reading_6; }
            set { data.reading_6 = value; }
        }

        [Column("reading_7")]
        public string? Reading7
        {
            get { return data.reading_7; }
            set { data.reading_7 = value; }
        }

        [Column("reading_8")]
        public string? Reading8
        {
            get { return data.reading_8; }
            set { data.reading_8 = value; }
        }

        [Column("reading_9")]
        public string? Reading9
        {
            get { return data.reading_9; }
            set { data.reading_9 = value; }
        }

        [Column("reading_10")]
        public string? Reading10
        {
            get { return data.reading_10; }
            set { data.reading_10 = value; }
        }

        [Column("parent")]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = value; }
        }

        [Column("parentfield")]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = value; }
        }

        [Column("parenttype")]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = value; }
        }


    }
}

