/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Stock.StockEntryDetail
{
    public partial class ERP_Stock_StockEntryDetail : ERPNextObjectBase
    {
        public ERP_Stock_StockEntryDetail() : this(new ERPObject(_DocType.Stock_StockEntryDetail)) { }
        public ERP_Stock_StockEntryDetail(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("barcode", "varchar(140)", isNullable: true)]
        public string? Barcode
        {
            get { return data.barcode; }
            set { data.barcode = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("s_warehouse", "varchar(140)", isNullable: true)]
        public string? SWarehouse
        {
            get { return data.s_warehouse; }
            set { data.s_warehouse = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("t_warehouse", "varchar(140)", isNullable: true)]
        public string? TWarehouse
        {
            get { return data.t_warehouse; }
            set { data.t_warehouse = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("item_code", "varchar(140)", isNullable: true)]
        public string? ItemCode
        {
            get { return data.item_code; }
            set { data.item_code = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("item_name", "varchar(140)", isNullable: true)]
        public string? ItemName
        {
            get { return data.item_name; }
            set { data.item_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("is_finished_item", "int(1)", isNullable: false)]
        public bool IsFinishedItem
        {
            get { return ERPNextConverter.IntToBool((int)data.is_finished_item); }
            set { data.is_finished_item = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("is_scrap_item", "int(1)", isNullable: false)]
        public bool IsScrapItem
        {
            get { return ERPNextConverter.IntToBool((int)data.is_scrap_item); }
            set { data.is_scrap_item = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("quality_inspection", "varchar(140)", isNullable: true)]
        public string? QualityInspection
        {
            get { return data.quality_inspection; }
            set { data.quality_inspection = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("is_process_loss", "int(1)", isNullable: false)]
        public bool IsProcessLoss
        {
            get { return ERPNextConverter.IntToBool((int)data.is_process_loss); }
            set { data.is_process_loss = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("subcontracted_item", "varchar(140)", isNullable: true)]
        public string? SubcontractedItem
        {
            get { return data.subcontracted_item; }
            set { data.subcontracted_item = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("description", "longtext", isNullable: true)]
        public string? Description
        {
            get { return data.description; }
            set { data.description = value; }
        }

        [ColumnInfo("item_group", "varchar(140)", isNullable: true)]
        public string? ItemGroup
        {
            get { return data.item_group; }
            set { data.item_group = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("image", "text", isNullable: true)]
        public string? Image
        {
            get { return data.image; }
            set { data.image = value; }
        }

        [ColumnInfo("qty", "decimal(21,9)", isNullable: false)]
        public decimal Qty
        {
            get { return data.qty; }
            set { data.qty = value; }
        }

        [ColumnInfo("transfer_qty", "decimal(21,9)", isNullable: false)]
        public decimal TransferQty
        {
            get { return data.transfer_qty; }
            set { data.transfer_qty = value; }
        }

        [ColumnInfo("retain_sample", "int(1)", isNullable: false)]
        public bool RetainSample
        {
            get { return ERPNextConverter.IntToBool((int)data.retain_sample); }
            set { data.retain_sample = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("uom", "varchar(140)", isNullable: true)]
        public string? Uom
        {
            get { return data.uom; }
            set { data.uom = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("stock_uom", "varchar(140)", isNullable: true)]
        public string? StockUom
        {
            get { return data.stock_uom; }
            set { data.stock_uom = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("conversion_factor", "decimal(21,9)", isNullable: false)]
        public decimal ConversionFactor
        {
            get { return data.conversion_factor; }
            set { data.conversion_factor = value; }
        }

        [ColumnInfo("sample_quantity", "int(11)", isNullable: false)]
        public int SampleQuantity
        {
            get { return data.sample_quantity; }
            set { data.sample_quantity = value; }
        }

        [ColumnInfo("basic_rate", "decimal(21,9)", isNullable: false)]
        public decimal BasicRate
        {
            get { return data.basic_rate; }
            set { data.basic_rate = value; }
        }

        [ColumnInfo("additional_cost", "decimal(21,9)", isNullable: false)]
        public decimal AdditionalCost
        {
            get { return data.additional_cost; }
            set { data.additional_cost = value; }
        }

        [ColumnInfo("valuation_rate", "decimal(21,9)", isNullable: false)]
        public decimal ValuationRate
        {
            get { return data.valuation_rate; }
            set { data.valuation_rate = value; }
        }

        [ColumnInfo("allow_zero_valuation_rate", "int(1)", isNullable: false)]
        public bool AllowZeroValuationRate
        {
            get { return ERPNextConverter.IntToBool((int)data.allow_zero_valuation_rate); }
            set { data.allow_zero_valuation_rate = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("set_basic_rate_manually", "int(1)", isNullable: false)]
        public bool SetBasicRateManually
        {
            get { return ERPNextConverter.IntToBool((int)data.set_basic_rate_manually); }
            set { data.set_basic_rate_manually = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("basic_amount", "decimal(21,9)", isNullable: false)]
        public decimal BasicAmount
        {
            get { return data.basic_amount; }
            set { data.basic_amount = value; }
        }

        [ColumnInfo("amount", "decimal(21,9)", isNullable: false)]
        public decimal Amount
        {
            get { return data.amount; }
            set { data.amount = value; }
        }

        [ColumnInfo("serial_no", "text", isNullable: true)]
        public string? SerialNo
        {
            get { return data.serial_no; }
            set { data.serial_no = value; }
        }

        [ColumnInfo("batch_no", "varchar(140)", isNullable: true)]
        public string? BatchNo
        {
            get { return data.batch_no; }
            set { data.batch_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("expense_account", "varchar(140)", isNullable: true)]
        public string? ExpenseAccount
        {
            get { return data.expense_account; }
            set { data.expense_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("cost_center", "varchar(140)", isNullable: true)]
        public string? CostCenter
        {
            get { return data.cost_center; }
            set { data.cost_center = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("project", "varchar(140)", isNullable: true)]
        public string? Project
        {
            get { return data.project; }
            set { data.project = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("actual_qty", "decimal(21,9)", isNullable: false)]
        public decimal ActualQty
        {
            get { return data.actual_qty; }
            set { data.actual_qty = value; }
        }

        [ColumnInfo("transferred_qty", "decimal(21,9)", isNullable: false)]
        public decimal TransferredQty
        {
            get { return data.transferred_qty; }
            set { data.transferred_qty = value; }
        }

        [ColumnInfo("bom_no", "varchar(140)", isNullable: true)]
        public string? BomNo
        {
            get { return data.bom_no; }
            set { data.bom_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("allow_alternative_item", "int(1)", isNullable: false)]
        public bool AllowAlternativeItem
        {
            get { return ERPNextConverter.IntToBool((int)data.allow_alternative_item); }
            set { data.allow_alternative_item = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("material_request", "varchar(140)", isNullable: true)]
        public string? MaterialRequest
        {
            get { return data.material_request; }
            set { data.material_request = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("material_request_item", "varchar(140)", isNullable: true)]
        public string? MaterialRequestItem
        {
            get { return data.material_request_item; }
            set { data.material_request_item = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("original_item", "varchar(140)", isNullable: true)]
        public string? OriginalItem
        {
            get { return data.original_item; }
            set { data.original_item = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("against_stock_entry", "varchar(140)", isNullable: true)]
        public string? AgainstStockEntry
        {
            get { return data.against_stock_entry; }
            set { data.against_stock_entry = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("ste_detail", "varchar(140)", isNullable: true)]
        public string? SteDetail
        {
            get { return data.ste_detail; }
            set { data.ste_detail = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("po_detail", "varchar(140)", isNullable: true)]
        public string? PoDetail
        {
            get { return data.po_detail; }
            set { data.po_detail = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("sco_rm_detail", "varchar(140)", isNullable: true)]
        public string? ScoRmDetail
        {
            get { return data.sco_rm_detail; }
            set { data.sco_rm_detail = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("putaway_rule", "varchar(140)", isNullable: true)]
        public string? PutawayRule
        {
            get { return data.putaway_rule; }
            set { data.putaway_rule = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("reference_purchase_receipt", "varchar(140)", isNullable: true)]
        public string? ReferencePurchaseReceipt
        {
            get { return data.reference_purchase_receipt; }
            set { data.reference_purchase_receipt = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("job_card_item", "varchar(140)", isNullable: true)]
        public string? JobCardItem
        {
            get { return data.job_card_item; }
            set { data.job_card_item = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parent", "varchar(140)", isNullable: true)]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parentfield", "varchar(140)", isNullable: true)]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parenttype", "varchar(140)", isNullable: true)]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = ERPNextConverter.TruncateString(value, 140); }
        }


    }
}

