/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Manufacturing.WorkOrderOperation
{
    public partial class ERP_Manufacturing_WorkOrderOperation : ERPNextObjectBase
    {
        public ERP_Manufacturing_WorkOrderOperation() : this(new ERPObject(_DocType.Manufacturing_WorkOrderOperation)) { }
        public ERP_Manufacturing_WorkOrderOperation(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("operation", "varchar(140)", isNullable: true)]
        public string? Operation
        {
            get { return data.operation; }
            set { data.operation = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("status", "varchar(140)", isNullable: true)]
        public string? Status
        {
            get { return data.status; }
            set { data.status = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("completed_qty", "decimal(21,9)", isNullable: false)]
        public decimal CompletedQty
        {
            get { return data.completed_qty; }
            set { data.completed_qty = value; }
        }

        [ColumnInfo("bom", "varchar(140)", isNullable: true)]
        public string? Bom
        {
            get { return data.bom; }
            set { data.bom = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("workstation", "varchar(140)", isNullable: true)]
        public string? Workstation
        {
            get { return data.workstation; }
            set { data.workstation = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("sequence_id", "int(11)", isNullable: false)]
        public int SequenceId
        {
            get { return data.sequence_id; }
            set { data.sequence_id = value; }
        }

        [ColumnInfo("description", "longtext", isNullable: true)]
        public string? Description
        {
            get { return data.description; }
            set { data.description = value; }
        }

        [ColumnInfo("planned_start_time", "datetime(6)", isNullable: true)]
        public DateTimeOffset? PlannedStartTime
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.planned_start_time); }
            set { data.planned_start_time = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("hour_rate", "decimal(21,9)", isNullable: false)]
        public decimal HourRate
        {
            get { return data.hour_rate; }
            set { data.hour_rate = value; }
        }

        [ColumnInfo("time_in_mins", "decimal(21,9)", isNullable: false)]
        public decimal TimeInMins
        {
            get { return data.time_in_mins; }
            set { data.time_in_mins = value; }
        }

        [ColumnInfo("planned_end_time", "datetime(6)", isNullable: true)]
        public DateTimeOffset? PlannedEndTime
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.planned_end_time); }
            set { data.planned_end_time = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("batch_size", "decimal(21,9)", isNullable: false)]
        public decimal BatchSize
        {
            get { return data.batch_size; }
            set { data.batch_size = value; }
        }

        [ColumnInfo("planned_operating_cost", "decimal(21,9)", isNullable: false)]
        public decimal PlannedOperatingCost
        {
            get { return data.planned_operating_cost; }
            set { data.planned_operating_cost = value; }
        }

        [ColumnInfo("actual_start_time", "datetime(6)", isNullable: true)]
        public DateTimeOffset? ActualStartTime
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.actual_start_time); }
            set { data.actual_start_time = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("actual_operation_time", "decimal(21,9)", isNullable: false)]
        public decimal ActualOperationTime
        {
            get { return data.actual_operation_time; }
            set { data.actual_operation_time = value; }
        }

        [ColumnInfo("actual_end_time", "datetime(6)", isNullable: true)]
        public DateTimeOffset? ActualEndTime
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.actual_end_time); }
            set { data.actual_end_time = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("actual_operating_cost", "decimal(21,9)", isNullable: false)]
        public decimal ActualOperatingCost
        {
            get { return data.actual_operating_cost; }
            set { data.actual_operating_cost = value; }
        }

        [ColumnInfo("parent", "varchar(140)", isNullable: true)]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parentfield", "varchar(140)", isNullable: true)]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parenttype", "varchar(140)", isNullable: true)]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = ERPNextConverter.TruncateString(value, 140); }
        }


    }
}

