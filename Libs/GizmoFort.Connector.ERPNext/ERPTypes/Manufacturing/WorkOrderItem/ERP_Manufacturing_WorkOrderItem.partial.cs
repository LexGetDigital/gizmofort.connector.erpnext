/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Manufacturing.WorkOrderItem
{
    public partial class ERP_Manufacturing_WorkOrderItem : ERPNextObjectBase
    {
        public ERP_Manufacturing_WorkOrderItem() : this(new ERPObject(_DocType.Manufacturing_WorkOrderItem)) { }
        public ERP_Manufacturing_WorkOrderItem(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("operation", "varchar(140)", isNullable: true)]
        public string? Operation
        {
            get { return data.operation; }
            set { data.operation = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("item_code", "varchar(140)", isNullable: true)]
        public string? ItemCode
        {
            get { return data.item_code; }
            set { data.item_code = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("source_warehouse", "varchar(140)", isNullable: true)]
        public string? SourceWarehouse
        {
            get { return data.source_warehouse; }
            set { data.source_warehouse = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("item_name", "varchar(140)", isNullable: true)]
        public string? ItemName
        {
            get { return data.item_name; }
            set { data.item_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("description", "text", isNullable: true)]
        public string? Description
        {
            get { return data.description; }
            set { data.description = value; }
        }

        [ColumnInfo("allow_alternative_item", "int(1)", isNullable: false)]
        public bool AllowAlternativeItem
        {
            get { return ERPNextConverter.IntToBool((int)data.allow_alternative_item); }
            set { data.allow_alternative_item = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("include_item_in_manufacturing", "int(1)", isNullable: false)]
        public bool IncludeItemInManufacturing
        {
            get { return ERPNextConverter.IntToBool((int)data.include_item_in_manufacturing); }
            set { data.include_item_in_manufacturing = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("required_qty", "decimal(21,9)", isNullable: false)]
        public decimal RequiredQty
        {
            get { return data.required_qty; }
            set { data.required_qty = value; }
        }

        [ColumnInfo("rate", "decimal(21,9)", isNullable: false)]
        public decimal Rate
        {
            get { return data.rate; }
            set { data.rate = value; }
        }

        [ColumnInfo("amount", "decimal(21,9)", isNullable: false)]
        public decimal Amount
        {
            get { return data.amount; }
            set { data.amount = value; }
        }

        [ColumnInfo("transferred_qty", "decimal(21,9)", isNullable: false)]
        public decimal TransferredQty
        {
            get { return data.transferred_qty; }
            set { data.transferred_qty = value; }
        }

        [ColumnInfo("consumed_qty", "decimal(21,9)", isNullable: false)]
        public decimal ConsumedQty
        {
            get { return data.consumed_qty; }
            set { data.consumed_qty = value; }
        }

        [ColumnInfo("available_qty_at_source_warehouse", "decimal(21,9)", isNullable: false)]
        public decimal AvailableQtyAtSourceWarehouse
        {
            get { return data.available_qty_at_source_warehouse; }
            set { data.available_qty_at_source_warehouse = value; }
        }

        [ColumnInfo("available_qty_at_wip_warehouse", "decimal(21,9)", isNullable: false)]
        public decimal AvailableQtyAtWipWarehouse
        {
            get { return data.available_qty_at_wip_warehouse; }
            set { data.available_qty_at_wip_warehouse = value; }
        }

        [ColumnInfo("parent", "varchar(140)", isNullable: true)]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parentfield", "varchar(140)", isNullable: true)]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parenttype", "varchar(140)", isNullable: true)]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = ERPNextConverter.TruncateString(value, 140); }
        }


    }
}

