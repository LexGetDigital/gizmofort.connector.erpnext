/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/13/2022 7:48:39 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Manufacturing.WorkOrder
{
    public partial class ERP_Manufacturing_WorkOrder : ERPNextObjectBase
    {
        public ERP_Manufacturing_WorkOrder() : this(new ERPObject(_DocType.Manufacturing_WorkOrder)) { }
        public ERP_Manufacturing_WorkOrder(ERPObject obj) : base(obj) { }

        //public static string? GetColumnName(string propertyName)
        //{
        //    return ERPNextObjectBase.GetColumnName<ERP_Manufacturing_WorkOrder>(propertyName);
        //}

        //public static string? GetPropertyName(string columnName)
        //{
        //    return ERPNextObjectBase.GetPropertyName<ERP_Manufacturing_WorkOrder>(columnName);
        //}

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("naming_series", "varchar(140)", isNullable: true)]
        public string? NamingSeries
        {
            get { return data.naming_series; }
            set { data.naming_series = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("status", "varchar(140)", isNullable: true)]
        public string? Status
        {
            get { return data.status; }
            set { data.status = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("production_item", "varchar(140)", isNullable: true)]
        public string? ProductionItem
        {
            get { return data.production_item; }
            set { data.production_item = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("item_name", "varchar(140)", isNullable: true)]
        public string? ItemName
        {
            get { return data.item_name; }
            set { data.item_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("image", "text", isNullable: true)]
        public string? Image
        {
            get { return data.image; }
            set { data.image = value; }
        }

        [ColumnInfo("bom_no", "varchar(140)", isNullable: true)]
        public string? BomNo
        {
            get { return data.bom_no; }
            set { data.bom_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("qty", "decimal(21,9)", isNullable: false)]
        public decimal Qty
        {
            get { return data.qty; }
            set { data.qty = value; }
        }

        [ColumnInfo("material_transferred_for_manufacturing", "decimal(21,9)", isNullable: false)]
        public decimal MaterialTransferredForManufacturing
        {
            get { return data.material_transferred_for_manufacturing; }
            set { data.material_transferred_for_manufacturing = value; }
        }

        [ColumnInfo("produced_qty", "decimal(21,9)", isNullable: false)]
        public decimal ProducedQty
        {
            get { return data.produced_qty; }
            set { data.produced_qty = value; }
        }

        [ColumnInfo("process_loss_qty", "decimal(21,9)", isNullable: false)]
        public decimal ProcessLossQty
        {
            get { return data.process_loss_qty; }
            set { data.process_loss_qty = value; }
        }

        [ColumnInfo("sales_order", "varchar(140)", isNullable: true)]
        public string? SalesOrder
        {
            get { return data.sales_order; }
            set { data.sales_order = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("project", "varchar(140)", isNullable: true)]
        public string? Project
        {
            get { return data.project; }
            set { data.project = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("has_serial_no", "int(1)", isNullable: false)]
        public bool HasSerialNo
        {
            get { return ERPNextConverter.IntToBool((int)data.has_serial_no); }
            set { data.has_serial_no = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("has_batch_no", "int(1)", isNullable: false)]
        public bool HasBatchNo
        {
            get { return ERPNextConverter.IntToBool((int)data.has_batch_no); }
            set { data.has_batch_no = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("serial_no", "text", isNullable: true)]
        public string? SerialNo
        {
            get { return data.serial_no; }
            set { data.serial_no = value; }
        }

        [ColumnInfo("batch_size", "decimal(21,9)", isNullable: false)]
        public decimal BatchSize
        {
            get { return data.batch_size; }
            set { data.batch_size = value; }
        }

        [ColumnInfo("allow_alternative_item", "int(1)", isNullable: false)]
        public bool AllowAlternativeItem
        {
            get { return ERPNextConverter.IntToBool((int)data.allow_alternative_item); }
            set { data.allow_alternative_item = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("use_multi_level_bom", "int(1)", isNullable: false)]
        public bool UseMultiLevelBom
        {
            get { return ERPNextConverter.IntToBool((int)data.use_multi_level_bom); }
            set { data.use_multi_level_bom = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("skip_transfer", "int(1)", isNullable: false)]
        public bool SkipTransfer
        {
            get { return ERPNextConverter.IntToBool((int)data.skip_transfer); }
            set { data.skip_transfer = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("from_wip_warehouse", "int(1)", isNullable: false)]
        public bool FromWipWarehouse
        {
            get { return ERPNextConverter.IntToBool((int)data.from_wip_warehouse); }
            set { data.from_wip_warehouse = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("update_consumed_material_cost_in_project", "int(1)", isNullable: false)]
        public bool UpdateConsumedMaterialCostInProject
        {
            get { return ERPNextConverter.IntToBool((int)data.update_consumed_material_cost_in_project); }
            set { data.update_consumed_material_cost_in_project = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("source_warehouse", "varchar(140)", isNullable: true)]
        public string? SourceWarehouse
        {
            get { return data.source_warehouse; }
            set { data.source_warehouse = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("wip_warehouse", "varchar(140)", isNullable: true)]
        public string? WipWarehouse
        {
            get { return data.wip_warehouse; }
            set { data.wip_warehouse = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("fg_warehouse", "varchar(140)", isNullable: true)]
        public string? FgWarehouse
        {
            get { return data.fg_warehouse; }
            set { data.fg_warehouse = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("scrap_warehouse", "varchar(140)", isNullable: true)]
        public string? ScrapWarehouse
        {
            get { return data.scrap_warehouse; }
            set { data.scrap_warehouse = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("planned_start_date", "datetime(6)", isNullable: true)]
        public DateTimeOffset? PlannedStartDate
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.planned_start_date); }
            set { data.planned_start_date = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("planned_end_date", "datetime(6)", isNullable: true)]
        public DateTimeOffset? PlannedEndDate
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.planned_end_date); }
            set { data.planned_end_date = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("expected_delivery_date", "date", isNullable: true)]
        public DateOnly? ExpectedDeliveryDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.expected_delivery_date); }
            set { data.expected_delivery_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("actual_start_date", "datetime(6)", isNullable: true)]
        public DateTimeOffset? ActualStartDate
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.actual_start_date); }
            set { data.actual_start_date = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("actual_end_date", "datetime(6)", isNullable: true)]
        public DateTimeOffset? ActualEndDate
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.actual_end_date); }
            set { data.actual_end_date = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("lead_time", "decimal(21,9)", isNullable: false)]
        public decimal LeadTime
        {
            get { return data.lead_time; }
            set { data.lead_time = value; }
        }

        [ColumnInfo("transfer_material_against", "varchar(140)", isNullable: true)]
        public string? TransferMaterialAgainst
        {
            get { return data.transfer_material_against; }
            set { data.transfer_material_against = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("planned_operating_cost", "decimal(21,9)", isNullable: false)]
        public decimal PlannedOperatingCost
        {
            get { return data.planned_operating_cost; }
            set { data.planned_operating_cost = value; }
        }

        [ColumnInfo("actual_operating_cost", "decimal(21,9)", isNullable: false)]
        public decimal ActualOperatingCost
        {
            get { return data.actual_operating_cost; }
            set { data.actual_operating_cost = value; }
        }

        [ColumnInfo("additional_operating_cost", "decimal(21,9)", isNullable: false)]
        public decimal AdditionalOperatingCost
        {
            get { return data.additional_operating_cost; }
            set { data.additional_operating_cost = value; }
        }

        [ColumnInfo("corrective_operation_cost", "decimal(21,9)", isNullable: false)]
        public decimal CorrectiveOperationCost
        {
            get { return data.corrective_operation_cost; }
            set { data.corrective_operation_cost = value; }
        }

        [ColumnInfo("total_operating_cost", "decimal(21,9)", isNullable: false)]
        public decimal TotalOperatingCost
        {
            get { return data.total_operating_cost; }
            set { data.total_operating_cost = value; }
        }

        [ColumnInfo("description", "text", isNullable: true)]
        public string? Description
        {
            get { return data.description; }
            set { data.description = value; }
        }

        [ColumnInfo("stock_uom", "varchar(140)", isNullable: true)]
        public string? StockUom
        {
            get { return data.stock_uom; }
            set { data.stock_uom = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("material_request", "varchar(140)", isNullable: true)]
        public string? MaterialRequest
        {
            get { return data.material_request; }
            set { data.material_request = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("material_request_item", "varchar(140)", isNullable: true)]
        public string? MaterialRequestItem
        {
            get { return data.material_request_item; }
            set { data.material_request_item = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("sales_order_item", "varchar(140)", isNullable: true)]
        public string? SalesOrderItem
        {
            get { return data.sales_order_item; }
            set { data.sales_order_item = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("production_plan", "varchar(140)", isNullable: true)]
        public string? ProductionPlan
        {
            get { return data.production_plan; }
            set { data.production_plan = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("production_plan_item", "varchar(140)", isNullable: true)]
        public string? ProductionPlanItem
        {
            get { return data.production_plan_item; }
            set { data.production_plan_item = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("production_plan_sub_assembly_item", "varchar(140)", isNullable: true)]
        public string? ProductionPlanSubAssemblyItem
        {
            get { return data.production_plan_sub_assembly_item; }
            set { data.production_plan_sub_assembly_item = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("product_bundle_item", "varchar(140)", isNullable: true)]
        public string? ProductBundleItem
        {
            get { return data.product_bundle_item; }
            set { data.product_bundle_item = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("amended_from", "varchar(140)", isNullable: true)]
        public string? AmendedFrom
        {
            get { return data.amended_from; }
            set { data.amended_from = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }

        [ColumnInfo("_seen", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Seen
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._seen; }
            set { data._seen = value; }
        }


    }
}

