/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/13/2022 7:48:39 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Manufacturing.ProductionPlanSubAssemblyItem
{
    public partial class ERP_Manufacturing_ProductionPlanSubAssemblyItem : ERPNextObjectBase
    {
        public ERP_Manufacturing_ProductionPlanSubAssemblyItem() : this(new ERPObject(_DocType.Manufacturing_ProductionPlanSubAssemblyItem)) { }
        public ERP_Manufacturing_ProductionPlanSubAssemblyItem(ERPObject obj) : base(obj) { }

        //public static string? GetColumnName(string propertyName)
        //{
        //    return ERPNextObjectBase.GetColumnName<ERP_Manufacturing_ProductionPlanSubAssemblyItem>(propertyName);
        //}

        //public static string? GetPropertyName(string columnName)
        //{
        //    return ERPNextObjectBase.GetPropertyName<ERP_Manufacturing_ProductionPlanSubAssemblyItem>(columnName);
        //}

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("production_item", "varchar(140)", isNullable: true)]
        public string? ProductionItem
        {
            get { return data.production_item; }
            set { data.production_item = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("item_name", "varchar(140)", isNullable: true)]
        public string? ItemName
        {
            get { return data.item_name; }
            set { data.item_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("fg_warehouse", "varchar(140)", isNullable: true)]
        public string? FgWarehouse
        {
            get { return data.fg_warehouse; }
            set { data.fg_warehouse = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parent_item_code", "varchar(140)", isNullable: true)]
        public string? ParentItemCode
        {
            get { return data.parent_item_code; }
            set { data.parent_item_code = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("schedule_date", "datetime(6)", isNullable: true)]
        public DateTimeOffset? ScheduleDate
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.schedule_date); }
            set { data.schedule_date = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("qty", "decimal(21,9)", isNullable: false)]
        public decimal Qty
        {
            get { return data.qty; }
            set { data.qty = value; }
        }

        [ColumnInfo("bom_no", "varchar(140)", isNullable: true)]
        public string? BomNo
        {
            get { return data.bom_no; }
            set { data.bom_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("bom_level", "int(11)", isNullable: false)]
        public int BomLevel
        {
            get { return data.bom_level; }
            set { data.bom_level = value; }
        }

        [ColumnInfo("type_of_manufacturing", "varchar(140)", isNullable: true)]
        public string? TypeOfManufacturing
        {
            get { return data.type_of_manufacturing; }
            set { data.type_of_manufacturing = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("supplier", "varchar(140)", isNullable: true)]
        public string? Supplier
        {
            get { return data.supplier; }
            set { data.supplier = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("work_order", "varchar(140)", isNullable: true)]
        public string? WorkOrder
        {
            get { return data.work_order; }
            set { data.work_order = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("purchase_order", "varchar(140)", isNullable: true)]
        public string? PurchaseOrder
        {
            get { return data.purchase_order; }
            set { data.purchase_order = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("production_plan_item", "varchar(140)", isNullable: true)]
        public string? ProductionPlanItem
        {
            get { return data.production_plan_item; }
            set { data.production_plan_item = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("produced_qty", "varchar(140)", isNullable: true)]
        public string? ProducedQty
        {
            get { return data.produced_qty; }
            set { data.produced_qty = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("received_qty", "decimal(21,9)", isNullable: false)]
        public decimal ReceivedQty
        {
            get { return data.received_qty; }
            set { data.received_qty = value; }
        }

        [ColumnInfo("indent", "int(11)", isNullable: false)]
        public int Indent
        {
            get { return data.indent; }
            set { data.indent = value; }
        }

        [ColumnInfo("uom", "varchar(140)", isNullable: true)]
        public string? Uom
        {
            get { return data.uom; }
            set { data.uom = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("stock_uom", "varchar(140)", isNullable: true)]
        public string? StockUom
        {
            get { return data.stock_uom; }
            set { data.stock_uom = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("description", "text", isNullable: true)]
        public string? Description
        {
            get { return data.description; }
            set { data.description = value; }
        }

        [ColumnInfo("parent", "varchar(140)", isNullable: true)]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parentfield", "varchar(140)", isNullable: true)]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parenttype", "varchar(140)", isNullable: true)]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = ERPNextConverter.TruncateString(value, 140); }
        }


    }
}

