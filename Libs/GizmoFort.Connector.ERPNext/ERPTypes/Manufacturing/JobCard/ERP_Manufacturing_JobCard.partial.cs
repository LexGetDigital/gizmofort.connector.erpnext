/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Manufacturing.JobCard
{
    public partial class ERP_Manufacturing_JobCard : ERPNextObjectBase
    {
        public ERP_Manufacturing_JobCard() : this(new ERPObject(_DocType.Manufacturing_JobCard)) { }
        public ERP_Manufacturing_JobCard(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("naming_series", "varchar(140)", isNullable: true)]
        public string? NamingSeries
        {
            get { return data.naming_series; }
            set { data.naming_series = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("work_order", "varchar(140)", isNullable: true)]
        public string? WorkOrder
        {
            get { return data.work_order; }
            set { data.work_order = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("bom_no", "varchar(140)", isNullable: true)]
        public string? BomNo
        {
            get { return data.bom_no; }
            set { data.bom_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("posting_date", "date", isNullable: true)]
        public DateOnly? PostingDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.posting_date); }
            set { data.posting_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("production_item", "varchar(140)", isNullable: true)]
        public string? ProductionItem
        {
            get { return data.production_item; }
            set { data.production_item = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("item_name", "varchar(140)", isNullable: true)]
        public string? ItemName
        {
            get { return data.item_name; }
            set { data.item_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("for_quantity", "decimal(21,9)", isNullable: false)]
        public decimal ForQuantity
        {
            get { return data.for_quantity; }
            set { data.for_quantity = value; }
        }

        [ColumnInfo("serial_no", "text", isNullable: true)]
        public string? SerialNo
        {
            get { return data.serial_no; }
            set { data.serial_no = value; }
        }

        [ColumnInfo("wip_warehouse", "varchar(140)", isNullable: true)]
        public string? WipWarehouse
        {
            get { return data.wip_warehouse; }
            set { data.wip_warehouse = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("quality_inspection_template", "varchar(140)", isNullable: true)]
        public string? QualityInspectionTemplate
        {
            get { return data.quality_inspection_template; }
            set { data.quality_inspection_template = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("quality_inspection", "varchar(140)", isNullable: true)]
        public string? QualityInspection
        {
            get { return data.quality_inspection; }
            set { data.quality_inspection = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("project", "varchar(140)", isNullable: true)]
        public string? Project
        {
            get { return data.project; }
            set { data.project = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("batch_no", "varchar(140)", isNullable: true)]
        public string? BatchNo
        {
            get { return data.batch_no; }
            set { data.batch_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("operation", "varchar(140)", isNullable: true)]
        public string? Operation
        {
            get { return data.operation; }
            set { data.operation = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("operation_row_number", "varchar(140)", isNullable: true)]
        public string? OperationRowNumber
        {
            get { return data.operation_row_number; }
            set { data.operation_row_number = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("workstation", "varchar(140)", isNullable: true)]
        public string? Workstation
        {
            get { return data.workstation; }
            set { data.workstation = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("total_completed_qty", "decimal(21,9)", isNullable: false)]
        public decimal TotalCompletedQty
        {
            get { return data.total_completed_qty; }
            set { data.total_completed_qty = value; }
        }

        [ColumnInfo("total_time_in_mins", "decimal(21,9)", isNullable: false)]
        public decimal TotalTimeInMins
        {
            get { return data.total_time_in_mins; }
            set { data.total_time_in_mins = value; }
        }

        [ColumnInfo("for_job_card", "varchar(140)", isNullable: true)]
        public string? ForJobCard
        {
            get { return data.for_job_card; }
            set { data.for_job_card = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("is_corrective_job_card", "int(1)", isNullable: false)]
        public bool IsCorrectiveJobCard
        {
            get { return ERPNextConverter.IntToBool((int)data.is_corrective_job_card); }
            set { data.is_corrective_job_card = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("hour_rate", "decimal(21,9)", isNullable: false)]
        public decimal HourRate
        {
            get { return data.hour_rate; }
            set { data.hour_rate = value; }
        }

        [ColumnInfo("for_operation", "varchar(140)", isNullable: true)]
        public string? ForOperation
        {
            get { return data.for_operation; }
            set { data.for_operation = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("operation_id", "varchar(140)", isNullable: true)]
        public string? OperationId
        {
            get { return data.operation_id; }
            set { data.operation_id = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("sequence_id", "int(11)", isNullable: false)]
        public int SequenceId
        {
            get { return data.sequence_id; }
            set { data.sequence_id = value; }
        }

        [ColumnInfo("transferred_qty", "decimal(21,9)", isNullable: false)]
        public decimal TransferredQty
        {
            get { return data.transferred_qty; }
            set { data.transferred_qty = value; }
        }

        [ColumnInfo("requested_qty", "decimal(21,9)", isNullable: false)]
        public decimal RequestedQty
        {
            get { return data.requested_qty; }
            set { data.requested_qty = value; }
        }

        [ColumnInfo("status", "varchar(140)", isNullable: true)]
        public string? Status
        {
            get { return data.status; }
            set { data.status = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("remarks", "text", isNullable: true)]
        public string? Remarks
        {
            get { return data.remarks; }
            set { data.remarks = value; }
        }

        [ColumnInfo("barcode", "longtext", isNullable: true)]
        public string? Barcode
        {
            get { return data.barcode; }
            set { data.barcode = value; }
        }

        [ColumnInfo("job_started", "int(1)", isNullable: false)]
        public bool JobStarted
        {
            get { return ERPNextConverter.IntToBool((int)data.job_started); }
            set { data.job_started = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("started_time", "datetime(6)", isNullable: true)]
        public DateTimeOffset? StartedTime
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.started_time); }
            set { data.started_time = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("current_time", "int(11)", isNullable: false)]
        public int CurrentTime
        {
            get { return data.current_time; }
            set { data.current_time = value; }
        }

        [ColumnInfo("amended_from", "varchar(140)", isNullable: true)]
        public string? AmendedFrom
        {
            get { return data.amended_from; }
            set { data.amended_from = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

