/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/12/2022 2:29:08 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using _DockType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Social.EnergyPointRule
{
    public partial class ERP_Social_EnergyPointRule : ERPNextObjectBase
    {
        public ERP_Social_EnergyPointRule() : this(new ERPObject(_DockType.Social_EnergyPointRule)) { }
        public ERP_Social_EnergyPointRule(ERPObject obj) : base(obj) { }

        public static string? GetColumnName(string propertyName)
        {
            return ERPNextObjectBase.GetColumnName<ERP_Social_EnergyPointRule>(propertyName);
        }

        public static string? GetPropertyName(string columnName)
        {
            return ERPNextObjectBase.GetPropertyName<ERP_Social_EnergyPointRule>(columnName);
        }


        [Column("name")]
        public string Name
        {
            get { return data.name; }
            set { data.name = value; }
        }

        [Column("creation")]
        public DateTimeOffset? Creation
        {
            get { return data.creation; }
            set { data.creation = value; }
        }

        [Column("modified")]
        public DateTimeOffset? Modified
        {
            get { return data.modified; }
            set { data.modified = value; }
        }

        [Column("modified_by")]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = value; }
        }

        [Column("owner")]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = value; }
        }

        [Column("docstatus")]
        public int Docstatus
        {
            get { return data.docstatus; }
            set { data.docstatus = value; }
        }

        [Column("idx")]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [Column("enabled")]
        public int Enabled
        {
            get { return data.enabled; }
            set { data.enabled = value; }
        }

        [Column("rule_name")]
        public string? RuleName
        {
            get { return data.rule_name; }
            set { data.rule_name = value; }
        }

        [Column("reference_doctype")]
        public string? ReferenceDoctype
        {
            get { return data.reference_doctype; }
            set { data.reference_doctype = value; }
        }

        [Column("for_doc_event")]
        public string? ForDocEvent
        {
            get { return data.for_doc_event; }
            set { data.for_doc_event = value; }
        }

        [Column("field_to_check")]
        public string? FieldToCheck
        {
            get { return data.field_to_check; }
            set { data.field_to_check = value; }
        }

        [Column("points")]
        public int Points
        {
            get { return data.points; }
            set { data.points = value; }
        }

        [Column("for_assigned_users")]
        public int ForAssignedUsers
        {
            get { return data.for_assigned_users; }
            set { data.for_assigned_users = value; }
        }

        [Column("user_field")]
        public string? UserField
        {
            get { return data.user_field; }
            set { data.user_field = value; }
        }

        [Column("multiplier_field")]
        public string? MultiplierField
        {
            get { return data.multiplier_field; }
            set { data.multiplier_field = value; }
        }

        [Column("max_points")]
        public int MaxPoints
        {
            get { return data.max_points; }
            set { data.max_points = value; }
        }

        [Column("apply_only_once")]
        public int ApplyOnlyOnce
        {
            get { return data.apply_only_once; }
            set { data.apply_only_once = value; }
        }

        [Column("condition")]
        public string? Condition
        {
            get { return data.condition; }
            set { data.condition = value; }
        }

        [Column("_user_tags")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [Column("_comments")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [Column("_assign")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [Column("_liked_by")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

