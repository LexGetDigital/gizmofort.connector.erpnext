/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/12/2022 2:29:08 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using _DockType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Utilities.Video
{
    public partial class ERP_Utilities_Video : ERPNextObjectBase
    {
        public ERP_Utilities_Video() : this(new ERPObject(_DockType.Utilities_Video)) { }
        public ERP_Utilities_Video(ERPObject obj) : base(obj) { }

        public static string? GetColumnName(string propertyName)
        {
            return ERPNextObjectBase.GetColumnName<ERP_Utilities_Video>(propertyName);
        }

        public static string? GetPropertyName(string columnName)
        {
            return ERPNextObjectBase.GetPropertyName<ERP_Utilities_Video>(columnName);
        }


        [Column("name")]
        public string Name
        {
            get { return data.name; }
            set { data.name = value; }
        }

        [Column("creation")]
        public DateTimeOffset? Creation
        {
            get { return data.creation; }
            set { data.creation = value; }
        }

        [Column("modified")]
        public DateTimeOffset? Modified
        {
            get { return data.modified; }
            set { data.modified = value; }
        }

        [Column("modified_by")]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = value; }
        }

        [Column("owner")]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = value; }
        }

        [Column("docstatus")]
        public int Docstatus
        {
            get { return data.docstatus; }
            set { data.docstatus = value; }
        }

        [Column("idx")]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [Column("title")]
        public string? Title
        {
            get { return data.title; }
            set { data.title = value; }
        }

        [Column("provider")]
        public string? Provider
        {
            get { return data.provider; }
            set { data.provider = value; }
        }

        [Column("url")]
        public string? Url
        {
            get { return data.url; }
            set { data.url = value; }
        }

        [Column("youtube_video_id")]
        public string? YoutubeVideoId
        {
            get { return data.youtube_video_id; }
            set { data.youtube_video_id = value; }
        }

        [Column("publish_date")]
        public DateOnly? PublishDate
        {
            get { return data.publish_date; }
            set { data.publish_date = value; }
        }

        [Column("duration")]
        public decimal? Duration
        {
            get { return data.duration; }
            set { data.duration = value; }
        }

        [Column("like_count")]
        public decimal LikeCount
        {
            get { return data.like_count; }
            set { data.like_count = value; }
        }

        [Column("view_count")]
        public decimal ViewCount
        {
            get { return data.view_count; }
            set { data.view_count = value; }
        }

        [Column("dislike_count")]
        public decimal DislikeCount
        {
            get { return data.dislike_count; }
            set { data.dislike_count = value; }
        }

        [Column("comment_count")]
        public decimal CommentCount
        {
            get { return data.comment_count; }
            set { data.comment_count = value; }
        }

        [Column("description")]
        public string? Description
        {
            get { return data.description; }
            set { data.description = value; }
        }

        [Column("image")]
        public string? Image
        {
            get { return data.image; }
            set { data.image = value; }
        }

        [Column("_user_tags")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [Column("_comments")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [Column("_assign")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [Column("_liked_by")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

