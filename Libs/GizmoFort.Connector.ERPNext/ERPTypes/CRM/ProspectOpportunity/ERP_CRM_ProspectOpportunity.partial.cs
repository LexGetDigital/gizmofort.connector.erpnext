/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.CRM.ProspectOpportunity
{
    public partial class ERP_CRM_ProspectOpportunity : ERPNextObjectBase
    {
        public ERP_CRM_ProspectOpportunity() : this(new ERPObject(_DocType.CRM_ProspectOpportunity)) { }
        public ERP_CRM_ProspectOpportunity(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "bigint(20)", isNullable: false)]
        public long Name
        {
            get { return data.name; }
            set { data.name = value; }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("opportunity", "varchar(140)", isNullable: true)]
        public string? Opportunity
        {
            get { return data.opportunity; }
            set { data.opportunity = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("amount", "decimal(21,9)", isNullable: false)]
        public decimal Amount
        {
            get { return data.amount; }
            set { data.amount = value; }
        }

        [ColumnInfo("stage", "varchar(140)", isNullable: true)]
        public string? Stage
        {
            get { return data.stage; }
            set { data.stage = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("deal_owner", "varchar(140)", isNullable: true)]
        public string? DealOwner
        {
            get { return data.deal_owner; }
            set { data.deal_owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("probability", "decimal(21,9)", isNullable: false)]
        public decimal Probability
        {
            get { return data.probability; }
            set { data.probability = value; }
        }

        [ColumnInfo("expected_closing", "date", isNullable: true)]
        public DateOnly? ExpectedClosing
        {
            get { return ERPNextConverter.StringToDateOnly(data.expected_closing); }
            set { data.expected_closing = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("currency", "varchar(140)", isNullable: true)]
        public string? Currency
        {
            get { return data.currency; }
            set { data.currency = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("contact_person", "varchar(140)", isNullable: true)]
        public string? ContactPerson
        {
            get { return data.contact_person; }
            set { data.contact_person = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parent", "varchar(140)", isNullable: true)]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parentfield", "varchar(140)", isNullable: true)]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parenttype", "varchar(140)", isNullable: true)]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = ERPNextConverter.TruncateString(value, 140); }
        }


    }
}

