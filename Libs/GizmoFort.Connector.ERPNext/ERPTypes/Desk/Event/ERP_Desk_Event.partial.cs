/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/11/2022 7:52:10 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using _DockType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Desk.Event
{
    public partial class ERP_Desk_Event : 
        ERPNextObjectBase, 
        ISerializePropertiesToJson, 
        IDeserializePropertiesFromJson<ERPNextObjectBase>
    {
        public ERP_Desk_Event() : this(new ERPObject(_DockType.Desk_Event)) { }
        public ERP_Desk_Event(ERPObject obj) : base(obj) { }

        public static string? GetColumnName(string propertyName)
        {
            return ERPNextObjectBase.GetColumnName<ERP_Desk_Event>(propertyName);
        }

        public static string? GetPropertyName(string columnName)
        {
            return ERPNextObjectBase.GetPropertyName<ERP_Desk_Event>(columnName);
        }

        public string Serialize()
        {
            //
            // serializtion is more complex... will need to serialize the data
            // property ONLY, but map the names to the exposed property names
            //
            var options = new JsonSerializerOptions
            {
                DictionaryKeyPolicy = new CustomJsonSerializationPolicy<ERP_Desk_Event>()
            };
            return JsonSerializer.Serialize(value: this.data,
                                            options: options);
        }

        public static ERP_Desk_Event? Deserialize(string json)
        {
            //
            // deserialization is straight-forward... setters will only be called if values
            // are included in the json string
            //
            return JsonSerializer.Deserialize<ERP_Desk_Event>(json: json);
        }

        [Column("name")]
        public string Name
        {
            get { return data.name; }
            set { data.name = value; }
        }

        [Column("creation")]
        public DateTime? Creation
        {
            get { return data.creation; }
            set { data.creation = value; }
        }

        [Column("modified")]
        public DateTime? Modified
        {
            get { return data.modified; }
            set { data.modified = value; }
        }

        [Column("modified_by")]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = value; }
        }

        [Column("owner")]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = value; }
        }

        [Column("docstatus")]
        public int Docstatus
        {
            get { return data.docstatus; }
            set { data.docstatus = value; }
        }

        [Column("idx")]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [Column("subject")]
        public string? Subject
        {
            get { return data.subject; }
            set { data.subject = value; }
        }

        [Column("event_category")]
        public string? EventCategory
        {
            get { return data.event_category; }
            set { data.event_category = value; }
        }

        [Column("event_type")]
        public string? EventType
        {
            get { return data.event_type; }
            set { data.event_type = value; }
        }

        [Column("color")]
        public string? Color
        {
            get { return data.color; }
            set { data.color = value; }
        }

        [Column("send_reminder")]
        public int SendReminder
        {
            get { return data.send_reminder; }
            set { data.send_reminder = value; }
        }

        [Column("repeat_this_event")]
        public int RepeatThisEvent
        {
            get { return data.repeat_this_event; }
            set { data.repeat_this_event = value; }
        }

        [Column("starts_on")]
        public DateTime? StartsOn
        {
            get { return data.starts_on; }
            set { data.starts_on = value; }
        }

        [Column("ends_on")]
        public DateTime? EndsOn
        {
            get { return data.ends_on; }
            set { data.ends_on = value; }
        }

        [Column("status")]
        public string? Status
        {
            get { return data.status; }
            set { data.status = value; }
        }

        [Column("sender")]
        public string? Sender
        {
            get { return data.sender; }
            set { data.sender = value; }
        }

        [Column("all_day")]
        public int AllDay
        {
            get { return data.all_day; }
            set { data.all_day = value; }
        }

        [Column("sync_with_google_calendar")]
        public int SyncWithGoogleCalendar
        {
            get { return data.sync_with_google_calendar; }
            set { data.sync_with_google_calendar = value; }
        }

        [Column("google_calendar")]
        public string? GoogleCalendar
        {
            get { return data.google_calendar; }
            set { data.google_calendar = value; }
        }

        [Column("pulled_from_google_calendar")]
        public int PulledFromGoogleCalendar
        {
            get { return data.pulled_from_google_calendar; }
            set { data.pulled_from_google_calendar = value; }
        }

        [Column("google_calendar_id")]
        public string? GoogleCalendarId
        {
            get { return data.google_calendar_id; }
            set { data.google_calendar_id = value; }
        }

        [Column("google_calendar_event_id")]
        public string? GoogleCalendarEventId
        {
            get { return data.google_calendar_event_id; }
            set { data.google_calendar_event_id = value; }
        }

        [Column("repeat_on")]
        public string? RepeatOn
        {
            get { return data.repeat_on; }
            set { data.repeat_on = value; }
        }

        [Column("repeat_till")]
        public DateOnly? RepeatTill
        {
            get { return data.repeat_till; }
            set { data.repeat_till = value; }
        }

        [Column("monday")]
        public int Monday
        {
            get { return data.monday; }
            set { data.monday = value; }
        }

        [Column("tuesday")]
        public int Tuesday
        {
            get { return data.tuesday; }
            set { data.tuesday = value; }
        }

        [Column("wednesday")]
        public int Wednesday
        {
            get { return data.wednesday; }
            set { data.wednesday = value; }
        }

        [Column("thursday")]
        public int Thursday
        {
            get { return data.thursday; }
            set { data.thursday = value; }
        }

        [Column("friday")]
        public int Friday
        {
            get { return data.friday; }
            set { data.friday = value; }
        }

        [Column("saturday")]
        public int Saturday
        {
            get { return data.saturday; }
            set { data.saturday = value; }
        }

        [Column("sunday")]
        public int Sunday
        {
            get { return data.sunday; }
            set { data.sunday = value; }
        }

        [Column("description")]
        public string? Description
        {
            get { return data.description; }
            set { data.description = value; }
        }

        [Column("_user_tags")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [Column("_comments")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [Column("_assign")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [Column("_liked_by")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }

        [Column("_seen")]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Seen
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._seen; }
            set { data._seen = value; }
        }


    }
}

