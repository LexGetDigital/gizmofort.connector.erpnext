/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/13/2022 7:48:39 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Desk.DashboardChart
{
    public partial class ERP_Desk_DashboardChart : ERPNextObjectBase
    {
        public ERP_Desk_DashboardChart() : this(new ERPObject(_DocType.Desk_DashboardChart)) { }
        public ERP_Desk_DashboardChart(ERPObject obj) : base(obj) { }

        //public static string? GetColumnName(string propertyName)
        //{
        //    return ERPNextObjectBase.GetColumnName<ERP_Desk_DashboardChart>(propertyName);
        //}

        //public static string? GetPropertyName(string columnName)
        //{
        //    return ERPNextObjectBase.GetPropertyName<ERP_Desk_DashboardChart>(columnName);
        //}

        [ColumnInfo("from_date", "date", isNullable: true)]
        public DateOnly? FromDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.from_date); }
            set { data.from_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("to_date", "date", isNullable: true)]
        public DateOnly? ToDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.to_date); }
            set { data.to_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("time_interval", "varchar(140)", isNullable: true)]
        public string? TimeInterval
        {
            get { return data.time_interval; }
            set { data.time_interval = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("timeseries", "int(1)", isNullable: false)]
        public bool Timeseries
        {
            get { return ERPNextConverter.IntToBool((int)data.timeseries); }
            set { data.timeseries = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("type", "varchar(140)", isNullable: true)]
        public string? Type
        {
            get { return data.type; }
            set { data.type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("filters_json", "longtext", isNullable: true)]
        public string? FiltersJson
        {
            get { return data.filters_json; }
            set { data.filters_json = value; }
        }

        [ColumnInfo("dynamic_filters_json", "longtext", isNullable: true)]
        public string? DynamicFiltersJson
        {
            get { return data.dynamic_filters_json; }
            set { data.dynamic_filters_json = value; }
        }

        [ColumnInfo("custom_options", "longtext", isNullable: true)]
        public string? CustomOptions
        {
            get { return data.custom_options; }
            set { data.custom_options = value; }
        }

        [ColumnInfo("color", "varchar(140)", isNullable: true)]
        public string? Color
        {
            get { return data.color; }
            set { data.color = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("last_synced_on", "datetime(6)", isNullable: true)]
        public DateTimeOffset? LastSyncedOn
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.last_synced_on); }
            set { data.last_synced_on = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("is_standard", "int(1)", isNullable: false)]
        public bool IsStandard
        {
            get { return ERPNextConverter.IntToBool((int)data.is_standard); }
            set { data.is_standard = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("module", "varchar(140)", isNullable: true)]
        public string? Module
        {
            get { return data.module; }
            set { data.module = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("chart_name", "varchar(140)", isNullable: true)]
        public string? ChartName
        {
            get { return data.chart_name; }
            set { data.chart_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("chart_type", "varchar(140)", isNullable: true)]
        public string? ChartType
        {
            get { return data.chart_type; }
            set { data.chart_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("report_name", "varchar(140)", isNullable: true)]
        public string? ReportName
        {
            get { return data.report_name; }
            set { data.report_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("use_report_chart", "int(1)", isNullable: false)]
        public bool UseReportChart
        {
            get { return ERPNextConverter.IntToBool((int)data.use_report_chart); }
            set { data.use_report_chart = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("x_field", "varchar(140)", isNullable: true)]
        public string? XField
        {
            get { return data.x_field; }
            set { data.x_field = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("source", "varchar(140)", isNullable: true)]
        public string? Source
        {
            get { return data.source; }
            set { data.source = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("document_type", "varchar(140)", isNullable: true)]
        public string? DocumentType
        {
            get { return data.document_type; }
            set { data.document_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parent_document_type", "varchar(140)", isNullable: true)]
        public string? ParentDocumentType
        {
            get { return data.parent_document_type; }
            set { data.parent_document_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("based_on", "varchar(140)", isNullable: true)]
        public string? BasedOn
        {
            get { return data.based_on; }
            set { data.based_on = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("value_based_on", "varchar(140)", isNullable: true)]
        public string? ValueBasedOn
        {
            get { return data.value_based_on; }
            set { data.value_based_on = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("group_by_type", "varchar(140)", isNullable: true)]
        public string? GroupByType
        {
            get { return data.group_by_type; }
            set { data.group_by_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("group_by_based_on", "varchar(140)", isNullable: true)]
        public string? GroupByBasedOn
        {
            get { return data.group_by_based_on; }
            set { data.group_by_based_on = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("aggregate_function_based_on", "varchar(140)", isNullable: true)]
        public string? AggregateFunctionBasedOn
        {
            get { return data.aggregate_function_based_on; }
            set { data.aggregate_function_based_on = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("number_of_groups", "int(11)", isNullable: false)]
        public int NumberOfGroups
        {
            get { return data.number_of_groups; }
            set { data.number_of_groups = value; }
        }

        [ColumnInfo("is_public", "int(1)", isNullable: false)]
        public bool IsPublic
        {
            get { return ERPNextConverter.IntToBool((int)data.is_public); }
            set { data.is_public = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("heatmap_year", "varchar(140)", isNullable: true)]
        public string? HeatmapYear
        {
            get { return data.heatmap_year; }
            set { data.heatmap_year = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("timespan", "varchar(140)", isNullable: true)]
        public string? Timespan
        {
            get { return data.timespan; }
            set { data.timespan = ERPNextConverter.TruncateString(value, 140); }
        }


    }
}

