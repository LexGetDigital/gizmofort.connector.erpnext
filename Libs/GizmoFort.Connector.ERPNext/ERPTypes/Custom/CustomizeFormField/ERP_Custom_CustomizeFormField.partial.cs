/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/13/2022 7:48:39 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Custom.CustomizeFormField
{
    public partial class ERP_Custom_CustomizeFormField : ERPNextObjectBase
    {
        public ERP_Custom_CustomizeFormField() : this(new ERPObject(_DocType.Custom_CustomizeFormField)) { }
        public ERP_Custom_CustomizeFormField(ERPObject obj) : base(obj) { }

        //public static string? GetColumnName(string propertyName)
        //{
        //    return ERPNextObjectBase.GetColumnName<ERP_Custom_CustomizeFormField>(propertyName);
        //}

        //public static string? GetPropertyName(string columnName)
        //{
        //    return ERPNextObjectBase.GetPropertyName<ERP_Custom_CustomizeFormField>(columnName);
        //}

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("is_system_generated", "int(1)", isNullable: false)]
        public bool IsSystemGenerated
        {
            get { return ERPNextConverter.IntToBool((int)data.is_system_generated); }
            set { data.is_system_generated = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("label", "varchar(140)", isNullable: true)]
        public string? Label
        {
            get { return data.label; }
            set { data.label = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("fieldtype", "varchar(140)", isNullable: true)]
        public string? Fieldtype
        {
            get { return data.fieldtype; }
            set { data.fieldtype = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("fieldname", "varchar(140)", isNullable: true)]
        public string? Fieldname
        {
            get { return data.fieldname; }
            set { data.fieldname = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("non_negative", "int(1)", isNullable: false)]
        public bool NonNegative
        {
            get { return ERPNextConverter.IntToBool((int)data.non_negative); }
            set { data.non_negative = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("reqd", "int(1)", isNullable: false)]
        public bool Reqd
        {
            get { return ERPNextConverter.IntToBool((int)data.reqd); }
            set { data.reqd = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("unique", "int(1)", isNullable: false)]
        public bool Unique
        {
            get { return ERPNextConverter.IntToBool((int)data.unique); }
            set { data.unique = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("is_virtual", "int(1)", isNullable: false)]
        public bool IsVirtual
        {
            get { return ERPNextConverter.IntToBool((int)data.is_virtual); }
            set { data.is_virtual = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("in_list_view", "int(1)", isNullable: false)]
        public bool InListView
        {
            get { return ERPNextConverter.IntToBool((int)data.in_list_view); }
            set { data.in_list_view = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("in_standard_filter", "int(1)", isNullable: false)]
        public bool InStandardFilter
        {
            get { return ERPNextConverter.IntToBool((int)data.in_standard_filter); }
            set { data.in_standard_filter = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("in_global_search", "int(1)", isNullable: false)]
        public bool InGlobalSearch
        {
            get { return ERPNextConverter.IntToBool((int)data.in_global_search); }
            set { data.in_global_search = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("in_preview", "int(1)", isNullable: false)]
        public bool InPreview
        {
            get { return ERPNextConverter.IntToBool((int)data.in_preview); }
            set { data.in_preview = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("bold", "int(1)", isNullable: false)]
        public bool Bold
        {
            get { return ERPNextConverter.IntToBool((int)data.bold); }
            set { data.bold = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("no_copy", "int(1)", isNullable: false)]
        public bool NoCopy
        {
            get { return ERPNextConverter.IntToBool((int)data.no_copy); }
            set { data.no_copy = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("allow_in_quick_entry", "int(1)", isNullable: false)]
        public bool AllowInQuickEntry
        {
            get { return ERPNextConverter.IntToBool((int)data.allow_in_quick_entry); }
            set { data.allow_in_quick_entry = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("translatable", "int(1)", isNullable: false)]
        public bool Translatable
        {
            get { return ERPNextConverter.IntToBool((int)data.translatable); }
            set { data.translatable = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("@default", "text", isNullable: true)]
        public string? Default
        {
            get { return data.@default; }
            set { data.@default = value; }
        }

        [ColumnInfo("precision", "varchar(140)", isNullable: true)]
        public string? Precision
        {
            get { return data.precision; }
            set { data.precision = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("length", "int(11)", isNullable: false)]
        public int Length
        {
            get { return data.length; }
            set { data.length = value; }
        }

        [ColumnInfo("options", "text", isNullable: true)]
        public string? Options
        {
            get { return data.options; }
            set { data.options = value; }
        }

        [ColumnInfo("fetch_from", "text", isNullable: true)]
        public string? FetchFrom
        {
            get { return data.fetch_from; }
            set { data.fetch_from = value; }
        }

        [ColumnInfo("fetch_if_empty", "int(1)", isNullable: false)]
        public bool FetchIfEmpty
        {
            get { return ERPNextConverter.IntToBool((int)data.fetch_if_empty); }
            set { data.fetch_if_empty = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("show_dashboard", "int(1)", isNullable: false)]
        public bool ShowDashboard
        {
            get { return ERPNextConverter.IntToBool((int)data.show_dashboard); }
            set { data.show_dashboard = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("depends_on", "longtext", isNullable: true)]
        public string? DependsOn
        {
            get { return data.depends_on; }
            set { data.depends_on = value; }
        }

        [ColumnInfo("permlevel", "int(11)", isNullable: false)]
        public int Permlevel
        {
            get { return data.permlevel; }
            set { data.permlevel = value; }
        }

        [ColumnInfo("hidden", "int(1)", isNullable: false)]
        public bool Hidden
        {
            get { return ERPNextConverter.IntToBool((int)data.hidden); }
            set { data.hidden = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("read_only", "int(1)", isNullable: false)]
        public bool ReadOnly
        {
            get { return ERPNextConverter.IntToBool((int)data.read_only); }
            set { data.read_only = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("collapsible", "int(1)", isNullable: false)]
        public bool Collapsible
        {
            get { return ERPNextConverter.IntToBool((int)data.collapsible); }
            set { data.collapsible = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("allow_bulk_edit", "int(1)", isNullable: false)]
        public bool AllowBulkEdit
        {
            get { return ERPNextConverter.IntToBool((int)data.allow_bulk_edit); }
            set { data.allow_bulk_edit = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("collapsible_depends_on", "longtext", isNullable: true)]
        public string? CollapsibleDependsOn
        {
            get { return data.collapsible_depends_on; }
            set { data.collapsible_depends_on = value; }
        }

        [ColumnInfo("ignore_user_permissions", "int(1)", isNullable: false)]
        public bool IgnoreUserPermissions
        {
            get { return ERPNextConverter.IntToBool((int)data.ignore_user_permissions); }
            set { data.ignore_user_permissions = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("allow_on_submit", "int(1)", isNullable: false)]
        public bool AllowOnSubmit
        {
            get { return ERPNextConverter.IntToBool((int)data.allow_on_submit); }
            set { data.allow_on_submit = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("report_hide", "int(1)", isNullable: false)]
        public bool ReportHide
        {
            get { return ERPNextConverter.IntToBool((int)data.report_hide); }
            set { data.report_hide = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("remember_last_selected_value", "int(1)", isNullable: false)]
        public bool RememberLastSelectedValue
        {
            get { return ERPNextConverter.IntToBool((int)data.remember_last_selected_value); }
            set { data.remember_last_selected_value = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("hide_border", "int(1)", isNullable: false)]
        public bool HideBorder
        {
            get { return ERPNextConverter.IntToBool((int)data.hide_border); }
            set { data.hide_border = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("ignore_xss_filter", "int(1)", isNullable: false)]
        public bool IgnoreXssFilter
        {
            get { return ERPNextConverter.IntToBool((int)data.ignore_xss_filter); }
            set { data.ignore_xss_filter = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("mandatory_depends_on", "longtext", isNullable: true)]
        public string? MandatoryDependsOn
        {
            get { return data.mandatory_depends_on; }
            set { data.mandatory_depends_on = value; }
        }

        [ColumnInfo("read_only_depends_on", "longtext", isNullable: true)]
        public string? ReadOnlyDependsOn
        {
            get { return data.read_only_depends_on; }
            set { data.read_only_depends_on = value; }
        }

        [ColumnInfo("in_filter", "int(1)", isNullable: false)]
        public bool InFilter
        {
            get { return ERPNextConverter.IntToBool((int)data.in_filter); }
            set { data.in_filter = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("hide_seconds", "int(1)", isNullable: false)]
        public bool HideSeconds
        {
            get { return ERPNextConverter.IntToBool((int)data.hide_seconds); }
            set { data.hide_seconds = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("hide_days", "int(1)", isNullable: false)]
        public bool HideDays
        {
            get { return ERPNextConverter.IntToBool((int)data.hide_days); }
            set { data.hide_days = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("description", "text", isNullable: true)]
        public string? Description
        {
            get { return data.description; }
            set { data.description = value; }
        }

        [ColumnInfo("print_hide", "int(1)", isNullable: false)]
        public bool PrintHide
        {
            get { return ERPNextConverter.IntToBool((int)data.print_hide); }
            set { data.print_hide = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("print_hide_if_no_value", "int(1)", isNullable: false)]
        public bool PrintHideIfNoValue
        {
            get { return ERPNextConverter.IntToBool((int)data.print_hide_if_no_value); }
            set { data.print_hide_if_no_value = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("print_width", "varchar(140)", isNullable: true)]
        public string? PrintWidth
        {
            get { return data.print_width; }
            set { data.print_width = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("columns", "int(11)", isNullable: false)]
        public int Columns
        {
            get { return data.columns; }
            set { data.columns = value; }
        }

        [ColumnInfo("width", "varchar(140)", isNullable: true)]
        public string? Width
        {
            get { return data.width; }
            set { data.width = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("is_custom_field", "int(1)", isNullable: false)]
        public bool IsCustomField
        {
            get { return ERPNextConverter.IntToBool((int)data.is_custom_field); }
            set { data.is_custom_field = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("parent", "varchar(140)", isNullable: true)]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parentfield", "varchar(140)", isNullable: true)]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parenttype", "varchar(140)", isNullable: true)]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = ERPNextConverter.TruncateString(value, 140); }
        }


    }
}

