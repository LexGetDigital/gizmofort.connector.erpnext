/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Setup.Company
{
    public partial class ERP_Setup_Company : ERPNextObjectBase
    {
        public ERP_Setup_Company() : this(new ERPObject(_DocType.Setup_Company)) { }
        public ERP_Setup_Company(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("company_name", "varchar(140)", isNullable: true)]
        public string? CompanyName
        {
            get { return data.company_name; }
            set { data.company_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("abbr", "varchar(140)", isNullable: true)]
        public string? Abbr
        {
            get { return data.abbr; }
            set { data.abbr = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_currency", "varchar(140)", isNullable: true)]
        public string? DefaultCurrency
        {
            get { return data.default_currency; }
            set { data.default_currency = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("country", "varchar(140)", isNullable: true)]
        public string? Country
        {
            get { return data.country; }
            set { data.country = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("is_group", "int(1)", isNullable: false)]
        public bool IsGroup
        {
            get { return ERPNextConverter.IntToBool((int)data.is_group); }
            set { data.is_group = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("default_holiday_list", "varchar(140)", isNullable: true)]
        public string? DefaultHolidayList
        {
            get { return data.default_holiday_list; }
            set { data.default_holiday_list = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_letter_head", "varchar(140)", isNullable: true)]
        public string? DefaultLetterHead
        {
            get { return data.default_letter_head; }
            set { data.default_letter_head = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("tax_id", "varchar(140)", isNullable: true)]
        public string? TaxId
        {
            get { return data.tax_id; }
            set { data.tax_id = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("domain", "varchar(140)", isNullable: true)]
        public string? Domain
        {
            get { return data.domain; }
            set { data.domain = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("date_of_establishment", "date", isNullable: true)]
        public DateOnly? DateOfEstablishment
        {
            get { return ERPNextConverter.StringToDateOnly(data.date_of_establishment); }
            set { data.date_of_establishment = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("parent_company", "varchar(140)", isNullable: true)]
        public string? ParentCompany
        {
            get { return data.parent_company; }
            set { data.parent_company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("company_logo", "text", isNullable: true)]
        public string? CompanyLogo
        {
            get { return data.company_logo; }
            set { data.company_logo = value; }
        }

        [ColumnInfo("date_of_incorporation", "date", isNullable: true)]
        public DateOnly? DateOfIncorporation
        {
            get { return ERPNextConverter.StringToDateOnly(data.date_of_incorporation); }
            set { data.date_of_incorporation = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("phone_no", "varchar(140)", isNullable: true)]
        public string? PhoneNo
        {
            get { return data.phone_no; }
            set { data.phone_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("email", "varchar(140)", isNullable: true)]
        public string? Email
        {
            get { return data.email; }
            set { data.email = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("company_description", "longtext", isNullable: true)]
        public string? CompanyDescription
        {
            get { return data.company_description; }
            set { data.company_description = value; }
        }

        [ColumnInfo("date_of_commencement", "date", isNullable: true)]
        public DateOnly? DateOfCommencement
        {
            get { return ERPNextConverter.StringToDateOnly(data.date_of_commencement); }
            set { data.date_of_commencement = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("fax", "varchar(140)", isNullable: true)]
        public string? Fax
        {
            get { return data.fax; }
            set { data.fax = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("website", "varchar(140)", isNullable: true)]
        public string? Website
        {
            get { return data.website; }
            set { data.website = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("create_chart_of_accounts_based_on", "varchar(140)", isNullable: true)]
        public string? CreateChartOfAccountsBasedOn
        {
            get { return data.create_chart_of_accounts_based_on; }
            set { data.create_chart_of_accounts_based_on = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("existing_company", "varchar(140)", isNullable: true)]
        public string? ExistingCompany
        {
            get { return data.existing_company; }
            set { data.existing_company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("chart_of_accounts", "varchar(140)", isNullable: true)]
        public string? ChartOfAccounts
        {
            get { return data.chart_of_accounts; }
            set { data.chart_of_accounts = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_buying_terms", "varchar(140)", isNullable: true)]
        public string? DefaultBuyingTerms
        {
            get { return data.default_buying_terms; }
            set { data.default_buying_terms = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("sales_monthly_history", "text", isNullable: true)]
        public string? SalesMonthlyHistory
        {
            get { return data.sales_monthly_history; }
            set { data.sales_monthly_history = value; }
        }

        [ColumnInfo("monthly_sales_target", "decimal(21,9)", isNullable: false)]
        public decimal MonthlySalesTarget
        {
            get { return data.monthly_sales_target; }
            set { data.monthly_sales_target = value; }
        }

        [ColumnInfo("total_monthly_sales", "decimal(21,9)", isNullable: false)]
        public decimal TotalMonthlySales
        {
            get { return data.total_monthly_sales; }
            set { data.total_monthly_sales = value; }
        }

        [ColumnInfo("default_selling_terms", "varchar(140)", isNullable: true)]
        public string? DefaultSellingTerms
        {
            get { return data.default_selling_terms; }
            set { data.default_selling_terms = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_warehouse_for_sales_return", "varchar(140)", isNullable: true)]
        public string? DefaultWarehouseForSalesReturn
        {
            get { return data.default_warehouse_for_sales_return; }
            set { data.default_warehouse_for_sales_return = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("credit_limit", "decimal(21,9)", isNullable: false)]
        public decimal CreditLimit
        {
            get { return data.credit_limit; }
            set { data.credit_limit = value; }
        }

        [ColumnInfo("transactions_annual_history", "longtext", isNullable: true)]
        public string? TransactionsAnnualHistory
        {
            get { return data.transactions_annual_history; }
            set { data.transactions_annual_history = value; }
        }

        [ColumnInfo("default_bank_account", "varchar(140)", isNullable: true)]
        public string? DefaultBankAccount
        {
            get { return data.default_bank_account; }
            set { data.default_bank_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_cash_account", "varchar(140)", isNullable: true)]
        public string? DefaultCashAccount
        {
            get { return data.default_cash_account; }
            set { data.default_cash_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_receivable_account", "varchar(140)", isNullable: true)]
        public string? DefaultReceivableAccount
        {
            get { return data.default_receivable_account; }
            set { data.default_receivable_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("round_off_account", "varchar(140)", isNullable: true)]
        public string? RoundOffAccount
        {
            get { return data.round_off_account; }
            set { data.round_off_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("round_off_cost_center", "varchar(140)", isNullable: true)]
        public string? RoundOffCostCenter
        {
            get { return data.round_off_cost_center; }
            set { data.round_off_cost_center = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("write_off_account", "varchar(140)", isNullable: true)]
        public string? WriteOffAccount
        {
            get { return data.write_off_account; }
            set { data.write_off_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("exchange_gain_loss_account", "varchar(140)", isNullable: true)]
        public string? ExchangeGainLossAccount
        {
            get { return data.exchange_gain_loss_account; }
            set { data.exchange_gain_loss_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("unrealized_exchange_gain_loss_account", "varchar(140)", isNullable: true)]
        public string? UnrealizedExchangeGainLossAccount
        {
            get { return data.unrealized_exchange_gain_loss_account; }
            set { data.unrealized_exchange_gain_loss_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("unrealized_profit_loss_account", "varchar(140)", isNullable: true)]
        public string? UnrealizedProfitLossAccount
        {
            get { return data.unrealized_profit_loss_account; }
            set { data.unrealized_profit_loss_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("allow_account_creation_against_child_company", "int(1)", isNullable: false)]
        public bool AllowAccountCreationAgainstChildCompany
        {
            get { return ERPNextConverter.IntToBool((int)data.allow_account_creation_against_child_company); }
            set { data.allow_account_creation_against_child_company = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("default_payable_account", "varchar(140)", isNullable: true)]
        public string? DefaultPayableAccount
        {
            get { return data.default_payable_account; }
            set { data.default_payable_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_expense_account", "varchar(140)", isNullable: true)]
        public string? DefaultExpenseAccount
        {
            get { return data.default_expense_account; }
            set { data.default_expense_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_income_account", "varchar(140)", isNullable: true)]
        public string? DefaultIncomeAccount
        {
            get { return data.default_income_account; }
            set { data.default_income_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_deferred_revenue_account", "varchar(140)", isNullable: true)]
        public string? DefaultDeferredRevenueAccount
        {
            get { return data.default_deferred_revenue_account; }
            set { data.default_deferred_revenue_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_deferred_expense_account", "varchar(140)", isNullable: true)]
        public string? DefaultDeferredExpenseAccount
        {
            get { return data.default_deferred_expense_account; }
            set { data.default_deferred_expense_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_discount_account", "varchar(140)", isNullable: true)]
        public string? DefaultDiscountAccount
        {
            get { return data.default_discount_account; }
            set { data.default_discount_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("payment_terms", "varchar(140)", isNullable: true)]
        public string? PaymentTerms
        {
            get { return data.payment_terms; }
            set { data.payment_terms = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("cost_center", "varchar(140)", isNullable: true)]
        public string? CostCenter
        {
            get { return data.cost_center; }
            set { data.cost_center = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_finance_book", "varchar(140)", isNullable: true)]
        public string? DefaultFinanceBook
        {
            get { return data.default_finance_book; }
            set { data.default_finance_book = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("enable_perpetual_inventory", "int(1)", isNullable: false)]
        public bool EnablePerpetualInventory
        {
            get { return ERPNextConverter.IntToBool((int)data.enable_perpetual_inventory); }
            set { data.enable_perpetual_inventory = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("enable_provisional_accounting_for_non_stock_items", "int(1)", isNullable: false)]
        public bool EnableProvisionalAccountingForNonStockItems
        {
            get { return ERPNextConverter.IntToBool((int)data.enable_provisional_accounting_for_non_stock_items); }
            set { data.enable_provisional_accounting_for_non_stock_items = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("default_inventory_account", "varchar(140)", isNullable: true)]
        public string? DefaultInventoryAccount
        {
            get { return data.default_inventory_account; }
            set { data.default_inventory_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("stock_adjustment_account", "varchar(140)", isNullable: true)]
        public string? StockAdjustmentAccount
        {
            get { return data.stock_adjustment_account; }
            set { data.stock_adjustment_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_in_transit_warehouse", "varchar(140)", isNullable: true)]
        public string? DefaultInTransitWarehouse
        {
            get { return data.default_in_transit_warehouse; }
            set { data.default_in_transit_warehouse = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("stock_received_but_not_billed", "varchar(140)", isNullable: true)]
        public string? StockReceivedButNotBilled
        {
            get { return data.stock_received_but_not_billed; }
            set { data.stock_received_but_not_billed = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("default_provisional_account", "varchar(140)", isNullable: true)]
        public string? DefaultProvisionalAccount
        {
            get { return data.default_provisional_account; }
            set { data.default_provisional_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("expenses_included_in_valuation", "varchar(140)", isNullable: true)]
        public string? ExpensesIncludedInValuation
        {
            get { return data.expenses_included_in_valuation; }
            set { data.expenses_included_in_valuation = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("accumulated_depreciation_account", "varchar(140)", isNullable: true)]
        public string? AccumulatedDepreciationAccount
        {
            get { return data.accumulated_depreciation_account; }
            set { data.accumulated_depreciation_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("depreciation_expense_account", "varchar(140)", isNullable: true)]
        public string? DepreciationExpenseAccount
        {
            get { return data.depreciation_expense_account; }
            set { data.depreciation_expense_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("series_for_depreciation_entry", "varchar(140)", isNullable: true)]
        public string? SeriesForDepreciationEntry
        {
            get { return data.series_for_depreciation_entry; }
            set { data.series_for_depreciation_entry = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("expenses_included_in_asset_valuation", "varchar(140)", isNullable: true)]
        public string? ExpensesIncludedInAssetValuation
        {
            get { return data.expenses_included_in_asset_valuation; }
            set { data.expenses_included_in_asset_valuation = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("disposal_account", "varchar(140)", isNullable: true)]
        public string? DisposalAccount
        {
            get { return data.disposal_account; }
            set { data.disposal_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("depreciation_cost_center", "varchar(140)", isNullable: true)]
        public string? DepreciationCostCenter
        {
            get { return data.depreciation_cost_center; }
            set { data.depreciation_cost_center = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("capital_work_in_progress_account", "varchar(140)", isNullable: true)]
        public string? CapitalWorkInProgressAccount
        {
            get { return data.capital_work_in_progress_account; }
            set { data.capital_work_in_progress_account = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("asset_received_but_not_billed", "varchar(140)", isNullable: true)]
        public string? AssetReceivedButNotBilled
        {
            get { return data.asset_received_but_not_billed; }
            set { data.asset_received_but_not_billed = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("exception_budget_approver_role", "varchar(140)", isNullable: true)]
        public string? ExceptionBudgetApproverRole
        {
            get { return data.exception_budget_approver_role; }
            set { data.exception_budget_approver_role = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("registration_details", "longtext", isNullable: true)]
        public string? RegistrationDetails
        {
            get { return data.registration_details; }
            set { data.registration_details = value; }
        }

        [ColumnInfo("lft", "int(11)", isNullable: false)]
        public int Lft
        {
            get { return data.lft; }
            set { data.lft = value; }
        }

        [ColumnInfo("rgt", "int(11)", isNullable: false)]
        public int Rgt
        {
            get { return data.rgt; }
            set { data.rgt = value; }
        }

        [ColumnInfo("old_parent", "varchar(140)", isNullable: true)]
        public string? OldParent
        {
            get { return data.old_parent; }
            set { data.old_parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

