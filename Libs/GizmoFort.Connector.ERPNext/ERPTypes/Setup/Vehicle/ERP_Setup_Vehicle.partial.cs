/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Setup.Vehicle
{
    public partial class ERP_Setup_Vehicle : ERPNextObjectBase
    {
        public ERP_Setup_Vehicle() : this(new ERPObject(_DocType.Setup_Vehicle)) { }
        public ERP_Setup_Vehicle(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("license_plate", "varchar(140)", isNullable: true)]
        public string? LicensePlate
        {
            get { return data.license_plate; }
            set { data.license_plate = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("make", "varchar(140)", isNullable: true)]
        public string? Make
        {
            get { return data.make; }
            set { data.make = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("model", "varchar(140)", isNullable: true)]
        public string? Model
        {
            get { return data.model; }
            set { data.model = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("last_odometer", "int(11)", isNullable: false)]
        public int LastOdometer
        {
            get { return data.last_odometer; }
            set { data.last_odometer = value; }
        }

        [ColumnInfo("acquisition_date", "date", isNullable: true)]
        public DateOnly? AcquisitionDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.acquisition_date); }
            set { data.acquisition_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("location", "varchar(140)", isNullable: true)]
        public string? Location
        {
            get { return data.location; }
            set { data.location = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("chassis_no", "varchar(140)", isNullable: true)]
        public string? ChassisNo
        {
            get { return data.chassis_no; }
            set { data.chassis_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("vehicle_value", "decimal(21,9)", isNullable: false)]
        public decimal VehicleValue
        {
            get { return data.vehicle_value; }
            set { data.vehicle_value = value; }
        }

        [ColumnInfo("employee", "varchar(140)", isNullable: true)]
        public string? Employee
        {
            get { return data.employee; }
            set { data.employee = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("insurance_company", "varchar(140)", isNullable: true)]
        public string? InsuranceCompany
        {
            get { return data.insurance_company; }
            set { data.insurance_company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("policy_no", "varchar(140)", isNullable: true)]
        public string? PolicyNo
        {
            get { return data.policy_no; }
            set { data.policy_no = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("start_date", "date", isNullable: true)]
        public DateOnly? StartDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.start_date); }
            set { data.start_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("end_date", "date", isNullable: true)]
        public DateOnly? EndDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.end_date); }
            set { data.end_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("fuel_type", "varchar(140)", isNullable: true)]
        public string? FuelType
        {
            get { return data.fuel_type; }
            set { data.fuel_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("uom", "varchar(140)", isNullable: true)]
        public string? Uom
        {
            get { return data.uom; }
            set { data.uom = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("carbon_check_date", "date", isNullable: true)]
        public DateOnly? CarbonCheckDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.carbon_check_date); }
            set { data.carbon_check_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("color", "varchar(140)", isNullable: true)]
        public string? Color
        {
            get { return data.color; }
            set { data.color = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("wheels", "int(11)", isNullable: false)]
        public int Wheels
        {
            get { return data.wheels; }
            set { data.wheels = value; }
        }

        [ColumnInfo("doors", "int(11)", isNullable: false)]
        public int Doors
        {
            get { return data.doors; }
            set { data.doors = value; }
        }

        [ColumnInfo("amended_from", "varchar(140)", isNullable: true)]
        public string? AmendedFrom
        {
            get { return data.amended_from; }
            set { data.amended_from = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

