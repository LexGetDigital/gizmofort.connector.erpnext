/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Projects.Timesheet
{
    public partial class ERP_Projects_Timesheet : ERPNextObjectBase
    {
        public ERP_Projects_Timesheet() : this(new ERPObject(_DocType.Projects_Timesheet)) { }
        public ERP_Projects_Timesheet(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("title", "varchar(140)", isNullable: true)]
        public string? Title
        {
            get { return data.title; }
            set { data.title = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("naming_series", "varchar(140)", isNullable: true)]
        public string? NamingSeries
        {
            get { return data.naming_series; }
            set { data.naming_series = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("customer", "varchar(140)", isNullable: true)]
        public string? Customer
        {
            get { return data.customer; }
            set { data.customer = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("currency", "varchar(140)", isNullable: true)]
        public string? Currency
        {
            get { return data.currency; }
            set { data.currency = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("exchange_rate", "decimal(21,9)", isNullable: false)]
        public decimal ExchangeRate
        {
            get { return data.exchange_rate; }
            set { data.exchange_rate = value; }
        }

        [ColumnInfo("sales_invoice", "varchar(140)", isNullable: true)]
        public string? SalesInvoice
        {
            get { return data.sales_invoice; }
            set { data.sales_invoice = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("status", "varchar(140)", isNullable: true)]
        public string? Status
        {
            get { return data.status; }
            set { data.status = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parent_project", "varchar(140)", isNullable: true)]
        public string? ParentProject
        {
            get { return data.parent_project; }
            set { data.parent_project = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("employee", "varchar(140)", isNullable: true)]
        public string? Employee
        {
            get { return data.employee; }
            set { data.employee = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("employee_name", "varchar(140)", isNullable: true)]
        public string? EmployeeName
        {
            get { return data.employee_name; }
            set { data.employee_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("department", "varchar(140)", isNullable: true)]
        public string? Department
        {
            get { return data.department; }
            set { data.department = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("user", "varchar(140)", isNullable: true)]
        public string? User
        {
            get { return data.user; }
            set { data.user = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("start_date", "date", isNullable: true)]
        public DateOnly? StartDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.start_date); }
            set { data.start_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("end_date", "date", isNullable: true)]
        public DateOnly? EndDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.end_date); }
            set { data.end_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("total_hours", "decimal(21,9)", isNullable: false)]
        public decimal TotalHours
        {
            get { return data.total_hours; }
            set { data.total_hours = value; }
        }

        [ColumnInfo("total_billable_hours", "decimal(21,9)", isNullable: false)]
        public decimal TotalBillableHours
        {
            get { return data.total_billable_hours; }
            set { data.total_billable_hours = value; }
        }

        [ColumnInfo("base_total_billable_amount", "decimal(21,9)", isNullable: false)]
        public decimal BaseTotalBillableAmount
        {
            get { return data.base_total_billable_amount; }
            set { data.base_total_billable_amount = value; }
        }

        [ColumnInfo("base_total_billed_amount", "decimal(21,9)", isNullable: false)]
        public decimal BaseTotalBilledAmount
        {
            get { return data.base_total_billed_amount; }
            set { data.base_total_billed_amount = value; }
        }

        [ColumnInfo("base_total_costing_amount", "decimal(21,9)", isNullable: false)]
        public decimal BaseTotalCostingAmount
        {
            get { return data.base_total_costing_amount; }
            set { data.base_total_costing_amount = value; }
        }

        [ColumnInfo("total_billed_hours", "decimal(21,9)", isNullable: false)]
        public decimal TotalBilledHours
        {
            get { return data.total_billed_hours; }
            set { data.total_billed_hours = value; }
        }

        [ColumnInfo("total_billable_amount", "decimal(21,9)", isNullable: false)]
        public decimal TotalBillableAmount
        {
            get { return data.total_billable_amount; }
            set { data.total_billable_amount = value; }
        }

        [ColumnInfo("total_billed_amount", "decimal(21,9)", isNullable: false)]
        public decimal TotalBilledAmount
        {
            get { return data.total_billed_amount; }
            set { data.total_billed_amount = value; }
        }

        [ColumnInfo("total_costing_amount", "decimal(21,9)", isNullable: false)]
        public decimal TotalCostingAmount
        {
            get { return data.total_costing_amount; }
            set { data.total_costing_amount = value; }
        }

        [ColumnInfo("per_billed", "decimal(21,9)", isNullable: false)]
        public decimal PerBilled
        {
            get { return data.per_billed; }
            set { data.per_billed = value; }
        }

        [ColumnInfo("note", "longtext", isNullable: true)]
        public string? Note
        {
            get { return data.note; }
            set { data.note = value; }
        }

        [ColumnInfo("amended_from", "varchar(140)", isNullable: true)]
        public string? AmendedFrom
        {
            get { return data.amended_from; }
            set { data.amended_from = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }


    }
}

