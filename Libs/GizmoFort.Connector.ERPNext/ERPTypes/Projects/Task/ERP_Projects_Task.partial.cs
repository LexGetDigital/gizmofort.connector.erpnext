/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/13/2022 7:48:39 PM
********************************************************************/

using System;
using System.ComponentModel.DataAnnotations.Schema;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;
using System.Text.Json;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Projects.Task
{
    public partial class ERP_Projects_Task : ERPNextObjectBase
    {
        public ERP_Projects_Task() : this(new ERPObject(_DocType.Projects_Task)) { }
        public ERP_Projects_Task(ERPObject obj) : base(obj) { }

        //public static string? GetColumnName(string propertyName)
        //{
        //    return ERPNextObjectBase.GetColumnName<ERP_Projects_Task>(propertyName);
        //}

        //public static string? GetPropertyName(string columnName)
        //{
        //    return ERPNextObjectBase.GetPropertyName<ERP_Projects_Task>(columnName);
        //}

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("subject", "varchar(140)", isNullable: true)]
        public string? Subject
        {
            get { return data.subject; }
            set { data.subject = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("project", "varchar(140)", isNullable: true)]
        public string? Project
        {
            get { return data.project; }
            set { data.project = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("issue", "varchar(140)", isNullable: true)]
        public string? Issue
        {
            get { return data.issue; }
            set { data.issue = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("type", "varchar(140)", isNullable: true)]
        public string? Type
        {
            get { return data.type; }
            set { data.type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("color", "varchar(140)", isNullable: true)]
        public string? Color
        {
            get { return data.color; }
            set { data.color = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("is_group", "int(1)", isNullable: false)]
        public bool IsGroup
        {
            get { return ERPNextConverter.IntToBool((int)data.is_group); }
            set { data.is_group = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("is_template", "int(1)", isNullable: false)]
        public bool IsTemplate
        {
            get { return ERPNextConverter.IntToBool((int)data.is_template); }
            set { data.is_template = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("status", "varchar(140)", isNullable: true)]
        public string? Status
        {
            get { return data.status; }
            set { data.status = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("priority", "varchar(140)", isNullable: true)]
        public string? Priority
        {
            get { return data.priority; }
            set { data.priority = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("task_weight", "decimal(21,9)", isNullable: false)]
        public decimal TaskWeight
        {
            get { return data.task_weight; }
            set { data.task_weight = value; }
        }

        [ColumnInfo("parent_task", "varchar(140)", isNullable: true)]
        public string? ParentTask
        {
            get { return data.parent_task; }
            set { data.parent_task = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("completed_by", "varchar(140)", isNullable: true)]
        public string? CompletedBy
        {
            get { return data.completed_by; }
            set { data.completed_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("completed_on", "date", isNullable: true)]
        public DateOnly? CompletedOn
        {
            get { return ERPNextConverter.StringToDateOnly(data.completed_on); }
            set { data.completed_on = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("exp_start_date", "date", isNullable: true)]
        public DateOnly? ExpStartDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.exp_start_date); }
            set { data.exp_start_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("expected_time", "decimal(21,9)", isNullable: false)]
        public decimal ExpectedTime
        {
            get { return data.expected_time; }
            set { data.expected_time = value; }
        }

        [ColumnInfo("start", "int(11)", isNullable: false)]
        public int Start
        {
            get { return data.start; }
            set { data.start = value; }
        }

        [ColumnInfo("exp_end_date", "date", isNullable: true)]
        public DateOnly? ExpEndDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.exp_end_date); }
            set { data.exp_end_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("progress", "decimal(21,9)", isNullable: false)]
        public decimal Progress
        {
            get { return data.progress; }
            set { data.progress = value; }
        }

        [ColumnInfo("duration", "int(11)", isNullable: false)]
        public int Duration
        {
            get { return data.duration; }
            set { data.duration = value; }
        }

        [ColumnInfo("is_milestone", "int(1)", isNullable: false)]
        public bool IsMilestone
        {
            get { return ERPNextConverter.IntToBool((int)data.is_milestone); }
            set { data.is_milestone = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("description", "longtext", isNullable: true)]
        public string? Description
        {
            get { return data.description; }
            set { data.description = value; }
        }

        [ColumnInfo("depends_on_tasks", "longtext", isNullable: true)]
        public string? DependsOnTasks
        {
            get { return data.depends_on_tasks; }
            set { data.depends_on_tasks = value; }
        }

        [ColumnInfo("act_start_date", "date", isNullable: true)]
        public DateOnly? ActStartDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.act_start_date); }
            set { data.act_start_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("actual_time", "decimal(21,9)", isNullable: false)]
        public decimal ActualTime
        {
            get { return data.actual_time; }
            set { data.actual_time = value; }
        }

        [ColumnInfo("act_end_date", "date", isNullable: true)]
        public DateOnly? ActEndDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.act_end_date); }
            set { data.act_end_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("total_costing_amount", "decimal(21,9)", isNullable: false)]
        public decimal TotalCostingAmount
        {
            get { return data.total_costing_amount; }
            set { data.total_costing_amount = value; }
        }

        [ColumnInfo("total_billing_amount", "decimal(21,9)", isNullable: false)]
        public decimal TotalBillingAmount
        {
            get { return data.total_billing_amount; }
            set { data.total_billing_amount = value; }
        }

        [ColumnInfo("review_date", "date", isNullable: true)]
        public DateOnly? ReviewDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.review_date); }
            set { data.review_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("closing_date", "date", isNullable: true)]
        public DateOnly? ClosingDate
        {
            get { return ERPNextConverter.StringToDateOnly(data.closing_date); }
            set { data.closing_date = ERPNextConverter.DateOnlyToString(value); }
        }

        [ColumnInfo("department", "varchar(140)", isNullable: true)]
        public string? Department
        {
            get { return data.department; }
            set { data.department = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("company", "varchar(140)", isNullable: true)]
        public string? Company
        {
            get { return data.company; }
            set { data.company = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("lft", "int(11)", isNullable: false)]
        public int Lft
        {
            get { return data.lft; }
            set { data.lft = value; }
        }

        [ColumnInfo("rgt", "int(11)", isNullable: false)]
        public int Rgt
        {
            get { return data.rgt; }
            set { data.rgt = value; }
        }

        [ColumnInfo("old_parent", "varchar(140)", isNullable: true)]
        public string? OldParent
        {
            get { return data.old_parent; }
            set { data.old_parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("_user_tags", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _UserTags
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._user_tags; }
            set { data._user_tags = value; }
        }

        [ColumnInfo("_comments", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Comments
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._comments; }
            set { data._comments = value; }
        }

        [ColumnInfo("_assign", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Assign
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._assign; }
            set { data._assign = value; }
        }

        [ColumnInfo("_liked_by", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _LikedBy
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._liked_by; }
            set { data._liked_by = value; }
        }

        [ColumnInfo("_seen", "text", isNullable: true)]
#pragma warning disable IDE1006 // Naming Styles
        public string? _Seen
#pragma warning restore IDE1006 // Naming Styles
        {
            get { return data._seen; }
            set { data._seen = value; }
        }


    }
}

