/********************************************************************
    This file has been auto-generated by GenerateCodeFromSchemaJson
    created date: 9/14/2022 8:42:56 AM
********************************************************************/

using System;
using GizmoFort.Connector.ERPNext.PublicTypes;
using GizmoFort.Connector.ERPNext.WrapperTypes;
using GizmoFort.Connector.ERPNext.DataAnnotations;
using GizmoFort.Connector.ERPNext.Serialization;
using _DocType = GizmoFort.Connector.ERPNext.PublicTypes.DocType;

namespace GizmoFort.Connector.ERPNext.ERPTypes.Projects.TimesheetDetail
{
    public partial class ERP_Projects_TimesheetDetail : ERPNextObjectBase
    {
        public ERP_Projects_TimesheetDetail() : this(new ERPObject(_DocType.Projects_TimesheetDetail)) { }
        public ERP_Projects_TimesheetDetail(ERPObject obj) : base(obj) { }

        [ColumnInfo("name", "varchar(140)", isNullable: false)]
        public string Name
        {
            get { return data.name; }
            set { data.name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("creation", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Creation
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.creation); }
            set { data.creation = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified", "datetime(6)", isNullable: true)]
        public DateTimeOffset? Modified
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.modified); }
            set { data.modified = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("modified_by", "varchar(140)", isNullable: true)]
        public string? ModifiedBy
        {
            get { return data.modified_by; }
            set { data.modified_by = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("owner", "varchar(140)", isNullable: true)]
        public string? Owner
        {
            get { return data.owner; }
            set { data.owner = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("docstatus", "int(1)", isNullable: false)]
        public Docstatus Docstatus
        {
            get { return (Docstatus)data.docstatus; }
            set { data.docstatus = (int)value; }
        }

        [ColumnInfo("idx", "int(8)", isNullable: false)]
        public int Idx
        {
            get { return data.idx; }
            set { data.idx = value; }
        }

        [ColumnInfo("activity_type", "varchar(140)", isNullable: true)]
        public string? ActivityType
        {
            get { return data.activity_type; }
            set { data.activity_type = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("from_time", "datetime(6)", isNullable: true)]
        public DateTimeOffset? FromTime
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.from_time); }
            set { data.from_time = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("description", "text", isNullable: true)]
        public string? Description
        {
            get { return data.description; }
            set { data.description = value; }
        }

        [ColumnInfo("expected_hours", "decimal(21,9)", isNullable: false)]
        public decimal ExpectedHours
        {
            get { return data.expected_hours; }
            set { data.expected_hours = value; }
        }

        [ColumnInfo("to_time", "datetime(6)", isNullable: true)]
        public DateTimeOffset? ToTime
        {
            get { return ERPNextConverter.StringToDateTimeOffset(data.to_time); }
            set { data.to_time = ERPNextConverter.DateTimeOffsetToString(value, 6); }
        }

        [ColumnInfo("hours", "decimal(21,9)", isNullable: false)]
        public decimal Hours
        {
            get { return data.hours; }
            set { data.hours = value; }
        }

        [ColumnInfo("completed", "int(1)", isNullable: false)]
        public bool Completed
        {
            get { return ERPNextConverter.IntToBool((int)data.completed); }
            set { data.completed = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("project", "varchar(140)", isNullable: true)]
        public string? Project
        {
            get { return data.project; }
            set { data.project = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("project_name", "varchar(140)", isNullable: true)]
        public string? ProjectName
        {
            get { return data.project_name; }
            set { data.project_name = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("task", "varchar(140)", isNullable: true)]
        public string? Task
        {
            get { return data.task; }
            set { data.task = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("is_billable", "int(1)", isNullable: false)]
        public bool IsBillable
        {
            get { return ERPNextConverter.IntToBool((int)data.is_billable); }
            set { data.is_billable = ERPNextConverter.BoolToInt(value); }
        }

        [ColumnInfo("sales_invoice", "varchar(140)", isNullable: true)]
        public string? SalesInvoice
        {
            get { return data.sales_invoice; }
            set { data.sales_invoice = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("billing_hours", "decimal(21,9)", isNullable: false)]
        public decimal BillingHours
        {
            get { return data.billing_hours; }
            set { data.billing_hours = value; }
        }

        [ColumnInfo("base_billing_rate", "decimal(21,9)", isNullable: false)]
        public decimal BaseBillingRate
        {
            get { return data.base_billing_rate; }
            set { data.base_billing_rate = value; }
        }

        [ColumnInfo("base_billing_amount", "decimal(21,9)", isNullable: false)]
        public decimal BaseBillingAmount
        {
            get { return data.base_billing_amount; }
            set { data.base_billing_amount = value; }
        }

        [ColumnInfo("base_costing_rate", "decimal(21,9)", isNullable: false)]
        public decimal BaseCostingRate
        {
            get { return data.base_costing_rate; }
            set { data.base_costing_rate = value; }
        }

        [ColumnInfo("base_costing_amount", "decimal(21,9)", isNullable: false)]
        public decimal BaseCostingAmount
        {
            get { return data.base_costing_amount; }
            set { data.base_costing_amount = value; }
        }

        [ColumnInfo("billing_rate", "decimal(21,9)", isNullable: false)]
        public decimal BillingRate
        {
            get { return data.billing_rate; }
            set { data.billing_rate = value; }
        }

        [ColumnInfo("billing_amount", "decimal(21,9)", isNullable: false)]
        public decimal BillingAmount
        {
            get { return data.billing_amount; }
            set { data.billing_amount = value; }
        }

        [ColumnInfo("costing_rate", "decimal(21,9)", isNullable: false)]
        public decimal CostingRate
        {
            get { return data.costing_rate; }
            set { data.costing_rate = value; }
        }

        [ColumnInfo("costing_amount", "decimal(21,9)", isNullable: false)]
        public decimal CostingAmount
        {
            get { return data.costing_amount; }
            set { data.costing_amount = value; }
        }

        [ColumnInfo("parent", "varchar(140)", isNullable: true)]
        public string? Parent
        {
            get { return data.parent; }
            set { data.parent = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parentfield", "varchar(140)", isNullable: true)]
        public string? Parentfield
        {
            get { return data.parentfield; }
            set { data.parentfield = ERPNextConverter.TruncateString(value, 140); }
        }

        [ColumnInfo("parenttype", "varchar(140)", isNullable: true)]
        public string? Parenttype
        {
            get { return data.parenttype; }
            set { data.parenttype = ERPNextConverter.TruncateString(value, 140); }
        }


    }
}

